(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{132:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),b=a,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||i;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),i=(n(0),n(132)),o={id:"usage",title:"Usage",sidebar_label:"Usage"},c={unversionedId:"getting_started/usage",id:"getting_started/usage",isDocsHomePage:!1,title:"Usage",description:"osh-js can be used with ES6 modules, plain JavaScript and module loaders.",source:"@site/docs/getting_started/usage.md",slug:"/getting_started/usage",permalink:"/v2.0.0/documentationV2/docs/getting_started/usage",version:"current",sidebar_label:"Usage",sidebar:"someSidebar",previous:{title:"Integration",permalink:"/v2.0.0/documentationV2/docs/getting_started/integration"},next:{title:"DataSources",permalink:"/v2.0.0/documentationV2/docs/datasources/index"}},l=[{value:"Visualize GPS data",id:"visualize-gps-data",children:[{value:"Create the HTML element",id:"create-the-html-element",children:[]},{value:"Create the DataSource instance",id:"create-the-datasource-instance",children:[]},{value:"Create the Styler instance",id:"create-the-styler-instance",children:[]},{value:"Create the View instance",id:"create-the-view-instance",children:[]},{value:"Start the Stream",id:"start-the-stream",children:[]}]}],s={rightToc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"osh-js can be used with ES6 modules, plain JavaScript and module loaders."),Object(i.b)("h2",{id:"visualize-gps-data"},"Visualize GPS data"),Object(i.b)("p",null,"To visualize a data, we need to instantiate a ",Object(i.b)("inlineCode",{parentName:"p"},"DataSource"),", ",Object(i.b)("inlineCode",{parentName:"p"},"View")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Styler")," classes  and a ",Object(i.b)("inlineCode",{parentName:"p"},"HTML tag")," to render the result."),Object(i.b)("h3",{id:"create-the-html-element"},"Create the HTML element"),Object(i.b)("p",null,"The HTML element is the html anchor of your View."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<div id="leafletMap"></div>\n')),Object(i.b)("h3",{id:"create-the-datasource-instance"},"Create the DataSource instance"),Object(i.b)("p",null,"The DataSource is used to define the properties allowing connecting to a OSH server and define the data parser\nto use."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import SweJson from 'osh/datareceiver/SweJson.js';\n\nlet gpsDataSource = new SweJson('android-GPS', {\n    protocol: 'ws',\n    service: 'SOS',\n    endpointUrl: 'sensiasoft.net:8181/sensorhub/sos',\n    offeringID: 'urn:android:device:060693280a28e015-sos',\n    observedProperty: 'http://sensorml.com/ont/swe/property/Location',\n    startTime: '2015-02-16T07:58:32Z',\n    endTime: '2015-02-16T08:09:00Z',\n    replaySpeed: 2\n});\n")),Object(i.b)("h3",{id:"create-the-styler-instance"},"Create the Styler instance"),Object(i.b)("p",null,"The Styler is used to style dynamically your data before rendering."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import PointMarker from 'osh/ui/styler/PointMarker.js';\n\n// style it with a moving point marker\nlet pointMarker = new PointMarker({\n    locationFunc: {\n        dataSourceIds: [gpsDataSource.getId()],\n        handler: function(rec) {\n            return {\n                x: rec.location.lon,\n                y: rec.location.lat,\n                z: rec.location.alt\n            };\n        }\n    },\n    icon: './images/car-location.png',\n    iconAnchor: [16, 65]\n});\n\n")),Object(i.b)("h3",{id:"create-the-view-instance"},"Create the View instance"),Object(i.b)("p",null,"The View defines the kind of visualization you want for your DataSource. In this example, a map render based on leaflet is used."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import LeafletView from 'osh/ui/view/map/LeafletView.js';\n\n// create Leaflet view\nlet leafletMapView = new LeafletView('leafletMap',\n    [{\n        styler: pointMarker,\n        name: 'Android Phone GPS'\n    }], {\n        autoZoomOnFirstMarker: true\n    }\n);\n")),Object(i.b)("h3",{id:"start-the-stream"},"Start the Stream"),Object(i.b)("p",null,"Finally, you can start the connection by executing:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// start streaming\ngpsDataSource.connect();\n")))}u.isMDXComponent=!0}}]);