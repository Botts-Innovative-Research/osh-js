(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export MAX_LONG */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return hasValue; });\n/* unused harmony export hasType */\n/* unused harmony export isObject */\n/* unused harmony export isArray */\n/* unused harmony export isFunction */\n/* unused harmony export assertDefined */\n/* unused harmony export assertType */\n/* unused harmony export assertBoolean */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return assertString; });\n/* unused harmony export assertNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return assertPositive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return assertObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return assertArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return assertFunction; });\n/* unused harmony export assertHasValue */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return randomUUID; });\n/* unused harmony export stampUUID */\n/* unused harmony export ParseBytes */\n/* unused harmony export ReadData */\n/* unused harmony export GetResultObject */\n/* unused harmony export isOpera */\n/* unused harmony export isFirefox */\n/* unused harmony export isSafari */\n/* unused harmony export isChrome */\n/* unused harmony export isBlink */\n/* unused harmony export isArrayIntersect */\n/* unused harmony export isElement */\n/* unused harmony export isWebWorker */\n/* unused harmony export takeScreenShot */\n/* unused harmony export removeCss */\n/* unused harmony export addCss */\n/* unused harmony export removeLastCharIfExist */\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n/** * @module Utils */\n\n/** Maximum value of a long */\nconst MAX_LONG = Math.pow(2, 53) + 1;\n/**\n * Global helper method to test if a letiable or object attribute is defined\n */\n\nfunction isDefined(v) {\n  return typeof v !== \'undefined\' && v !== null;\n}\n/**\n Global helper method to test if a letiable or object attribute has a value,\n that is it is defined and non null\n */\n\nfunction hasValue(v) {\n  return isDefined(v) && v !== null;\n}\n/**\n Global helper method to test if a letiable or object attribute is of a particular type\n */\n\nfunction hasType(v, expectedType) {\n  let hasVal = hasValue(v);\n  return hasVal && typeof v === expectedType;\n}\n/**\n Global helper method to test if a letiable or object attribute is an object\n */\n\nfunction isObject(v, letName) {\n  return hasType(v, \'object\', letName);\n}\n/**\n Global helper method to test if a letiable or object attribute is an array\n */\n\nfunction isArray(v) {\n  return isDefined(v) && Array.isArray(v);\n}\n/**\n Global helper method to test if a letiable or object attribute is a function\n */\n\nfunction isFunction(v, letName) {\n  return hasType(v, \'function\', letName);\n}\n/**\n Assert that a letiable or object attribute is defined\n **/\n\nfunction assertDefined(v, letName = \'letiable\') {\n  if (!isDefined(v)) {\n    throw letName + " must be defined";\n  }\n\n  return v;\n}\n/**\n Assert that a letiable or object attribute is defined and non-null\n **/\n\nfunction assertType(v, expectedType, letName = \'letiable\') {\n  assertDefined(v, letName);\n\n  if (typeof v !== expectedType) {\n    throw letName + " must be of type " + expectedType;\n  }\n\n  return v;\n}\n/**\n Assert that a letiable or object attribute is a string\n **/\n\nfunction assertBoolean(v, letName) {\n  return assertType(v, \'boolean\', letName);\n}\n/**\n Assert that a letiable or object attribute is a string\n **/\n\nfunction assertString(v, letName) {\n  return assertType(v, \'string\', letName);\n}\n/**\n Assert that a letiable or object attribute is a number\n **/\n\nfunction assertNumber(v, letName) {\n  return assertType(v, \'number\', letName);\n}\n/**\n Assert that a letiable or object attribute is a number\n **/\n\nfunction assertPositive(v, letName) {\n  assertNumber(v, letName);\n\n  if (v <= 0) {\n    throw letName + " must be a positive number";\n  }\n}\n/**\n Assert that a letiable or object attribute is an object\n **/\n\nfunction assertObject(v, letName) {\n  return assertType(v, \'object\', letName);\n}\n/**\n Assert that a letiable or object attribute is an object\n **/\n\nfunction assertArray(v, letName = \'letiable\') {\n  assertDefined(v, letName);\n\n  if (!Array.isArray(v)) {\n    throw letName + " must be an array";\n  }\n\n  return v;\n}\n/**\n Assert that a letiable or object attribute is a function\n **/\n\nfunction assertFunction(v, letName) {\n  return assertType(v, \'function\', letName);\n}\n/**\n Assert that a letiable or object attribute is defined and non-null\n **/\n\nfunction assertHasValue(v, letName = \'letiable\') {\n  assertDefined(v, letName);\n\n  if (!hasValue(v)) {\n    throw letName + " must not be null";\n  }\n\n  return v;\n}\n/**\n *\n * @return {String}\n */\n\nfunction randomUUID() {\n  return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0,\n        v = c === \'x\' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\n * This function stamps/embeds a UUID into an object and returns the UUID generated for it\n * @return {String}\n */\n\nfunction stampUUID(obj) {\n  obj._osh_id = obj._osh_id || randomUUID();\n  return obj._osh_id;\n} //buffer is an ArrayBuffer object, the offset if specified in bytes, and the type is a string\n//corresponding to an OGC data type.\n//See http://def.seegrid.csiro.au/sissvoc/ogc-def/resource?uri=http://www.opengis.net/def/dataType/OGC/0/\n\n/**\n *\n * @param buffer\n * @param offset\n * @param type\n * @return {*}\n */\n\nfunction ParseBytes(buffer, offset, type) {\n  let view = new DataView(buffer); //Note: There exist types not listed in the map below that have OGC definitions, but no appropriate\n  //methods or corresponding types available for parsing in javascript. They are float128, float16, signedLong,\n  //and unsignedLong\n\n  let typeMap = {\n    double: function (offset) {\n      return {\n        val: view.getFloat64(offset),\n        bytes: 8\n      };\n    },\n    float64: function (offset) {\n      return {\n        val: view.getFloat64(offset),\n        bytes: 8\n      };\n    },\n    float32: function (offset) {\n      return {\n        val: view.getFloat32(offset),\n        bytes: 4\n      };\n    },\n    signedByte: function (offset) {\n      return {\n        val: view.getInt8(offset),\n        bytes: 1\n      };\n    },\n    signedInt: function (offset) {\n      return {\n        val: view.getInt32(offset),\n        bytes: 4\n      };\n    },\n    signedShort: function (offset) {\n      return {\n        val: view.getInt16(offset),\n        bytes: 2\n      };\n    },\n    unsignedByte: function (offset) {\n      return {\n        val: view.getUint8(offset),\n        bytes: 1\n      };\n    },\n    unsignedInt: function (offset) {\n      return {\n        val: view.getUint32(offset),\n        bytes: 4\n      };\n    },\n    unsignedShort: function (offset) {\n      return {\n        val: view.getUint16(offset),\n        bytes: 2\n      };\n    } //TODO: string-utf-8:\n\n  };\n  return typeMap[type](offset);\n} //This function recursivley iterates over the resultStructure to fill in\n//values read from data which should be an ArrayBuffer containing the payload from a websocket\n\n/**\n *\n * @param struct\n * @param data\n * @param offsetBytes\n * @return {*}\n */\n\nfunction ReadData(struct, data, offsetBytes) {\n  let offset = offsetBytes;\n\n  for (let i = 0; i < struct.fields.length; i++) {\n    let currFieldStruct = struct.fields[i];\n\n    if (isDefined(currFieldStruct.type) && currFieldStruct.type !== null) {\n      let ret = ParseBytes(data, offset, currFieldStruct.type);\n      currFieldStruct.val = ret.val;\n      offset += ret.bytes;\n    } else if (isDefined(currFieldStruct.count) && currFieldStruct.count !== null) {\n      //check if count is a reference to another letiable\n      if (isNaN(currFieldStruct.count)) {\n        let id = currFieldStruct.count;\n        let fieldName = struct.id2FieldMap[id];\n        currFieldStruct.count = struct.findFieldByName(fieldName).val;\n      }\n\n      for (let c = 0; c < currFieldStruct.count; c++) {\n        for (let j = 0; j < currFieldStruct.fields.length; j++) {\n          let field = JSON.parse(JSON.stringify(currFieldStruct.fields[j]));\n          offset = ReadData(field, data, offset);\n          currFieldStruct.val.push(field);\n        }\n      }\n    }\n  }\n\n  return offset;\n}\n/**\n *\n * @param resultStructure\n * @return {{}}\n */\n\nfunction GetResultObject(resultStructure) {\n  //TODO: handle cases for nested arrays / matrix data types\n  let result = {};\n\n  for (let i = 0; i < resultStructure.fields.length; i++) {\n    if (isDefined(resultStructure.fields[i].count)) {\n      result[resultStructure.fields[i].name] = [];\n\n      for (let c = 0; c < resultStructure.fields[i].count; c++) {\n        let item = {};\n\n        for (let k = 0; k < resultStructure.fields[i].val[c].fields.length; k++) {\n          item[resultStructure.fields[i].val[c].fields[k].name] = resultStructure.fields[i].val[c].fields[k].val;\n        }\n\n        result[resultStructure.fields[i].name].push(item);\n      }\n    } else {\n      result[resultStructure.fields[i].name] = resultStructure.fields[i].val;\n    }\n  }\n\n  return result;\n}\n/**\n *\n * @return {boolean}\n */\n\nfunction isOpera() {\n  return !!window.opr && !!opr.addons || !!window.opera || navigator.userAgent.indexOf(\' OPR/\') >= 0;\n}\n/**\n *\n * @return {boolean}\n */\n\nfunction isFirefox() {\n  return typeof InstallTrigger !== \'undefined\';\n}\n/**\n *\n * @return {boolean}\n */\n\nfunction isSafari() {\n  return Object.prototype.toString.call(window.HTMLElement).indexOf(\'Constructor\') > 0;\n}\n/**\n *\n * @return {boolean}\n */\n\nfunction isChrome() {\n  return !!window.chrome && !!window.chrome.webstore;\n}\n/**\n *\n * @return {*|boolean}\n */\n\nfunction isBlink() {\n  return (isChrome || isOpera) && !!window.CSS;\n}\n/**\n *\n * @param a\n * @param b\n * @return {boolean}\n */\n\nfunction isArrayIntersect(a, b) {\n  return a.filter(function (element) {\n    return b.indexOf(element) > -1;\n  }).length > 0;\n}\n/**\n *\n * @param o\n * @return {boolean}\n */\n\nfunction isElement(o) {\n  return typeof HTMLElement === "object" ? o instanceof HTMLElement : //DOM2\n  o && typeof o === "object" && o !== null && o.nodeType === 1 && typeof o.nodeName === "string";\n}\n/**\n *\n * @return {*}\n */\n\nfunction isWebWorker() {\n  return isDefined(Worker);\n}\n/**\n *\n * @param div\n */\n\nfunction takeScreenShot(div) {}\n/**\n * Remove a css class from a the div given as argument.\n * @param div the div to remove the class from\n * @param css the css class to remove\n */\n\nfunction removeCss(div, css) {\n  let divCss = div.className;\n  css = divCss.replace(css, "");\n  div.className = css;\n}\n/**\n * Add a css class to a the div given as argument.\n * @param div the div to add the class to\n * @param css the css class to add\n */\n\nfunction addCss(div, css) {\n  div.setAttribute("class", div.className + " " + css);\n}\n/**\n * Removes the last character of a {string} object.\n * @param {string} value - The input {string}\n * @return {string} The value without the last character\n */\n\nfunction removeLastCharIfExist(value) {\n  if (!isDefined(undefined) || value === null || value.length === 0 || !value.endsWith("/")) {\n    return value;\n  }\n\n  return value.substring(0, value.length - 1);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},158:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _Styler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2017 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * @extends Styler\n * @example\n *\n * import PointMarker from \'osh/ui/styler/PointMarker.js\';\n *\n * let pointMarker = new PointMarker({\n        location : {\n            x : 1.42376557,\n            y : 43.61758626,\n            z : 100\n        },\n        locationFunc : {\n            dataSourceIds : [androidPhoneGpsDataSource.getId()],\n            handler : function(rec) {\n                return {\n                    x : rec.lon,\n                    y : rec.lat,\n                    z : rec.alt\n                };\n            }\n        },\n        orientationFunc : {\n            dataSourceIds : [androidPhoneOrientationDataSource.getId()],\n            handler : function(rec) {\n                return {\n                    heading : rec.heading\n                };\n            }\n        },\n        icon : \'images/cameralook.png\',\n        iconFunc : {\n            dataSourceIds: [androidPhoneGpsDataSource.getId()],\n            handler : function(rec,timeStamp,options) {\n                if(options.selected) {\n                    return \'images/cameralook-selected.png\'\n                } else {\n                    return \'images/cameralook.png\';\n                };\n            }\n        }\n    });\n */\n\nclass PointMarker extends _Styler_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"] {\n  /**\n  \t* Create the PointMarker\n  \t* @param {Object} properties\n  \t* @param {Number[]} properties.location - [x,y,z]\n   \t* @param {Number} [properties.orientation=0] -\n  \t* @param {String} properties.icon -\n  \t* @param {Number[]} [properties.iconAnchor=[16,16]] -\n  \t* @param {Number[]} [properties.iconSize=[16,16]] -\n  \t* @param {String} properties.label -\n  \t* @param {String} [properties.labelColor="#000000"] - HTML color\n  \t* @param {Number} [properties.labelSize=16] -\n  \t* @param {Number[]} [properties.labelOffset=[0,0]] -\n  \t* @param {Function} [properties.locationFunc] -\n  \t* @param {Function} [properties.orientationFunc] -\n  \t* @param {Function} [properties.iconFunc] -\n  \t* @param {Function} [properties.labelFunc] -\n  \t* @param {Function} [properties.labelColorFunc] -\n  \t* @param {Function} [properties.labelSizeFunc] -\n    * @param {Function} [properties.markerIdFunc] - map an id to a unique marker\n   \t* @param {Number} [properties.zoomLevel=15] - Set the default zoom level\n    * @param {Boolean} [properties.defaultToTerrainElevation=false] - Set the default to terrain elevation\n  \t*\n  \t*/\n  constructor(properties) {\n    super(properties);\n    this.properties = properties;\n    this.location = null;\n    this.orientation = {\n      heading: 0\n    };\n    this.icon = null;\n    this.iconAnchor = [16, 16];\n    this.iconSize = [16, 16];\n    this.label = null;\n    this.labelColor = "#000000";\n    this.labelSize = 16;\n    this.labelOffset = [0, 0];\n    this.zoomLevel = 15;\n    this.color = null;\n    this.defaultToTerrainElevation = false;\n    this.options = {};\n    this.markerId = \'marker\';\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ "g"])(properties.defaultToTerrainElevation)) {\n      this.defaultToTerrainElevation = properties.defaultToTerrainElevation;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.location)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertObject */ "c"])(properties.location, "location");\n      this.location = properties.location;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.orientation)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertObject */ "c"])(properties.orientation, "orientation");\n      this.orientation = properties.orientation;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.icon)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertString */ "e"])(properties.icon, "icon");\n      this.icon = properties.icon;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.iconAnchor)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertArray */ "a"])(properties.iconAnchor, "iconAnchor");\n      this.iconAnchor = properties.iconAnchor;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.iconSize)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertArray */ "a"])(properties.iconSize, "iconSize");\n      this.iconSize = properties.iconSize;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.label)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertString */ "e"])(properties.label, "label");\n      this.label = properties.label;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.labelColor)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertString */ "e"])(properties.labelColor, "labelColor");\n      this.labelColor = properties.labelColor;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.labelSize)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertPositive */ "d"])(properties.labelSize, "labelSize");\n      this.labelSize = properties.labelSize;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.labelOffset)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertArray */ "a"])(properties.labelOffset, "labelOffset");\n      this.labelOffset = properties.labelOffset;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(properties.zoomLevel)) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertPositive */ "d"])(properties.zoomLevel, "zoomLevel");\n      this.zoomLevel = properties.zoomLevel;\n    }\n\n    let that = this; // must be first to assign correctly the first location to the right id if it is defined\n\n    if (this.checkFn("markerIdFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.markerId = properties.markerIdFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.markerIdFunc.dataSourceIds, fn);\n    }\n\n    if (this.checkFn("locationFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.location = properties.locationFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.locationFunc.dataSourceIds, fn);\n    }\n\n    if (this.checkFn("orientationFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.orientation = properties.orientationFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.orientationFunc.dataSourceIds, fn);\n    }\n\n    if (this.checkFn("iconFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.icon = properties.iconFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.iconFunc.dataSourceIds, fn);\n    }\n\n    if (this.checkFn("labelFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.label = properties.labelFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.labelFunc.dataSourceIds, fn);\n    }\n\n    if (this.checkFn("labelColorFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.labelColor = properties.labelColorFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.labelColorFunc.dataSourceIds, fn);\n    }\n\n    if (this.checkFn("labelSizeFunc")) {\n      let fn = function (rec, timeStamp, options) {\n        that.labelSize = properties.labelSizeFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.labelSizeFunc.dataSourceIds, fn);\n    }\n  }\n\n  init(view) {\n    super.init(view);\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ "g"])(view) && this.location !== null) {\n      view.updateMarker(this, 0, {});\n    }\n  }\n\n  setData(dataSourceId, rec, view, options) {\n    if (super.setData(dataSourceId, rec, view, options)) {\n      if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ "g"])(view) && this.location !== null) {\n        view.updateMarker(this, rec.timeStamp, options);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (PointMarker);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///158\n')},159:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _osh_ui_view_View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var _osh_events_EventManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var _osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);\n/* harmony import */ var _resources_css_noUISlider_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(180);\n/* harmony import */ var _resources_css_noUISlider_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_resources_css_noUISlider_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var nouislider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(160);\n/* harmony import */ var nouislider__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(nouislider__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var nouislider_distribute_nouislider_min_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(189);\n/* harmony import */ var nouislider_distribute_nouislider_min_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(nouislider_distribute_nouislider_min_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var wnumb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(10);\n/* harmony import */ var wnumb__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(wnumb__WEBPACK_IMPORTED_MODULE_6__);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2017 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n\n\n\n\n\n/**\n * @extends View\n * @example\n *\n * import RangeSliderView from \'osh-ext/view/RangeSliderView.js\';\n *\n * let rangeSlider = new RangeSliderView("rangeSlider",{\n    dataSourceId: dataSource.id,\n    startTime: "2015-12-19T21:04:30Z",\n    endTime: "2015-12-19T21:09:19Z"\n});\n */\n\nclass RangeSliderView extends _osh_ui_view_View_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {\n  /**\n  \t* Create the discoveryView\n  \t* @param {string} parentElementDivId The div element to attach to\n  \t* @param {Object} options - The properties defining the view\n  \t* @param {Number} options.startTime - The start time\n  \t* @param {Number} options.endTime - The end time\n  \t* @param {String} options.dataSourcesId - The dataSource id which are sync with master time\n     * @param {String} options.dataSourceId - The dataSource id which is not sync with master time\n     * @param {Boolean} options.disabled - disabled the range slider\n     * @param {Object} options.dataSynchronizer - a data synchronizer to get current data time for this set of datasources\n  \t*/\n  constructor(parentElementDivId, options) {\n    super(parentElementDivId, [], options);\n    this.slider = document.createElement("div");\n    this.slider.setAttribute("class", "osh-rangeslider-slider");\n    document.getElementById(this.divId).appendChild(this.slider);\n    let startTime = new Date().getTime();\n    this.endTime = new Date("2055-01-01T00:00:00Z").getTime(); //01/01/2055\n\n    this.dataSourcesId = [];\n    this.multi = false;\n    this.dataSynchonizer = null;\n    this.options = {};\n\n    if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options)) {\n      if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options.startTime)) {\n        startTime = new Date(options.startTime).getTime();\n      }\n\n      if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options.endTime)) {\n        this.endTime = new Date(options.endTime).getTime();\n      }\n\n      if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options.dataSourcesId)) {\n        this.dataSourcesId = options.dataSourcesId;\n      }\n\n      if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options.dataSynchronizer)) {\n        this.dataSynchonizer = options.dataSynchronizer;\n      }\n\n      if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options.options)) {\n        this.options = options.options;\n      }\n\n      if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(options.disabled)) {\n        this.slider.setAttribute(\'disabled\', options.disabled);\n      }\n    }\n\n    nouislider__WEBPACK_IMPORTED_MODULE_4__["create"](this.slider, {\n      start: [startTime, this.endTime]\n      /*,timestamp("2015-02-16T08:09:00Z")]*/\n      ,\n      range: {\n        min: startTime,\n        max: this.endTime\n      },\n      //step:  1000* 60* 60,\n      format: wnumb__WEBPACK_IMPORTED_MODULE_6__({\n        decimals: 0\n      }),\n      behaviour: \'drag\',\n      connect: true,\n      tooltips: [wnumb__WEBPACK_IMPORTED_MODULE_6__({\n        decimals: 1,\n        edit: function (value) {\n          let date = new Date(parseInt(value)).toISOString().replace(".000Z", "Z");\n          return date.split("T")[1].split("Z")[0].split(".")[0];\n        }\n      }), wnumb__WEBPACK_IMPORTED_MODULE_6__({\n        decimals: 1,\n        edit: function (value) {\n          let date = new Date(parseInt(value)).toISOString().replace(".000Z", "Z");\n          return date.split("T")[1].split("Z")[0].split(".")[0];\n        }\n      })],\n      pips: {\n        mode: \'positions\',\n        values: [5, 25, 50, 75],\n        density: 1,\n        //stepped: true,\n        format: wnumb__WEBPACK_IMPORTED_MODULE_6__({\n          edit: function (value) {\n            return new Date(parseInt(value)).toISOString().replace(".000Z", "Z").split("T")[1].split("Z")[0].split(".")[0];\n          }\n        })\n      },\n      ...this.options\n    });\n    this.createEvents();\n  }\n\n  createActivateButton() {\n    let activateButtonDiv = document.createElement("div");\n    let aTagActivateButton = document.createElement("a");\n    activateButtonDiv.appendChild(aTagActivateButton);\n    activateButtonDiv.setAttribute("class", "osh-rangeslider-control");\n    let self = this;\n    activateButtonDiv.addEventListener("click", function (event) {\n      if (activateButtonDiv.className.indexOf("osh-rangeslider-control-select") > -1) {\n        activateButtonDiv.setAttribute("class", "osh-rangeslider-control");\n        self.deactivate();\n      } else {\n        activateButtonDiv.setAttribute("class", "osh-rangeslider-control-select");\n        self.activate();\n      }\n    });\n    document.getElementById(this.divId).appendChild(activateButtonDiv);\n  }\n\n  createEvents() {\n    const that = this; //noUi-handle noUi-handle-lower\n    // start->update->end\n\n    this.slider.noUiSlider.on("slide", function (values, handle) {\n      that.update = true;\n    });\n    this.slider.noUiSlider.on("end", function (values, handle) {\n      that.onChange(values[0], values[1]);\n      that.update = false;\n    });\n\n    if (this.dataSynchonizer !== null) {\n      this.interval = setInterval(async () => {\n        this.dataSynchonizer.getCurrentTime().then(time => {\n          this.slider.noUiSlider.set([time]);\n        });\n      }, 100);\n    }\n  }\n  /**\n   * Deactivate the timeline bar\n   */\n\n\n  deactivate() {\n    this.slider.setAttribute(\'disabled\', true);\n  }\n  /**\n   * Activate the timeline nar\n   */\n\n\n  activate() {\n    this.slider.removeAttribute(\'disabled\');\n  }\n\n  setData(dataSourceId, values) {\n    if (this.dataSourcesId.length === 0 && !this.update) {\n      for (let i = 0; i < values.length; i++) {\n        this.slider.noUiSlider.set([values[i].timeStamp]);\n      }\n    }\n  }\n\n  onChange(startTime, endTime) {}\n\n  destroy() {\n    super.destroy();\n\n    if (Object(_osh_utils_Utils_js__WEBPACK_IMPORTED_MODULE_2__[/* isDefined */ "g"])(this.interval)) {\n      clearInterval(this.interval);\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (RangeSliderView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///159\n')},161:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _Styler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);\n/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * @extends Styler\n */\n\nclass Curve extends _Styler_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {\n  /**\n   * Create the Curve\n   * @param {Object} properties -\n   * @param {String} [properties.xLabel=""] -\n   * @param {String} [properties.yLabel=""] -\n   * @param {String} [properties.color="#000000"] -\n   * @param {Number} [properties.stroke=1] -\n   * @param {Number} [properties.x=0] -\n   * @param {Number} [properties.y=[]] -\n   * @param {Function} properties.strokeFunc -\n   * @param {Function} properties.colorFunc -\n   * @param {Function} properties.valuesFunc -\n   *\n   */\n  constructor(properties) {\n    super(properties);\n    this.xLabel = "";\n    this.yLabel = "";\n    this.color = "#000000";\n    this.stroke = 1; // this.x = 0;\n    // this.y = [];\n\n    this.values = [];\n    let that = this;\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.stroke)) {\n      this.stroke = properties.stroke;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.color)) {\n      this.color = properties.color;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.x)) {\n      this.x = properties.x;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.y)) {\n      this.y = properties.y;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.strokeFunc)) {\n      let fn = function (rec, timeStamp, options) {\n        that.stroke = properties.strokeFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.strokeFunc.dataSourceIds, fn);\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.colorFunc)) {\n      let fn = function (rec, timeStamp, options) {\n        that.color = properties.colorFunc.handler(rec, timeStamp, options);\n      };\n\n      this.addFn(properties.colorFunc.dataSourceIds, fn);\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(properties.valuesFunc)) {\n      let fn = function (rec, timeStamp, options) {\n        let value = properties.valuesFunc.handler(rec, timeStamp, options); // that.x = values.x;\n        // that.y = values.y;\n\n        that.values.push(value);\n      };\n\n      this.addFn(properties.valuesFunc.dataSourceIds, fn);\n    }\n  }\n\n  setData(dataSourceId, rec, view, options) {\n    if (super.setData(dataSourceId, rec, view, options)) {\n      //if(typeof(view) != "undefined" && view.hasOwnProperty(\'updateMarker\')){\n      if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(view)) {\n        view.updateCurve(this, this.values, options);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (Curve);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL3VpL3N0eWxlci9DdXJ2ZS5qcz9lMDY5Il0sIm5hbWVzIjpbIkN1cnZlIiwiU3R5bGVyIiwiY29uc3RydWN0b3IiLCJwcm9wZXJ0aWVzIiwieExhYmVsIiwieUxhYmVsIiwiY29sb3IiLCJzdHJva2UiLCJ2YWx1ZXMiLCJ0aGF0IiwiaXNEZWZpbmVkIiwieCIsInkiLCJzdHJva2VGdW5jIiwiZm4iLCJyZWMiLCJ0aW1lU3RhbXAiLCJvcHRpb25zIiwiaGFuZGxlciIsImFkZEZuIiwiZGF0YVNvdXJjZUlkcyIsImNvbG9yRnVuYyIsInZhbHVlc0Z1bmMiLCJ2YWx1ZSIsInB1c2giLCJzZXREYXRhIiwiZGF0YVNvdXJjZUlkIiwidmlldyIsInVwZGF0ZUN1cnZlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUNBO0FBRUE7Ozs7QUFHQSxNQUFNQSxLQUFOLFNBQW9CQywwREFBcEIsQ0FBMkI7QUFDdkI7Ozs7Ozs7Ozs7Ozs7O0FBY0FDLGFBQVcsQ0FBQ0MsVUFBRCxFQUFhO0FBQ3BCLFVBQU1BLFVBQU47QUFDQSxTQUFLQyxNQUFMLEdBQWMsRUFBZDtBQUNBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLFNBQWI7QUFDQSxTQUFLQyxNQUFMLEdBQWMsQ0FBZCxDQUxvQixDQU1wQjtBQUNBOztBQUVBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBRUEsUUFBSUMsSUFBSSxHQUFHLElBQVg7O0FBRUEsUUFBSUMseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDSSxNQUFaLENBQWIsRUFBa0M7QUFDOUIsV0FBS0EsTUFBTCxHQUFjSixVQUFVLENBQUNJLE1BQXpCO0FBQ0g7O0FBRUQsUUFBSUcseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDRyxLQUFaLENBQWIsRUFBaUM7QUFDN0IsV0FBS0EsS0FBTCxHQUFhSCxVQUFVLENBQUNHLEtBQXhCO0FBQ0g7O0FBRUQsUUFBSUkseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDUSxDQUFaLENBQWIsRUFBNkI7QUFDekIsV0FBS0EsQ0FBTCxHQUFTUixVQUFVLENBQUNRLENBQXBCO0FBQ0g7O0FBRUQsUUFBSUQseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDUyxDQUFaLENBQWIsRUFBNkI7QUFDekIsV0FBS0EsQ0FBTCxHQUFTVCxVQUFVLENBQUNTLENBQXBCO0FBQ0g7O0FBRUQsUUFBSUYseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDVSxVQUFaLENBQWIsRUFBc0M7QUFDbEMsVUFBSUMsRUFBRSxHQUFHLFVBQVVDLEdBQVYsRUFBZUMsU0FBZixFQUEwQkMsT0FBMUIsRUFBbUM7QUFDeENSLFlBQUksQ0FBQ0YsTUFBTCxHQUFjSixVQUFVLENBQUNVLFVBQVgsQ0FBc0JLLE9BQXRCLENBQThCSCxHQUE5QixFQUFtQ0MsU0FBbkMsRUFBOENDLE9BQTlDLENBQWQ7QUFDSCxPQUZEOztBQUdBLFdBQUtFLEtBQUwsQ0FBV2hCLFVBQVUsQ0FBQ1UsVUFBWCxDQUFzQk8sYUFBakMsRUFBZ0ROLEVBQWhEO0FBQ0g7O0FBRUQsUUFBSUoseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDa0IsU0FBWixDQUFiLEVBQXFDO0FBQ2pDLFVBQUlQLEVBQUUsR0FBRyxVQUFVQyxHQUFWLEVBQWVDLFNBQWYsRUFBMEJDLE9BQTFCLEVBQW1DO0FBQ3hDUixZQUFJLENBQUNILEtBQUwsR0FBYUgsVUFBVSxDQUFDa0IsU0FBWCxDQUFxQkgsT0FBckIsQ0FBNkJILEdBQTdCLEVBQWtDQyxTQUFsQyxFQUE2Q0MsT0FBN0MsQ0FBYjtBQUNILE9BRkQ7O0FBR0EsV0FBS0UsS0FBTCxDQUFXaEIsVUFBVSxDQUFDa0IsU0FBWCxDQUFxQkQsYUFBaEMsRUFBK0NOLEVBQS9DO0FBQ0g7O0FBRUQsUUFBSUoseUVBQVMsQ0FBQ1AsVUFBVSxDQUFDbUIsVUFBWixDQUFiLEVBQXNDO0FBQ2xDLFVBQUlSLEVBQUUsR0FBRyxVQUFVQyxHQUFWLEVBQWVDLFNBQWYsRUFBMEJDLE9BQTFCLEVBQW1DO0FBQ3hDLFlBQUlNLEtBQUssR0FBR3BCLFVBQVUsQ0FBQ21CLFVBQVgsQ0FBc0JKLE9BQXRCLENBQThCSCxHQUE5QixFQUFtQ0MsU0FBbkMsRUFBOENDLE9BQTlDLENBQVosQ0FEd0MsQ0FFeEM7QUFDQTs7QUFDQVIsWUFBSSxDQUFDRCxNQUFMLENBQVlnQixJQUFaLENBQWlCRCxLQUFqQjtBQUNILE9BTEQ7O0FBTUEsV0FBS0osS0FBTCxDQUFXaEIsVUFBVSxDQUFDbUIsVUFBWCxDQUFzQkYsYUFBakMsRUFBZ0ROLEVBQWhEO0FBQ0g7QUFDSjs7QUFFRFcsU0FBTyxDQUFDQyxZQUFELEVBQWVYLEdBQWYsRUFBb0JZLElBQXBCLEVBQTBCVixPQUExQixFQUFtQztBQUN0QyxRQUFJLE1BQU1RLE9BQU4sQ0FBY0MsWUFBZCxFQUE0QlgsR0FBNUIsRUFBaUNZLElBQWpDLEVBQXVDVixPQUF2QyxDQUFKLEVBQXFEO0FBQ2pEO0FBQ0EsVUFBSVAseUVBQVMsQ0FBQ2lCLElBQUQsQ0FBYixFQUFxQjtBQUNqQkEsWUFBSSxDQUFDQyxXQUFMLENBQWlCLElBQWpCLEVBQXVCLEtBQUtwQixNQUE1QixFQUFvQ1MsT0FBcEM7QUFDQSxlQUFPLElBQVA7QUFDSDtBQUNKOztBQUNELFdBQU8sS0FBUDtBQUNIOztBQTlFc0I7O0FBZ0ZaakIsOERBQWYiLCJmaWxlIjoiMTYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEJFR0lOIExJQ0VOU0UgQkxPQ0sgKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiBUaGUgY29udGVudHMgb2YgdGhpcyBmaWxlIGFyZSBzdWJqZWN0IHRvIHRoZSBNb3ppbGxhIFB1YmxpYyBMaWNlbnNlLCB2LiAyLjAuXG4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXMgZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lXG4gYXQgaHR0cDovL21vemlsbGEub3JnL01QTC8yLjAvLlxuXG4gU29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIGJhc2lzLFxuIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZVxuIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHJpZ2h0cyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiBDb3B5cmlnaHQgKEMpIDIwMTUtMjAyMCBNYXRoaWV1IERoYWluYXV0LiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuXG4gQXV0aG9yOiBNYXRoaWV1IERoYWluYXV0IDxtYXRoaWV1LmRoYWluYXV0QGdtYWlsLmNvbT5cblxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogRU5EIExJQ0VOU0UgQkxPQ0sgKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgU3R5bGVyIGZyb20gXCIuL1N0eWxlci5qc1wiO1xuaW1wb3J0IHtpc0RlZmluZWR9IGZyb20gXCIuLi8uLi91dGlscy9VdGlscy5qc1wiO1xuXG4vKipcbiAqIEBleHRlbmRzIFN0eWxlclxuICovXG5jbGFzcyBDdXJ2ZSBleHRlbmRzIFN0eWxlciB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIHRoZSBDdXJ2ZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wZXJ0aWVzIC1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gW3Byb3BlcnRpZXMueExhYmVsPVwiXCJdIC1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gW3Byb3BlcnRpZXMueUxhYmVsPVwiXCJdIC1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gW3Byb3BlcnRpZXMuY29sb3I9XCIjMDAwMDAwXCJdIC1cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3Byb3BlcnRpZXMuc3Ryb2tlPTFdIC1cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3Byb3BlcnRpZXMueD0wXSAtXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFtwcm9wZXJ0aWVzLnk9W11dIC1cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcm9wZXJ0aWVzLnN0cm9rZUZ1bmMgLVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IHByb3BlcnRpZXMuY29sb3JGdW5jIC1cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcm9wZXJ0aWVzLnZhbHVlc0Z1bmMgLVxuICAgICAqXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBzdXBlcihwcm9wZXJ0aWVzKTtcbiAgICAgICAgdGhpcy54TGFiZWwgPSBcIlwiO1xuICAgICAgICB0aGlzLnlMYWJlbCA9IFwiXCI7XG4gICAgICAgIHRoaXMuY29sb3IgPSBcIiMwMDAwMDBcIjtcbiAgICAgICAgdGhpcy5zdHJva2UgPSAxO1xuICAgICAgICAvLyB0aGlzLnggPSAwO1xuICAgICAgICAvLyB0aGlzLnkgPSBbXTtcblxuICAgICAgICB0aGlzLnZhbHVlcyA9IFtdO1xuXG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICBpZiAoaXNEZWZpbmVkKHByb3BlcnRpZXMuc3Ryb2tlKSkge1xuICAgICAgICAgICAgdGhpcy5zdHJva2UgPSBwcm9wZXJ0aWVzLnN0cm9rZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0RlZmluZWQocHJvcGVydGllcy5jb2xvcikpIHtcbiAgICAgICAgICAgIHRoaXMuY29sb3IgPSBwcm9wZXJ0aWVzLmNvbG9yO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzRGVmaW5lZChwcm9wZXJ0aWVzLngpKSB7XG4gICAgICAgICAgICB0aGlzLnggPSBwcm9wZXJ0aWVzLng7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNEZWZpbmVkKHByb3BlcnRpZXMueSkpIHtcbiAgICAgICAgICAgIHRoaXMueSA9IHByb3BlcnRpZXMueTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0RlZmluZWQocHJvcGVydGllcy5zdHJva2VGdW5jKSkge1xuICAgICAgICAgICAgbGV0IGZuID0gZnVuY3Rpb24gKHJlYywgdGltZVN0YW1wLCBvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhhdC5zdHJva2UgPSBwcm9wZXJ0aWVzLnN0cm9rZUZ1bmMuaGFuZGxlcihyZWMsIHRpbWVTdGFtcCwgb3B0aW9ucyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5hZGRGbihwcm9wZXJ0aWVzLnN0cm9rZUZ1bmMuZGF0YVNvdXJjZUlkcywgZm4pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzRGVmaW5lZChwcm9wZXJ0aWVzLmNvbG9yRnVuYykpIHtcbiAgICAgICAgICAgIGxldCBmbiA9IGZ1bmN0aW9uIChyZWMsIHRpbWVTdGFtcCwgb3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoYXQuY29sb3IgPSBwcm9wZXJ0aWVzLmNvbG9yRnVuYy5oYW5kbGVyKHJlYywgdGltZVN0YW1wLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLmFkZEZuKHByb3BlcnRpZXMuY29sb3JGdW5jLmRhdGFTb3VyY2VJZHMsIGZuKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0RlZmluZWQocHJvcGVydGllcy52YWx1ZXNGdW5jKSkge1xuICAgICAgICAgICAgbGV0IGZuID0gZnVuY3Rpb24gKHJlYywgdGltZVN0YW1wLCBvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gcHJvcGVydGllcy52YWx1ZXNGdW5jLmhhbmRsZXIocmVjLCB0aW1lU3RhbXAsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIC8vIHRoYXQueCA9IHZhbHVlcy54O1xuICAgICAgICAgICAgICAgIC8vIHRoYXQueSA9IHZhbHVlcy55O1xuICAgICAgICAgICAgICAgIHRoYXQudmFsdWVzLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuYWRkRm4ocHJvcGVydGllcy52YWx1ZXNGdW5jLmRhdGFTb3VyY2VJZHMsIGZuKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldERhdGEoZGF0YVNvdXJjZUlkLCByZWMsIHZpZXcsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHN1cGVyLnNldERhdGEoZGF0YVNvdXJjZUlkLCByZWMsIHZpZXcsIG9wdGlvbnMpKSB7XG4gICAgICAgICAgICAvL2lmKHR5cGVvZih2aWV3KSAhPSBcInVuZGVmaW5lZFwiICYmIHZpZXcuaGFzT3duUHJvcGVydHkoJ3VwZGF0ZU1hcmtlcicpKXtcbiAgICAgICAgICAgIGlmIChpc0RlZmluZWQodmlldykpIHtcbiAgICAgICAgICAgICAgICB2aWV3LnVwZGF0ZUN1cnZlKHRoaXMsIHRoaXMudmFsdWVzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgQ3VydmU7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///161\n')},162:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(163);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(chart_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var chart_js_dist_Chart_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);\n/* harmony import */ var chart_js_dist_Chart_min_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(chart_js_dist_Chart_min_css__WEBPACK_IMPORTED_MODULE_3__);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n\n\n/**\n * @extends View\n */\n\nclass ChartJsView extends _View_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {\n  /**\n   * Create a View.\n   * @param {String} parentElementDivId - The div element to attach to\n   * @param {Object[]} viewItems - The initial view items to add\n   * @param {String} viewItems.name - The name of the view item\n   * @param {Styler} viewItems.styler - The styler object representing the view item\n   * @param {Object} [options={}] - the properties of the view\n   * @param {Object} [options.datasetsOpts] - chart.js [dataset options]{@link https://www.chartjs.org/docs/latest/charts/line.html#dataset-properties}.\n   * @param {Object} [options.gridLinesOpts] - chart.js [gridline options]{@link https://www.chartjs.org/docs/latest/axes/styling.html#grid-line-configuration}\n   * @param {Object} [options.scaleLabelOpts] - chart.js [scaleLabel options]{@link https://www.chartjs.org/docs/latest/axes/labelling.html#scale-title-configuration}\n   * @param {Object} [options.tickOpts] - chart.js [tick options]{@link https://www.chartjs.org/docs/latest/axes/cartesian/#tick-configuration}\n   * @param {Object} [options.legendOpts] - chart.js [legend options]{@link https://www.chartjs.org/docs/latest/configuration/legend.html?h=legend}\n   * @param {Number} [options.maxPoints] - max points to display before shifting\n   */\n  constructor(parentElementDivId, viewItems, options) {\n    super(parentElementDivId, viewItems, options);\n    let xLabel = \'Time\';\n    let yLabel = \'Values\';\n    this.datasetsOpts = {};\n    this.gridLinesOpts = {};\n    this.tickOpts = {};\n    this.scaleLabelOpts = {};\n    this.legendOpts = {};\n    this.options = {};\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(options)) {\n      if (options.hasOwnProperty(\'options\')) {\n        this.options = options.options;\n      }\n\n      if (options.hasOwnProperty(\'datasetsOpts\')) {\n        this.datasetsOpts = options.datasetsOpts;\n      }\n\n      if (options.hasOwnProperty(\'gridLinesOpts\')) {\n        this.gridLinesOpts = options.gridLinesOpts;\n      }\n\n      if (options.hasOwnProperty(\'scaleLabelOpts\')) {\n        this.scaleLabelOpts = options.scaleLabelOpts;\n      }\n\n      if (options.hasOwnProperty(\'tickOpts\')) {\n        this.tickOpts = options.tickOpts;\n      }\n\n      if (options.hasOwnProperty(\'legendOpts\')) {\n        this.legendOpts = options.legendOpts;\n      }\n\n      if (options.hasOwnProperty(\'maxPoints\')) {\n        this.maxPoints = options.maxPoints;\n      }\n    }\n\n    let domNode = document.getElementById(this.divId);\n    let ctx = document.createElement("canvas");\n    ctx.setAttribute("id", Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* randomUUID */ "h"])());\n    domNode.appendChild(ctx);\n    const {\n      maxTicksLimit\n    } = this.tickOpts || 5;\n    this.maxPoints = maxTicksLimit;\n    this.chart = new chart_js__WEBPACK_IMPORTED_MODULE_2___default.a(ctx, {\n      labels: [],\n      type: \'line\',\n      data: {\n        datasets: []\n      },\n      options: {\n        legend: { ...this.legendOpts\n        },\n        animation: {\n          duration: 1000\n        },\n        spanGaps: true,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: yLabel,\n              ...this.scaleLabelOpts\n            },\n            ticks: {\n              maxTicksLimit: 5,\n              ...this.tickOpts\n            },\n            gridLines: this.gridLinesOpts\n          }],\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: xLabel,\n              ...this.scaleLabelOpts\n            },\n            type: \'time\',\n            time: {\n              unit: \'second\'\n            },\n            ticks: {\n              maxTicksLimit: 5,\n              ...this.tickOpts\n            },\n            gridLines: this.gridLinesOpts\n          }]\n        },\n        responsive: true,\n        maintainAspectRatio: true,\n        ...this.options\n      }\n    });\n    this.datasets = {};\n  }\n  /**\n   *\n   * @param {Curve} styler -\n   * @param {Array} values - The values values to set. Each value is composed of raw data and timeStamp\n   * @param {Object} options -\n   */\n\n\n  updateCurve(styler, values, options) {\n    let currentDataset = this.datasets[styler.getId()];\n\n    if (!Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(currentDataset)) {\n      currentDataset = {\n        label: styler.viewItem.name,\n        fillColor: "rgba(220,220,0,0.2)",\n        strokeColor: "rgba(220,220,220,1)",\n        pointColor: "rgba(220,220,220,1)",\n        pointStrokeColor: "#fff",\n        pointHighlightFill: "#fff",\n        pointHighlightStroke: "rgba(220,220,220,1)",\n        data: styler.values\n      };\n      currentDataset = { ...currentDataset,\n        ...this.datasetsOpts\n      };\n      this.datasets[styler.getId()] = currentDataset;\n      this.chart.data.datasets.push(currentDataset);\n    }\n\n    if (currentDataset.data.length >= this.maxPoints) {\n      this.chart.options.scales.xAxes[0].ticks.min = this.chart.data.labels[2];\n    }\n\n    this.chart.data.labels.push(currentDataset.data[currentDataset.data.length - 1].x);\n\n    if (currentDataset.data.length > 1) {\n      this.chart.update(0);\n    } else {\n      this.chart.update();\n    }\n\n    if (currentDataset.data.length > this.maxPoints) {\n      this.chart.data.labels.shift();\n      currentDataset.data.shift();\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (ChartJsView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///162\n')},164:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var _events_EventManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n\n/**\n * @extends View\n * @example\n *\nimport MjpegView from \'osh/ui/view/video/MjpegView.js\';\n\nvar videoView = new MjpegView("containerId", {\n    dataSourceId: datasource.id,\n    entity : entity,\n    css: "video",\n    cssSelected: "video-selected",\n    name: "Video"\n});\n */\n\nclass MjpegView extends _View_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {\n  /**\n   * Create a View.\n   * @param {String} parentElementDivId - The div element to attach to\n   * @param {Object} options - the properties of the view\n   * @param {String} options.dataSourceId - The dataSource id of the dataSource providing data to the view\n   * @param {String} options.entityId - The entity id to which the view belongs to\n   * @param {String} options.showTime - Display or not the time onto the view\n   * @param {String} options.rotation - Allow to define a rotation in degree\n   *\n   */\n  constructor(parentElementDivId, options) {\n    super(parentElementDivId, [], options); // create timestamp slot\n\n    this.timeStamp = null;\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(options.showTime) && options.showTime) {\n      this.timeStamp = document.createElement("div");\n      this.timeStamp.setAttribute("class", "video-time");\n      document.getElementById(this.divId).appendChild(this.timeStamp);\n    } // creates video tag element\n\n\n    this.imgTag = document.createElement("img");\n    this.imgTag.setAttribute("class", "video-mjpeg"); // rotation option\n\n    this.rotation = 0;\n\n    if (typeof options != "undefined" && typeof options.rotation != "undefined") {\n      this.rotation = options.rotation * Math.PI / 180;\n      this.canvas = document.createElement(\'canvas\');\n      this.canvas.width = 640;\n      this.canvas.height = 480;\n      var ctx = this.canvas.getContext(\'2d\');\n      ctx.translate(0, 480);\n      ctx.rotate(this.rotation);\n      document.getElementById(this.divId).appendChild(this.canvas);\n    } else {\n      // appends <img> tag to <div>\n      document.getElementById(this.divId).appendChild(this.imgTag);\n    } // adds listener\n\n\n    let self = this;\n    _events_EventManager_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].observeDiv(this.divId, "click", event => {\n      _events_EventManager_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].fire(_events_EventManager_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].EVENT.SELECT_VIEW, {\n        dataSourcesIds: [self.dataSourceId],\n        entityId: self.entityId\n      });\n    });\n  }\n\n  setData(dataSourceId, values) {\n    for (let i = 0; i < values.length; i++) {\n      const value = values.shift();\n      let imgBlob = new Blob([value.data.frameData]);\n      let url = window.URL.createObjectURL(imgBlob);\n      let oldBlobURL = this.imgTag.src;\n      this.imgTag.src = url;\n\n      if (this.timeStamp !== null) {\n        this.timeStamp.innerHTML = new Date(value.timeStamp).toISOString();\n      }\n\n      window.URL.revokeObjectURL(oldBlobURL);\n    }\n  }\n\n  selectDataView(dataSourceIds, entityId) {\n    if (dataSourceIds.indexOf(this.dataSourceId) > -1 || Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__[/* isDefined */ "g"])(this.entity) && this.entity.getId() === entityId) {\n      document.getElementById(this.divId).setAttribute("class", this.css + " " + this.cssSelected);\n    } else {\n      document.getElementById(this.divId).setAttribute("class", this.css);\n    }\n  }\n\n  reset() {\n    this.imgTag.src = "";\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (MjpegView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///164\n')},165:function(module,exports,__webpack_require__){eval('module.exports = function () {\n  return new Worker(__webpack_require__.p + "defb3e83cacb5199a75b.worker.js");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL2RhdGFyZWNlaXZlci93b3JrZXJzL1N3ZUpzb24ud29ya2VyLmpzPzI4NDMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIldvcmtlciIsIl9fd2VicGFja19wdWJsaWNfcGF0aF9fIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFlBQVc7QUFDMUIsU0FBTyxJQUFJQyxNQUFKLENBQVdDLHFCQUF1QixHQUFHLGdDQUFyQyxDQUFQO0FBQ0QsQ0FGRCIsImZpbGUiOiIxNjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFdvcmtlcihfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZGVmYjNlODNjYWNiNTE5OWE3NWIud29ya2VyLmpzXCIpO1xufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///165\n')},166:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _DataSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);\n/* harmony import */ var _workers_Video_worker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(167);\n/* harmony import */ var _workers_Video_worker_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_workers_Video_worker_js__WEBPACK_IMPORTED_MODULE_1__);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * This datasource provides parsing to H264 raw data.\n * Data: ArrayBuffer\n * @extends DataSource\n * @example\n * import Video from \'osh/datareceiver/Video.js\';\n *\n * var videoDataSource = new Video("H264 video ", {\n        protocol: "ws",\n        service: "SOS",\n        endpointUrl: "sensiasoft.net:8181/sensorhub/sos",\n        offeringID: "urn:android:device:a0e0eac2fea3f614-sos",\n        observedProperty: "http://sensorml.com/ont/swe/property/VideoFrame",\n        startTime: "2016-08-11T20:17:30.402Z",\n        endTime: "2016-08-11T20:18:05.451Z",\n        replaySpeed: 1,\n        bufferingTime: 1000\n  });\n */\n\nclass Video extends _DataSource_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {\n  /**\n   * @param {String} name - the datasource name\n   * @param {Object} properties - the datasource properties\n   * @param {Boolean} [properties.timeShift=false] - fix some problem with some android devices with some timestamp shift to 16 sec\n   * @param {Number} [properties.bufferingTime=0 - defines the time during the data has to be buffered. Useful only when used with DataSynchronizer\n   * @param {Number} [properties.timeOut=0] - defines the limit time before data has to be skipped. Useful only when used with DataSynchronizer\n   * @param {String} properties.protocol - defines the protocol of the datasource. @see {@link DataConnector}\n   * @param {String} properties.endpointUrl the endpoint url\n   * @param {String} properties.service the service\n   * @param {String} properties.offeringID the offeringID\n   * @param {String} properties.observedProperty the observed property\n   * @param {String} properties.startTime the start time (ISO format)\n   * @param {String} properties.endTime the end time (ISO format)\n   * @param {Number} [properties.replaySpeed=1] the replay factor\n   * @param {Number} [properties.responseFormat] the response format (e.g video/mp4)\n   * @param {Number} [properties.reconnectTimeout=10000] - the time before reconnecting (in milliseconds)\n   * @param {Object} [properties.customUrlParams={}] - the encoding options\n   * @param {Number} [properties.customUrlParams.video_bitrate] - define a custom bitrate (in b/s)\n   * @param {Number} [properties.customUrlParams.video_scale] - define a custom scale, 0.0 < value < 1.0\n   * @param {Number} [properties.customUrlParams.video_width] - define a custom width\n   * @param {Number} [properties.customUrlParams.video_height] - define a custom height\n   */\n  constructor(name, properties) {\n    super(name, {\n      timeShift: 0,\n      reconnectTimeout: 1000 * 5,\n      // default if not defined into properties\n      ...properties\n    }, new _workers_Video_worker_js__WEBPACK_IMPORTED_MODULE_1___default.a());\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (Video);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL2RhdGFyZWNlaXZlci9WaWRlby5qcz8xYWFiIl0sIm5hbWVzIjpbIlZpZGVvIiwiRGF0YVNvdXJjZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsInByb3BlcnRpZXMiLCJ0aW1lU2hpZnQiLCJyZWNvbm5lY3RUaW1lb3V0IiwiVmlkZW9Xb3JrZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFnQkE7QUFDQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxNQUFNQSxLQUFOLFNBQW9CQyw4REFBcEIsQ0FBK0I7QUFDM0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkFDLGFBQVcsQ0FBQ0MsSUFBRCxFQUFPQyxVQUFQLEVBQW1CO0FBQzFCLFVBQU1ELElBQU4sRUFBWTtBQUNSRSxlQUFTLEVBQUMsQ0FERjtBQUVSQyxzQkFBZ0IsRUFBRSxPQUFPLENBRmpCO0FBRW9CO0FBQzVCLFNBQUdGO0FBSEssS0FBWixFQUlHLElBQUlHLCtEQUFKLEVBSkg7QUFLSDs7QUE3QjBCOztBQWdDZlAsOERBQWhCIiwiZmlsZSI6IjE2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiBCRUdJTiBMSUNFTlNFIEJMT0NLICoqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4gVGhlIGNvbnRlbnRzIG9mIHRoaXMgZmlsZSBhcmUgc3ViamVjdCB0byB0aGUgTW96aWxsYSBQdWJsaWMgTGljZW5zZSwgdi4gMi4wLlxuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZVxuIGF0IGh0dHA6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy5cblxuIFNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBiYXNpcyxcbiBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2VcbiBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyByaWdodHMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4gQ29weXJpZ2h0IChDKSAyMDE1LTIwMjAgTWF0aGlldSBEaGFpbmF1dC4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cblxuIEF1dGhvcjogTWF0aGlldSBEaGFpbmF1dCA8bWF0aGlldS5kaGFpbmF1dEBnbWFpbC5jb20+XG5cbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEVORCBMSUNFTlNFIEJMT0NLICoqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IERhdGFTb3VyY2UgZnJvbSAnLi9EYXRhU291cmNlLmpzJztcbmltcG9ydCBWaWRlb1dvcmtlciBmcm9tIFwiLi93b3JrZXJzL1ZpZGVvLndvcmtlci5qc1wiO1xuXG4vKipcbiAqIFRoaXMgZGF0YXNvdXJjZSBwcm92aWRlcyBwYXJzaW5nIHRvIEgyNjQgcmF3IGRhdGEuXG4gKiBEYXRhOiBBcnJheUJ1ZmZlclxuICogQGV4dGVuZHMgRGF0YVNvdXJjZVxuICogQGV4YW1wbGVcbiAqIGltcG9ydCBWaWRlbyBmcm9tICdvc2gvZGF0YXJlY2VpdmVyL1ZpZGVvLmpzJztcbiAqXG4gKiB2YXIgdmlkZW9EYXRhU291cmNlID0gbmV3IFZpZGVvKFwiSDI2NCB2aWRlbyBcIiwge1xuICAgICAgICBwcm90b2NvbDogXCJ3c1wiLFxuICAgICAgICBzZXJ2aWNlOiBcIlNPU1wiLFxuICAgICAgICBlbmRwb2ludFVybDogXCJzZW5zaWFzb2Z0Lm5ldDo4MTgxL3NlbnNvcmh1Yi9zb3NcIixcbiAgICAgICAgb2ZmZXJpbmdJRDogXCJ1cm46YW5kcm9pZDpkZXZpY2U6YTBlMGVhYzJmZWEzZjYxNC1zb3NcIixcbiAgICAgICAgb2JzZXJ2ZWRQcm9wZXJ0eTogXCJodHRwOi8vc2Vuc29ybWwuY29tL29udC9zd2UvcHJvcGVydHkvVmlkZW9GcmFtZVwiLFxuICAgICAgICBzdGFydFRpbWU6IFwiMjAxNi0wOC0xMVQyMDoxNzozMC40MDJaXCIsXG4gICAgICAgIGVuZFRpbWU6IFwiMjAxNi0wOC0xMVQyMDoxODowNS40NTFaXCIsXG4gICAgICAgIHJlcGxheVNwZWVkOiAxLFxuICAgICAgICBidWZmZXJpbmdUaW1lOiAxMDAwXG4gIH0pO1xuICovXG5jbGFzcyBWaWRlbyBleHRlbmRzIERhdGFTb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIC0gdGhlIGRhdGFzb3VyY2UgbmFtZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wZXJ0aWVzIC0gdGhlIGRhdGFzb3VyY2UgcHJvcGVydGllc1xuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW3Byb3BlcnRpZXMudGltZVNoaWZ0PWZhbHNlXSAtIGZpeCBzb21lIHByb2JsZW0gd2l0aCBzb21lIGFuZHJvaWQgZGV2aWNlcyB3aXRoIHNvbWUgdGltZXN0YW1wIHNoaWZ0IHRvIDE2IHNlY1xuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5idWZmZXJpbmdUaW1lPTAgLSBkZWZpbmVzIHRoZSB0aW1lIGR1cmluZyB0aGUgZGF0YSBoYXMgdG8gYmUgYnVmZmVyZWQuIFVzZWZ1bCBvbmx5IHdoZW4gdXNlZCB3aXRoIERhdGFTeW5jaHJvbml6ZXJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3Byb3BlcnRpZXMudGltZU91dD0wXSAtIGRlZmluZXMgdGhlIGxpbWl0IHRpbWUgYmVmb3JlIGRhdGEgaGFzIHRvIGJlIHNraXBwZWQuIFVzZWZ1bCBvbmx5IHdoZW4gdXNlZCB3aXRoIERhdGFTeW5jaHJvbml6ZXJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydGllcy5wcm90b2NvbCAtIGRlZmluZXMgdGhlIHByb3RvY29sIG9mIHRoZSBkYXRhc291cmNlLiBAc2VlIHtAbGluayBEYXRhQ29ubmVjdG9yfVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0aWVzLmVuZHBvaW50VXJsIHRoZSBlbmRwb2ludCB1cmxcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydGllcy5zZXJ2aWNlIHRoZSBzZXJ2aWNlXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnRpZXMub2ZmZXJpbmdJRCB0aGUgb2ZmZXJpbmdJRFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0aWVzLm9ic2VydmVkUHJvcGVydHkgdGhlIG9ic2VydmVkIHByb3BlcnR5XG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnRpZXMuc3RhcnRUaW1lIHRoZSBzdGFydCB0aW1lIChJU08gZm9ybWF0KVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0aWVzLmVuZFRpbWUgdGhlIGVuZCB0aW1lIChJU08gZm9ybWF0KVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5yZXBsYXlTcGVlZD0xXSB0aGUgcmVwbGF5IGZhY3RvclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5yZXNwb25zZUZvcm1hdF0gdGhlIHJlc3BvbnNlIGZvcm1hdCAoZS5nIHZpZGVvL21wNClcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3Byb3BlcnRpZXMucmVjb25uZWN0VGltZW91dD0xMDAwMF0gLSB0aGUgdGltZSBiZWZvcmUgcmVjb25uZWN0aW5nIChpbiBtaWxsaXNlY29uZHMpXG4gICAgICogQHBhcmFtIHtPYmplY3R9IFtwcm9wZXJ0aWVzLmN1c3RvbVVybFBhcmFtcz17fV0gLSB0aGUgZW5jb2Rpbmcgb3B0aW9uc1xuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5jdXN0b21VcmxQYXJhbXMudmlkZW9fYml0cmF0ZV0gLSBkZWZpbmUgYSBjdXN0b20gYml0cmF0ZSAoaW4gYi9zKVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5jdXN0b21VcmxQYXJhbXMudmlkZW9fc2NhbGVdIC0gZGVmaW5lIGEgY3VzdG9tIHNjYWxlLCAwLjAgPCB2YWx1ZSA8IDEuMFxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5jdXN0b21VcmxQYXJhbXMudmlkZW9fd2lkdGhdIC0gZGVmaW5lIGEgY3VzdG9tIHdpZHRoXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFtwcm9wZXJ0aWVzLmN1c3RvbVVybFBhcmFtcy52aWRlb19oZWlnaHRdIC0gZGVmaW5lIGEgY3VzdG9tIGhlaWdodFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIHByb3BlcnRpZXMpIHtcbiAgICAgICAgc3VwZXIobmFtZSwge1xuICAgICAgICAgICAgdGltZVNoaWZ0OjAsXG4gICAgICAgICAgICByZWNvbm5lY3RUaW1lb3V0OiAxMDAwICogNSwgLy8gZGVmYXVsdCBpZiBub3QgZGVmaW5lZCBpbnRvIHByb3BlcnRpZXNcbiAgICAgICAgICAgIC4uLnByb3BlcnRpZXNcbiAgICAgICAgfSwgbmV3IFZpZGVvV29ya2VyKCkpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgIFZpZGVvO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///166\n')},167:function(module,exports,__webpack_require__){eval('module.exports = function () {\n  return new Worker(__webpack_require__.p + "49076cd47457155ea287.worker.js");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL2RhdGFyZWNlaXZlci93b3JrZXJzL1ZpZGVvLndvcmtlci5qcz8zZTljIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJXb3JrZXIiLCJfX3dlYnBhY2tfcHVibGljX3BhdGhfXyJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixZQUFXO0FBQzFCLFNBQU8sSUFBSUMsTUFBSixDQUFXQyxxQkFBdUIsR0FBRyxnQ0FBckMsQ0FBUDtBQUNELENBRkQiLCJmaWxlIjoiMTY3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBXb3JrZXIoX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjQ5MDc2Y2Q0NzQ1NzE1NWVhMjg3Lndvcmtlci5qc1wiKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///167\n')},168:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _DataSynchronizer_worker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(169);\n/* harmony import */ var _DataSynchronizer_worker_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_DataSynchronizer_worker_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an \"AS IS\" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n\n\nclass DataSynchronizer {\n  /**\n   * Creates The dataSynchronizer.\n   * @param {Object} properties - the property of the object\n   * @param {Number} [properties.replaySpeed=1] - replaySpeed value\n   * @param {Number} [properties.intervalRate=5] - interval in which data is played (in milliseconds)\n   * @param {DataSource[]} properties.dataSources - the dataSource array\n   */\n  constructor(properties) {\n    if (!Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ \"g\"])(properties.dataSources)) {\n      throw 'You must specify a dataSource array';\n    }\n\n    this.bufferingTime = 1000; // default\n\n    this.currentTime = Date.now();\n    this.id = Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* randomUUID */ \"h\"])();\n    this.dataSources = [];\n    this.replaySpeed = 1;\n    this.intervalRate = 5;\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ \"g\"])(properties.replaySpeed)) {\n      this.replaySpeed = properties.replaySpeed;\n    }\n\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ \"g\"])(properties.intervalRate)) {\n      this.intervalRate = properties.intervalRate;\n    }\n\n    this.initWorker(properties.dataSources, this.intervalRate);\n  }\n  /**\n   * @private\n   */\n\n\n  initWorker(dataSources, intervalRate) {\n    // build object for Worker because DataSource is not clonable\n    const dataSourcesForWorker = [];\n\n    for (let dataSource of dataSources) {\n      const dataSourceForWorker = this.createDataSourceForWorker(dataSource);\n      dataSourcesForWorker.push(dataSourceForWorker);\n      this.dataSources.push(dataSource);\n    }\n\n    this.synchronizerWorker = new _DataSynchronizer_worker_js__WEBPACK_IMPORTED_MODULE_1___default.a();\n    this.synchronizerWorker.postMessage({\n      message: 'init',\n      dataSources: dataSourcesForWorker,\n      replaySpeed: this.replaySpeed,\n      intervalRate: intervalRate,\n      dataSynchronizerId: this.id,\n      topic: _Constants_js__WEBPACK_IMPORTED_MODULE_2__[/* DATA_SYNCHRONIZER_TOPIC */ \"b\"] + this.id\n    });\n  }\n  /**\n   * @private\n   * @param dataSource\n   */\n\n\n  createDataSourceForWorker(dataSource) {\n    const obj = {\n      bufferingTime: dataSource.bufferingTime || 0,\n      timeOut: dataSource.timeOut || 0,\n      id: dataSource.id\n    }; // bind dataSource data onto dataSynchronizer data\n\n    try {\n      dataSource.setDataSynchronizer(this);\n      dataSource.properties.replaySpeed = this.replaySpeed;\n    } catch (ex) {\n      console.warn(\"Cannot set the synchronizer to this DataSource\");\n    }\n\n    return obj;\n  }\n\n  addDataSource(dataSource) {\n    const dataSourceForWorker = this.createDataSourceForWorker(dataSource);\n    this.dataSources.push(dataSource);\n    this.synchronizerWorker.postMessage({\n      message: 'add',\n      dataSources: [dataSourceForWorker]\n    });\n  }\n  /**\n   * @param {String} dataSourceId - the dataSource id\n   * @param {Object} data - the data to push into the data synchronizer\n   */\n\n\n  push(dataSourceId, data) {\n    if (this.synchronizerWorker !== null) {\n      this.synchronizerWorker.postMessage({\n        type: 'data',\n        dataSourceId: dataSourceId,\n        data: data\n      });\n    }\n  }\n  /**\n   * Connects all dataSources\n   */\n\n\n  connect() {\n    for (let dataSource of this.dataSources) {\n      dataSource.connect();\n    }\n  }\n  /**\n   * Disconnects all dataSources\n   */\n\n\n  disconnect() {\n    this.reset();\n\n    for (let dataSource of this.dataSources) {\n      dataSource.disconnect();\n    }\n  }\n  /**\n   * Gets the startTime of the first DataSource objet\n   * @returns {String} - startTime as ISO date\n   */\n\n\n  getStartTime() {\n    if (this.dataSources.length === 0) {\n      throw 'dataSource array is empty';\n    }\n\n    return this.dataSources[0].properties.startTime;\n  }\n  /**\n   * Gets the endTime of the first DataSource objet\n   * @returns {String} - endTime as ISO date\n   */\n\n\n  getEndTime() {\n    if (this.dataSources.length === 0) {\n      throw 'dataSource array is empty';\n    }\n\n    return this.dataSources[0].properties.endTime;\n  }\n  /**\n   * Gets the replaySpeed\n   * @returns {Number} - the replay speed\n   */\n\n\n  getReplaySpeed() {\n    return this.replaySpeed;\n  }\n  /**\n   * Sets the data source time range\n   * @param {String} startTime - the startTime (in date ISO)\n   * @param {String} endTime - the startTime (in date ISO)\n   * @param {Number} replaySpeed - the replay speed\n   */\n\n\n  setTimeRange(startTime, endTime, replaySpeed) {\n    for (let ds of this.dataSources) {\n      ds.setTimeRange(startTime, endTime, replaySpeed);\n    }\n  }\n  /**\n   * Resets reference time\n   */\n\n\n  reset() {\n    if (this.synchronizerWorker !== null) {\n      this.synchronizerWorker.postMessage({\n        message: 'reset'\n      });\n    }\n  }\n  /**\n   * Terminate the corresponding running WebWorker by calling terminate() on it.\n   */\n\n\n  terminate() {\n    if (this.synchronizerWorker !== null) {\n      this.synchronizerWorker.terminate();\n      this.synchronizerWorker = null;\n    }\n\n    for (let dataSource of this.dataSources) {\n      dataSource.terminate();\n    }\n  }\n\n  async getCurrentTime() {\n    const promise = new Promise(resolve => {\n      if (this.synchronizerWorker !== null) {\n        this.synchronizerWorker.onmessage = event => {\n          if (event.data.message === 'current-time') {\n            resolve(event.data.data);\n          }\n        };\n      }\n    });\n\n    if (this.synchronizerWorker !== null) {\n      this.synchronizerWorker.postMessage({\n        message: 'current-time'\n      });\n    }\n\n    return promise;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DataSynchronizer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///168\n")},169:function(module,exports,__webpack_require__){eval('module.exports = function () {\n  return new Worker(__webpack_require__.p + "2a12b234e30b22354f21.worker.js");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL2RhdGFzeW5jaHJvbml6ZXIvRGF0YVN5bmNocm9uaXplci53b3JrZXIuanM/NDI4MCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiV29ya2VyIiwiX193ZWJwYWNrX3B1YmxpY19wYXRoX18iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsWUFBVztBQUMxQixTQUFPLElBQUlDLE1BQUosQ0FBV0MscUJBQXVCLEdBQUcsZ0NBQXJDLENBQVA7QUFDRCxDQUZEIiwiZmlsZSI6IjE2OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgV29ya2VyKF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIyYTEyYjIzNGUzMGIyMjM1NGYyMS53b3JrZXIuanNcIik7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///169\n')},170:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/ui/view/View.js + 2 modules\nvar View = __webpack_require__(7);\n\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/utils/Utils.js\nvar Utils = __webpack_require__(1);\n\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/events/EventManager.js + 1 modules\nvar EventManager = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/leaflet/dist/leaflet-src.js\nvar leaflet_src = __webpack_require__(2);\nvar leaflet_src_default = /*#__PURE__*/__webpack_require__.n(leaflet_src);\n\n// EXTERNAL MODULE: ./node_modules/leaflet/dist/leaflet.css\nvar leaflet = __webpack_require__(173);\n\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/ui/view/map/MapView.js\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * This class is an abstract class in charge of handling common Map operations.\n * @extends View\n */\n\nclass MapView_MapView extends View["a" /* default */] {\n  constructor(parentElementDivId, viewItems, options) {\n    super(parentElementDivId, viewItems, options); // map Styler id to array of corresponding markers\n\n    this.stylerIdToMarkers = {}; // map Styler id to array of corresponding polylines\n\n    this.stylerIdToPolylines = {};\n  }\n  /**\n   * Associate a markerId to a Styler for a fast lookup\n   * @param {PointMarker} styler - the Styler object\n   * @param {Object} markerObject - the Map marker object\n   */\n\n\n  addMarkerToStyler(styler, markerObject) {\n    // associate the list of markers owning by a specific marker\n    if (!(styler.getId() in this.stylerIdToMarkers)) {\n      this.stylerIdToMarkers[styler.getId()] = {};\n    }\n\n    this.stylerIdToMarkers[styler.getId()][styler.markerId] = markerObject;\n  }\n  /**\n   * Associate a polylineId to a Styler for a fast lookup\n   * @param {Polyline} styler - the Styler object\n   * @param {Object} polylineObject - the Map polyline object\n   */\n\n\n  addPolylineToStyler(styler, polylineObject) {\n    // associate the list of markers owning by a specific marker\n    if (!(styler.getId() in this.stylerIdToPolylines)) {\n      this.stylerIdToPolylines[styler.getId()] = {};\n    }\n\n    this.stylerIdToPolylines[styler.getId()][styler.polylineId] = polylineObject;\n  }\n  /**\n   * Get the markerId associate to the Styler\n   * @param {PointMarker} styler - the Styler Object\n   */\n\n\n  getMarker(styler) {\n    if (!(styler.getId() in this.stylerIdToMarkers)) {\n      return null;\n    }\n\n    return this.stylerIdToMarkers[styler.getId()][styler.markerId];\n  }\n  /**\n   * Get the markerId associate to the Styler\n   * @param {Polyline} styler - the Styler Object\n   */\n\n\n  getPolyline(styler) {\n    if (!(styler.getId() in this.stylerIdToPolylines)) {\n      return null;\n    }\n\n    return this.stylerIdToPolylines[styler.getId()][styler.polylineId];\n  }\n  /**\n   * Remove Corresponding ViewItem\n   * @param {Object} viewItem - The viewItem object\n   */\n\n\n  removeViewItem(viewItem) {\n    super.removeViewItem(viewItem); // check for marker\n\n    this.removeMarkers(viewItem.styler); // check for polylines\n\n    this.removePolylines(viewItem.styler);\n  }\n  /**\n   * Remove the markers corresponding to a PointMarker Styler\n   * @param {PointMarker} pointMarker - the styler to remove the markers from\n   */\n\n\n  removeMarkers(pointMarker) {\n    if (Object(Utils["g" /* isDefined */])(pointMarker.markerId)) {\n      const markersMap = this.stylerIdToMarkers[pointMarker.id];\n\n      if (Object(Utils["g" /* isDefined */])(markersMap)) {\n        for (let markerId in markersMap) {\n          const marker = markersMap[markerId];\n          this.removeMarkerFromLayer(marker);\n        }\n      } // remove markers ids from Styler map\n\n\n      delete this.stylerIdToMarkers[pointMarker.id];\n    }\n  }\n  /**\n   * Remove the polylines corresponding to a Polyline Styler\n   * @param {Polyline} polyline - the styler to remove the polylines from\n   */\n\n\n  removePolylines(polyline) {\n    if (Object(Utils["g" /* isDefined */])(polyline.polylineId)) {\n      const polylinesMap = this.stylerIdToPolylines[polyline.id];\n\n      if (Object(Utils["g" /* isDefined */])(polylinesMap)) {\n        for (let polylineId in polylinesMap) {\n          const polyline = polylinesMap[polylineId];\n          this.removePolylineFromLayer(polyline);\n        }\n      } // remove polylines ids from Styler map\n\n\n      delete this.stylerIdToPolylines[polyline.id];\n    }\n  }\n  /**\n   * Abstract method to remove a marker from its corresponding layer.\n   * This is library dependant.\n   * @param {Object} marker - The Map marker object\n   */\n\n\n  removeMarkerFromLayer(marker) {}\n  /**\n   * Abstract method to remove a polyline from its corresponding layer.\n   * This is library dependant.\n   * @param {Object} polyline - The Map polyline object\n   */\n\n\n  removePolylineFromLayer(polyline) {}\n\n}\n\n/* harmony default export */ var map_MapView = (MapView_MapView);\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/ui/view/map/LeafletView.js\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n\n\n\n\n/**\n * This class is in charge of displaying GPS/orientation data by adding a marker to the Leaflet Map object.\n * @extends View\n * @example\n\n import LeafletView from \'osh/ui/view/map/LeafletView.js\';\n\n let leafletMapView = new LeafletView("",\n [{\n            styler :  pointMarker,\n            name : "Android Phone GPS",\n            entityId : androidEntity.id\n        },\n {\n     styler : new Polyline({\n         locationFunc : {\n             dataSourceIds : [androidPhoneGpsDataSource.getId()],\n             handler : function(rec) {\n                 return {\n                     x : rec.lon,\n                     y : rec.lat,\n                     z : rec.alt\n                 };\n             }\n         },\n         color : \'rgba(0,0,255,0.5)\',\n         weight : 10,\n         opacity : .5,\n         smoothFactor : 1,\n         maxPoints : 200\n     }),\n     name : "Android Phone GPS Path",\n     entityId : androidEntity.id\n }]\n );\n */\n\nclass LeafletView_LeafletView extends map_MapView {\n  /**\n   * Create a View.\n   * @param {String} parentElementDivId - The div element to attach to\n   * @param {Object[]} viewItems - The initial view items to add\n   * @param {String} viewItems.name - The name of the view item\n   * @param {Styler} viewItems.styler - The styler object representing the view item\n   * @param {Object} [options] - the properties of the view\n   * @param {Boolean} [options.autoZoomOnFirstMarker=false] - auto zoom on the first added marker\n   * @param {Boolean} [options.follow=false] - follow the marker\n   * @param {Object} [options.initialView] - Sets the view of the map (geographical center and zoom) with the given animation options. [See details]{@link https://leafletjs.com/reference-1.7.1.html#map-setview}\n   * @param {Object[]} [options.overlayLayers] - [L.tileLayer]{@link https://leafletjs.com/reference-1.7.1.html#tilelayer-l-tilelayer} objects to use as overlay layer\n   * @param {Object[]} [options.baseLayers] - [L.tileLayer]{@link https://leafletjs.com/reference-1.7.1.html#tilelayer-l-tilelayer} objects to use as base layer\n   *\n   */\n  constructor(parentElementDivId, viewItems, options) {\n    super(parentElementDivId, viewItems, options);\n    let cssClass = document.getElementById(this.divId).className;\n    document.getElementById(this.divId).setAttribute("class", cssClass + " " + this.css);\n  }\n\n  beforeAddingItems(options) {\n    // inits the map\n    this.initMap(options);\n  } //---------- MAP SETUP --------------//\n\n  /**\n   *\n   * @private\n   */\n\n\n  initMap(options) {\n    // #region snippet_leafletview_initial_view\n    let initialView = {\n      location: new leaflet_src_default.a.LatLng(0, 0),\n      zoom: 3\n    }; // #endregion snippet_leafletview_initial_view\n\n    this.first = true;\n    this.follow = false;\n    this.autoZoomOnFirstMarker = false;\n    let defaultLayers = this.getDefaultLayers();\n    let defaultLayer = defaultLayers[0].layer;\n    let baseLayers = {};\n    let overlays = {};\n    baseLayers[defaultLayers[0].name] = defaultLayers[0].layer;\n    overlays[defaultLayers[1].name] = defaultLayers[1].layer;\n\n    if (Object(Utils["g" /* isDefined */])(options)) {\n      if (Object(Utils["g" /* isDefined */])(options.initialView)) {\n        initialView = {\n          location: new leaflet_src_default.a.LatLng(options.initialView.lat, options.initialView.lon),\n          zoom: options.initialView.zoom\n        };\n      } // checks autoZoom\n\n\n      if (Object(Utils["g" /* isDefined */])(options.autoZoomOnFirstMarker)) {\n        this.autoZoomOnFirstMarker = options.autoZoomOnFirstMarker;\n      } // checks overlayers\n\n\n      if (Object(Utils["g" /* isDefined */])(options.overlayLayers)) {\n        overlays = options.overlayLayers;\n      } // checks baseLayer\n\n\n      if (Object(Utils["g" /* isDefined */])(options.baseLayers)) {\n        baseLayers = options.baseLayers;\n      }\n\n      if (Object(Utils["g" /* isDefined */])(options.follow)) {\n        this.follow = options.follow;\n      } // checks defaultLayer\n\n\n      if (Object(Utils["g" /* isDefined */])(options.defaultLayer)) {\n        defaultLayer = options.defaultLayer;\n      }\n    } // sets layers to map\n\n\n    this.map = new leaflet_src_default.a.Map(this.divId, {\n      fullscreenControl: true,\n      layers: defaultLayer\n    });\n    leaflet_src_default.a.control.layers(baseLayers, overlays).addTo(this.map);\n    this.map.setView(initialView.location, initialView.zoom); //this.initLayers();\n  }\n  /**\n   * Gets the list of default layers.\n   * @return {Array}\n   */\n\n\n  getDefaultLayers(options) {\n    let maxZoom = 22;\n\n    if (Object(Utils["g" /* isDefined */])(options) && options.maxZoom) {\n      maxZoom = options.maxZoom;\n    } // copyrights\n\n\n    let mbAttr = \'Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors\',\n        mbUrl = \'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\';\n    let esriLink = \'<a href="http://www.esri.com/">Esri</a>\';\n    let esriWholink = \'i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\'; // leaflet layers\n\n    let esriLayer = leaflet_src_default.a.tileLayer(\'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\', {\n      attribution: \'&copy; \' + esriLink + \', \' + esriWholink,\n      maxZoom: maxZoom,\n      maxNativeZoom: 19\n    });\n    let streets = leaflet_src_default.a.tileLayer(mbUrl, {\n      id: \'mapbox.streets\',\n      attribution: mbAttr,\n      maxZoom: maxZoom\n    });\n    return [{\n      name: "OSM Streets",\n      layer: streets\n    }, {\n      name: "Esri Satellite",\n      layer: esriLayer\n    }];\n  }\n  /**\n   * @private\n   */\n\n\n  initLayers() {\n    // create the tile layer with correct attribution\n    let osmUrl = \'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\';\n    let osmAttrib = \'Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors\';\n    let osm = new leaflet_src_default.a.tileLayer(osmUrl, {\n      minZoom: 1,\n      maxZoom: 22,\n      attribution: osmAttrib\n    });\n    this.map.addLayer(osm);\n  }\n  /**\n   * Add a marker to the map.\n   * @param {Object} properties\n   * @param {Number} properties.lon\n   * @param {Number} properties.lat\n   * @param {String} properties.icon - the icon path\n   * @param {Integer[]} properties.iconAnchor - offset of the icon ex:[10,10]\n   * @param {String} properties.label - label of the tooltip\n   * @param {String} properties.description - description of the marker to display into the tooltip\n   * @param {String} properties.labelOffset - offset of the label of the tooltip\n   * @param {Number} properties.orientation - orientation of the icon in degree\n   * @return {string} the id of the new created marker\n   */\n\n\n  addMarker(properties) {\n    //create marker\n    let marker = null;\n\n    if (properties.icon !== null) {\n      let markerIcon = leaflet_src_default.a.icon({\n        iconAnchor: properties.iconAnchor,\n        iconUrl: properties.icon\n      });\n      marker = leaflet_src_default.a.marker([properties.lat, properties.lon], {\n        icon: markerIcon\n      });\n    } else {\n      marker = leaflet_src_default.a.marker([properties.lat, properties.lon]);\n    }\n\n    if (properties.label !== null) {\n      marker.bindTooltip(properties.label, {\n        permanent: false,\n        direction: \'center\',\n        offset: leaflet_src_default.a.point(properties.labelOffset[0], properties.labelOffset[1])\n      });\n    }\n\n    let name = properties.hasOwnProperty("name") && properties.label != null ? properties.label : "";\n    let desc = properties.hasOwnProperty("description") && properties.description != null ? properties.description : "";\n\n    if (name.length > 0 || desc.length > 0) {\n      marker.bindPopup(name + \'<div>\' + desc + \'</div>\', {\n        offset: leaflet_src_default.a.point(properties.labelOffset[0], properties.labelOffset[1])\n      });\n    }\n\n    marker.addTo(this.map);\n    marker.setRotationAngle(properties.orientation);\n    return marker;\n  }\n  /**\n   * Add a polyline to the map.\n   * @param {locations} locations - the coordinates [{x, y}]\n   * @param {Object} properties\n   * @param {String} properties.color\n   * @param {Number} properties.weight\n   * @param {Number} properties.opacity\n   * @param {Number} properties.smoothFactor\n   * @return {string} the id of the new created polyline\n   */\n\n\n  addPolyline(locations, properties) {\n    let polylinePoints = [];\n\n    if (Object(Utils["g" /* isDefined */])(locations) && locations.length > 0) {\n      for (let i = 0; i < locations.length; i++) {\n        polylinePoints.push(new leaflet_src_default.a.LatLng(locations[i].y, locations[i].x));\n      }\n    } //create path\n\n\n    let polyline = new leaflet_src_default.a.Polyline(polylinePoints, {\n      color: properties.color,\n      weight: properties.weight,\n      opacity: properties.opacity,\n      smoothFactor: properties.smoothFactor\n    }).addTo(this.map);\n    return polyline;\n  }\n  /**\n   * Updates the marker associated to the styler.\n   * @param {PointMarker} styler - The styler allowing the update of the marker\n   */\n\n\n  updateMarker(styler) {\n    let marker = this.getMarker(styler);\n\n    if (!Object(Utils["g" /* isDefined */])(marker)) {\n      // adds a new marker to the leaflet renderer\n      const markerObject = this.addMarker({\n        lat: styler.location.y,\n        lon: styler.location.x,\n        orientation: styler.orientation.heading,\n        color: styler.color,\n        icon: styler.icon,\n        iconAnchor: styler.iconAnchor,\n        label: styler.label,\n        labelColor: styler.labelColor,\n        labelSize: styler.labelSize,\n        labelOffset: styler.labelOffset,\n        name: styler.viewItem.name,\n        description: styler.viewItem.description\n      });\n      this.addMarkerToStyler(styler, markerObject);\n    } // get the current marker corresponding to the current markerId value of the PointMarker\n\n\n    marker = this.getMarker(styler); // updates position\n\n    let lon = styler.location.x;\n    let lat = styler.location.y;\n\n    if (!isNaN(lon) && !isNaN(lat)) {\n      let newLatLng = new leaflet_src_default.a.LatLng(lat, lon);\n      marker.setLatLng(newLatLng);\n\n      if (this.first && this.autoZoomOnFirstMarker || this.follow) {\n        const markerBounds = leaflet_src_default.a.latLngBounds([newLatLng]);\n        this.map.fitBounds(markerBounds, {\n          maxZoom: styler.zoomLevel\n        });\n\n        if (this.first) {\n          this.first = false;\n        }\n      }\n    } // updates orientation\n\n\n    if (Object(Utils["g" /* isDefined */])(styler.orientation)) {\n      marker.setRotationAngle(styler.orientation.heading);\n    }\n\n    if (styler.icon !== null && marker._icon.iconUrl !== styler.icon) {\n      // updates icon\n      let markerIcon = leaflet_src_default.a.icon({\n        iconAnchor: styler.iconAnchor,\n        iconUrl: styler.icon\n      });\n      marker.setIcon(markerIcon);\n    }\n  }\n  /**\n   * Abstract method to remove a marker from its corresponding layer.\n   * This is library dependant.\n   * @param {Object} marker - The Map marker object\n   */\n\n\n  removeMarkerFromLayer(marker) {\n    this.map.removeLayer(marker);\n  }\n  /**\n   * Abstract method to remove a polyline from its corresponding layer.\n   * This is library dependant.\n   * @param {Object} polyline - The Map polyline object\n   */\n\n\n  removePolylineFromLayer(polyline) {\n    this.map.removeLayer(polyline);\n  }\n  /**\n   * Updates the polyline associated to the styler.\n   * @param {Polyline} styler - The styler allowing the update of the polyline\n   */\n\n\n  updatePolyline(styler) {\n    let polyline = this.getPolyline(styler);\n\n    if (Object(Utils["g" /* isDefined */])(polyline)) {\n      // removes the layer\n      this.removePolylineFromLayer(polyline);\n    } // adds a new polyline to the leaflet renderer\n\n\n    const polylineObj = this.addPolyline(styler.locations[styler.polylineId], {\n      color: styler.color,\n      weight: styler.weight,\n      locations: styler.locations,\n      maxPoints: styler.maxPoints,\n      opacity: styler.opacity,\n      smoothFactor: styler.smoothFactor\n    });\n    this.addPolylineToStyler(styler, polylineObj);\n  }\n\n  attachTo(parentElement) {\n    super.attachTo(parentElement); // Fix leaflet bug when resizing the div parent container\n\n    this.map.invalidateSize();\n  }\n\n  onResize() {\n    super.onResize();\n    let that = this;\n    setTimeout(function () {\n      that.map.invalidateSize();\n    }, 100);\n  }\n\n  onChange(data) {}\n\n}\n/***  little hack starts here ***/\n\n\nleaflet_src_default.a.Map = leaflet_src_default.a.Map.extend({\n  openPopup: function (popup) {\n    this._popup = popup;\n    return this.addLayer(popup).fire(\'popupopen\', {\n      popup: this._popup\n    });\n  }\n}); // Defines rotated marker\n\n(function () {\n  // save these original methods before they are overwritten\n  let proto_initIcon = leaflet_src_default.a.Marker.prototype._initIcon;\n  let proto_setPos = leaflet_src_default.a.Marker.prototype._setPos;\n  let oldIE = leaflet_src_default.a.DomUtil.TRANSFORM === \'msTransform\';\n  leaflet_src_default.a.Marker.addInitHook(function () {\n    let iconAnchor = this.options.icon.options.iconAnchor;\n\n    if (iconAnchor) {\n      iconAnchor = iconAnchor[0] + \'px \' + iconAnchor[1] + \'px\';\n    }\n\n    this.options.rotationOrigin = this.options.rotationOrigin || iconAnchor || \'center bottom\';\n    this.options.rotationAngle = this.options.rotationAngle || 0;\n  });\n  leaflet_src_default.a.Marker.include({\n    _initIcon: function () {\n      proto_initIcon.call(this);\n    },\n    _setPos: function (pos) {\n      proto_setPos.call(this, pos);\n\n      if (this.options.rotationAngle) {\n        this._icon.style[leaflet_src_default.a.DomUtil.TRANSFORM + \'Origin\'] = this.options.rotationOrigin;\n\n        if (oldIE) {\n          // for IE 9, use the 2D rotation\n          this._icon.style[leaflet_src_default.a.DomUtil.TRANSFORM] = \' rotate(\' + this.options.rotationAngle + \'deg)\';\n        } else {\n          // for modern browsers, prefer the 3D accelerated version\n          this._icon.style[leaflet_src_default.a.DomUtil.TRANSFORM] += \' rotateZ(\' + this.options.rotationAngle + \'deg)\';\n        }\n      }\n    },\n    setRotationAngle: function (angle) {\n      this.options.rotationAngle = angle;\n      this.update();\n      return this;\n    },\n    setRotationOrigin: function (origin) {\n      this.options.rotationOrigin = origin;\n      this.update();\n      return this;\n    }\n  });\n})();\n/***  end of hack ***/\n\n\n/* harmony default export */ var map_LeafletView = __webpack_exports__["a"] = (LeafletView_LeafletView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///170\n')},171:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(172);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(5).default\nvar update = add(\"2d0b47a9\", content, false, {});\n// Hot Module Replacement\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL3Jlc291cmNlcy9jc3Mvdmlldy5jc3M/OTViOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUErRztBQUNySSw0Q0FBNEMsUUFBUztBQUNyRDtBQUNBO0FBQ0EsVUFBVSxtQkFBTyxDQUFDLENBQW9IO0FBQ3RJLCtDQUErQztBQUMvQztBQUNBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6IjE3MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9kZW1vcy92aWRlby1kaXNwbGF5L3ZpZGVvLWRpc3BsYXktYWR2YW5jZWQtdnVlanMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi92aWV3LmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9kZW1vcy92aWRlby1kaXNwbGF5L3ZpZGVvLWRpc3BsYXktYWR2YW5jZWQtdnVlanMvbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiMmQwYjQ3YTlcIiwgY29udGVudCwgZmFsc2UsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcbiAvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuIGlmKCFjb250ZW50LmxvY2Fscykge1xuICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL2RlbW9zL3ZpZGVvLWRpc3BsYXkvdmlkZW8tZGlzcGxheS1hZHZhbmNlZC12dWVqcy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZpZXcuY3NzXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL2RlbW9zL3ZpZGVvLWRpc3BsYXkvdmlkZW8tZGlzcGxheS1hZHZhbmNlZC12dWVqcy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZpZXcuY3NzXCIpO1xuICAgICBpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcbiAgICAgdXBkYXRlKG5ld0NvbnRlbnQpO1xuICAgfSk7XG4gfVxuIC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3NcbiBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///171\n")},172:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(4);\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, ".osh-view {\\n    width:100%;\\n    height: 100%;\\n}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL3Jlc291cmNlcy9jc3Mvdmlldy5jc3M/NWEyOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLENBQTBHO0FBQ3BKO0FBQ0E7QUFDQSxjQUFjLFFBQVMsY0FBYyxpQkFBaUIsbUJBQW1CLEdBQUc7QUFDNUU7QUFDQSIsImZpbGUiOiIxNzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL2RlbW9zL3ZpZGVvLWRpc3BsYXkvdmlkZW8tZGlzcGxheS1hZHZhbmNlZC12dWVqcy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5vc2gtdmlldyB7XFxuICAgIHdpZHRoOjEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///172\n')},180:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(181);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(5).default\nvar update = add(\"9cfec496\", content, false, {});\n// Hot Module Replacement\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL25vVUlTbGlkZXIuY3NzP2FmMWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQSxjQUFjLG1CQUFPLENBQUMsR0FBcUg7QUFDM0ksNENBQTRDLFFBQVM7QUFDckQ7QUFDQTtBQUNBLFVBQVUsbUJBQU8sQ0FBQyxDQUFvSDtBQUN0SSwrQ0FBK0M7QUFDL0M7QUFDQSxHQUFHLEtBQVUsRUFBRSIsImZpbGUiOiIxODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vZGVtb3MvdmlkZW8tZGlzcGxheS92aWRlby1kaXNwbGF5LWFkdmFuY2VkLXZ1ZWpzL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbm9VSVNsaWRlci5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vZGVtb3MvdmlkZW8tZGlzcGxheS92aWRlby1kaXNwbGF5LWFkdmFuY2VkLXZ1ZWpzL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjljZmVjNDk2XCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9kZW1vcy92aWRlby1kaXNwbGF5L3ZpZGVvLWRpc3BsYXktYWR2YW5jZWQtdnVlanMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ub1VJU2xpZGVyLmNzc1wiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9kZW1vcy92aWRlby1kaXNwbGF5L3ZpZGVvLWRpc3BsYXktYWR2YW5jZWQtdnVlanMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ub1VJU2xpZGVyLmNzc1wiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///180\n")},181:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(4);\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = __webpack_require__(182);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.i, ".noUi-tooltip {\\n    border-radius: 10px;\\n    box-shadow: 2px 2px 5px 0px #777;\\n    background-color: #777;\\n    filter: alpha(opacity=80);\\n    -moz-opacity: 0.8;\\n    opacity: 0.8;\\n    border: none;\\n    color: #FFF;\\n    width: 100px;\\n    height: 23px;\\n    padding: 2px 2px 2px 2px;\\n}\\n.noUi-horizontal .noUi-handle-lower .noUi-tooltip {\\n    top: 35px;\\n}\\n\\n.noUi-horizontal .noUi-handle-upper .noUi-tooltip {\\n    top: 35px;\\n}\\n\\n.noUi-connect {\\n    background-color: rgba(5, 107, 166, 0.6);\\n}\\n\\n.noUi-tooltip:after {\\n    bottom: -14px;\\n    margin-left: -10px;\\n    border-top: 10px solid #fff;\\n}\\n\\n.noUi-tooltip:after {\\n    content: \'\';\\n    position: absolute;\\n    top: -10px;\\n    left: 50%;\\n    margin-left: -9px;\\n    width: 0;\\n    height: 0;\\n    border-left: 10px solid transparent;\\n    border-right: 10px solid transparent;\\n    border-top: none;\\n    border-bottom: 10px solid #777;\\n}\\n\\n.noUi-pips-horizontal {\\n    height:0px !important;\\n}\\n\\n\\n.noUi-handle:active {\\n    background-color: rgba(5, 107, 166, 0.6);\\n    box-shadow:none;\\n    border:none;\\n}\\n\\n\\n.noUi-horizontal {\\n    width: calc(100% - 50px);\\n}\\n\\n/** put range and control button side by side **/\\n\\n.osh-rangeslider-slider{\\n    float:left;\\n}\\n\\n.osh-rangeslider-control {\\n    float: left;\\n    width: 30px;\\n    margin-left: 20px;\\n}\\n\\n.osh-rangeslider-control-select {\\n    float: left;\\n    width: 30px;\\n    margin-left: 20px;\\n}\\n\\n.osh-rangeslider-control a{\\n    text-decoration: none;\\n}\\n\\n.osh-rangeslider-control-select a{\\n    text-decoration: none;\\n}\\n\\n.osh-rangeslider-control a:after {\\n    font-family: FontAwesome;\\n    content: \\"\\\\f044\\";\\n    vertical-align: middle;\\n    font-size:30px;\\n}\\n\\n.osh-rangeslider-control-select a:after{\\n    font-family: FontAwesome;\\n    content: \\"\\\\f046\\";\\n    vertical-align: middle;\\n    font-size:30px;\\n}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL25vVUlTbGlkZXIuY3NzPzk4NzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyxDQUEwRztBQUNwSix3Q0FBd0MsbUJBQU8sQ0FBQyxHQUFrSjtBQUNsTTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVMsa0JBQWtCLDBCQUEwQix1Q0FBdUMsNkJBQTZCLGdDQUFnQyx3QkFBd0IsbUJBQW1CLG1CQUFtQixrQkFBa0IsbUJBQW1CLG1CQUFtQiwrQkFBK0IsR0FBRyxxREFBcUQsZ0JBQWdCLEdBQUcsdURBQXVELGdCQUFnQixHQUFHLG1CQUFtQiwrQ0FBK0MsR0FBRyx5QkFBeUIsb0JBQW9CLHlCQUF5QixrQ0FBa0MsR0FBRyx5QkFBeUIsa0JBQWtCLHlCQUF5QixpQkFBaUIsZ0JBQWdCLHdCQUF3QixlQUFlLGdCQUFnQiwwQ0FBMEMsMkNBQTJDLHVCQUF1QixxQ0FBcUMsR0FBRywyQkFBMkIsNEJBQTRCLEdBQUcsMkJBQTJCLCtDQUErQyxzQkFBc0Isa0JBQWtCLEdBQUcsd0JBQXdCLCtCQUErQixHQUFHLGlGQUFpRixpQkFBaUIsR0FBRyw4QkFBOEIsa0JBQWtCLGtCQUFrQix3QkFBd0IsR0FBRyxxQ0FBcUMsa0JBQWtCLGtCQUFrQix3QkFBd0IsR0FBRywrQkFBK0IsNEJBQTRCLEdBQUcsc0NBQXNDLDRCQUE0QixHQUFHLHNDQUFzQywrQkFBK0IsMEJBQTBCLDZCQUE2QixxQkFBcUIsR0FBRyw0Q0FBNEMsK0JBQStCLDBCQUEwQiw2QkFBNkIscUJBQXFCLEdBQUc7QUFDajNEO0FBQ0EiLCJmaWxlIjoiMTgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9kZW1vcy92aWRlby1kaXNwbGF5L3ZpZGVvLWRpc3BsYXktYWR2YW5jZWQtdnVlanMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbnZhciBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gPSByZXF1aXJlKFwiLSEuLi8uLi8uLi8uLi9kZW1vcy92aWRlby1kaXNwbGF5L3ZpZGVvLWRpc3BsYXktYWR2YW5jZWQtdnVlanMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb250LWF3ZXNvbWUtNC42LjMvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG5leHBvcnRzLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm5vVWktdG9vbHRpcCB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJveC1zaGFkb3c6IDJweCAycHggNXB4IDBweCAjNzc3O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzc3O1xcbiAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9ODApO1xcbiAgICAtbW96LW9wYWNpdHk6IDAuODtcXG4gICAgb3BhY2l0eTogMC44O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGNvbG9yOiAjRkZGO1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIGhlaWdodDogMjNweDtcXG4gICAgcGFkZGluZzogMnB4IDJweCAycHggMnB4O1xcbn1cXG4ubm9VaS1ob3Jpem9udGFsIC5ub1VpLWhhbmRsZS1sb3dlciAubm9VaS10b29sdGlwIHtcXG4gICAgdG9wOiAzNXB4O1xcbn1cXG5cXG4ubm9VaS1ob3Jpem9udGFsIC5ub1VpLWhhbmRsZS11cHBlciAubm9VaS10b29sdGlwIHtcXG4gICAgdG9wOiAzNXB4O1xcbn1cXG5cXG4ubm9VaS1jb25uZWN0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1LCAxMDcsIDE2NiwgMC42KTtcXG59XFxuXFxuLm5vVWktdG9vbHRpcDphZnRlciB7XFxuICAgIGJvdHRvbTogLTE0cHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcXG4gICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAjZmZmO1xcbn1cXG5cXG4ubm9VaS10b29sdGlwOmFmdGVyIHtcXG4gICAgY29udGVudDogJyc7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAtMTBweDtcXG4gICAgbGVmdDogNTAlO1xcbiAgICBtYXJnaW4tbGVmdDogLTlweDtcXG4gICAgd2lkdGg6IDA7XFxuICAgIGhlaWdodDogMDtcXG4gICAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7XFxuICAgIGJvcmRlci1yaWdodDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gICAgYm9yZGVyLXRvcDogbm9uZTtcXG4gICAgYm9yZGVyLWJvdHRvbTogMTBweCBzb2xpZCAjNzc3O1xcbn1cXG5cXG4ubm9VaS1waXBzLWhvcml6b250YWwge1xcbiAgICBoZWlnaHQ6MHB4ICFpbXBvcnRhbnQ7XFxufVxcblxcblxcbi5ub1VpLWhhbmRsZTphY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUsIDEwNywgMTY2LCAwLjYpO1xcbiAgICBib3gtc2hhZG93Om5vbmU7XFxuICAgIGJvcmRlcjpub25lO1xcbn1cXG5cXG5cXG4ubm9VaS1ob3Jpem9udGFsIHtcXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDUwcHgpO1xcbn1cXG5cXG4vKiogcHV0IHJhbmdlIGFuZCBjb250cm9sIGJ1dHRvbiBzaWRlIGJ5IHNpZGUgKiovXFxuXFxuLm9zaC1yYW5nZXNsaWRlci1zbGlkZXJ7XFxuICAgIGZsb2F0OmxlZnQ7XFxufVxcblxcbi5vc2gtcmFuZ2VzbGlkZXItY29udHJvbCB7XFxuICAgIGZsb2F0OiBsZWZ0O1xcbiAgICB3aWR0aDogMzBweDtcXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XFxufVxcblxcbi5vc2gtcmFuZ2VzbGlkZXItY29udHJvbC1zZWxlY3Qge1xcbiAgICBmbG9hdDogbGVmdDtcXG4gICAgd2lkdGg6IDMwcHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xcbn1cXG5cXG4ub3NoLXJhbmdlc2xpZGVyLWNvbnRyb2wgYXtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG5cXG4ub3NoLXJhbmdlc2xpZGVyLWNvbnRyb2wtc2VsZWN0IGF7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuLm9zaC1yYW5nZXNsaWRlci1jb250cm9sIGE6YWZ0ZXIge1xcbiAgICBmb250LWZhbWlseTogRm9udEF3ZXNvbWU7XFxuICAgIGNvbnRlbnQ6IFxcXCJcXFxcZjA0NFxcXCI7XFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICAgIGZvbnQtc2l6ZTozMHB4O1xcbn1cXG5cXG4ub3NoLXJhbmdlc2xpZGVyLWNvbnRyb2wtc2VsZWN0IGE6YWZ0ZXJ7XFxuICAgIGZvbnQtZmFtaWx5OiBGb250QXdlc29tZTtcXG4gICAgY29udGVudDogXFxcIlxcXFxmMDQ2XFxcIjtcXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gICAgZm9udC1zaXplOjMwcHg7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///181\n')},182:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(4);\nvar ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__(24);\nvar ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__(183);\nvar ___CSS_LOADER_URL_IMPORT_1___ = __webpack_require__(184);\nvar ___CSS_LOADER_URL_IMPORT_2___ = __webpack_require__(185);\nvar ___CSS_LOADER_URL_IMPORT_3___ = __webpack_require__(186);\nvar ___CSS_LOADER_URL_IMPORT_4___ = __webpack_require__(187);\nvar ___CSS_LOADER_URL_IMPORT_5___ = __webpack_require__(188);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___, { hash: "?#iefix&v=4.6.3" });\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___, { hash: "#fontawesomeregular" });\n// Module\nexports.push([module.i, "/*!\\n *  Font Awesome 4.6.3 by @davegandy - http://fontawesome.io - @fontawesome\\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\\n */@font-face{font-family:\'FontAwesome\';src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\'embedded-opentype\'),url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\'woff2\'),url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\'woff\'),url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\'truetype\'),url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") format(\'svg\');font-weight:normal;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}  .fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}  .fa-2x{font-size:2em}  .fa-3x{font-size:3em}  .fa-4x{font-size:4em}  .fa-5x{font-size:5em}  .fa-fw{width:1.28571429em;text-align:center}  .fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}  .fa-ul>li{position:relative}  .fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}  .fa-li.fa-lg{left:-1.85714286em}  .fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}  .fa-pull-left{float:left}  .fa-pull-right{float:right}  .fa.fa-pull-left{margin-right:.3em}  .fa.fa-pull-right{margin-left:.3em}  .pull-right{float:right}  .pull-left{float:left}  .fa.pull-left{margin-right:.3em}  .fa.pull-right{margin-left:.3em}  .fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}  .fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}  @-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)} 100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}  @keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)} 100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}  .fa-rotate-90{-ms-filter:\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\\";-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}  .fa-rotate-180{-ms-filter:\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\\";-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}  .fa-rotate-270{-ms-filter:\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\\";-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}  .fa-flip-horizontal{-ms-filter:\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\\";-webkit-transform:scale(-1, 1);-ms-transform:scale(-1, 1);transform:scale(-1, 1)}  .fa-flip-vertical{-ms-filter:\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\";-webkit-transform:scale(1, -1);-ms-transform:scale(1, -1);transform:scale(1, -1)}  :root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}  .fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}  .fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}  .fa-stack-1x{line-height:inherit}  .fa-stack-2x{font-size:2em}  .fa-inverse{color:#fff}  .fa-glass:before{content:\\"\\\\f000\\"}  .fa-music:before{content:\\"\\\\f001\\"}  .fa-search:before{content:\\"\\\\f002\\"}  .fa-envelope-o:before{content:\\"\\\\f003\\"}  .fa-heart:before{content:\\"\\\\f004\\"}  .fa-star:before{content:\\"\\\\f005\\"}  .fa-star-o:before{content:\\"\\\\f006\\"}  .fa-user:before{content:\\"\\\\f007\\"}  .fa-film:before{content:\\"\\\\f008\\"}  .fa-th-large:before{content:\\"\\\\f009\\"}  .fa-th:before{content:\\"\\\\f00a\\"}  .fa-th-list:before{content:\\"\\\\f00b\\"}  .fa-check:before{content:\\"\\\\f00c\\"}  .fa-remove:before,.fa-close:before,.fa-times:before{content:\\"\\\\f00d\\"}  .fa-search-plus:before{content:\\"\\\\f00e\\"}  .fa-search-minus:before{content:\\"\\\\f010\\"}  .fa-power-off:before{content:\\"\\\\f011\\"}  .fa-signal:before{content:\\"\\\\f012\\"}  .fa-gear:before,.fa-cog:before{content:\\"\\\\f013\\"}  .fa-trash-o:before{content:\\"\\\\f014\\"}  .fa-home:before{content:\\"\\\\f015\\"}  .fa-file-o:before{content:\\"\\\\f016\\"}  .fa-clock-o:before{content:\\"\\\\f017\\"}  .fa-road:before{content:\\"\\\\f018\\"}  .fa-download:before{content:\\"\\\\f019\\"}  .fa-arrow-circle-o-down:before{content:\\"\\\\f01a\\"}  .fa-arrow-circle-o-up:before{content:\\"\\\\f01b\\"}  .fa-inbox:before{content:\\"\\\\f01c\\"}  .fa-play-circle-o:before{content:\\"\\\\f01d\\"}  .fa-rotate-right:before,.fa-repeat:before{content:\\"\\\\f01e\\"}  .fa-refresh:before{content:\\"\\\\f021\\"}  .fa-list-alt:before{content:\\"\\\\f022\\"}  .fa-lock:before{content:\\"\\\\f023\\"}  .fa-flag:before{content:\\"\\\\f024\\"}  .fa-headphones:before{content:\\"\\\\f025\\"}  .fa-volume-off:before{content:\\"\\\\f026\\"}  .fa-volume-down:before{content:\\"\\\\f027\\"}  .fa-volume-up:before{content:\\"\\\\f028\\"}  .fa-qrcode:before{content:\\"\\\\f029\\"}  .fa-barcode:before{content:\\"\\\\f02a\\"}  .fa-tag:before{content:\\"\\\\f02b\\"}  .fa-tags:before{content:\\"\\\\f02c\\"}  .fa-book:before{content:\\"\\\\f02d\\"}  .fa-bookmark:before{content:\\"\\\\f02e\\"}  .fa-print:before{content:\\"\\\\f02f\\"}  .fa-camera:before{content:\\"\\\\f030\\"}  .fa-font:before{content:\\"\\\\f031\\"}  .fa-bold:before{content:\\"\\\\f032\\"}  .fa-italic:before{content:\\"\\\\f033\\"}  .fa-text-height:before{content:\\"\\\\f034\\"}  .fa-text-width:before{content:\\"\\\\f035\\"}  .fa-align-left:before{content:\\"\\\\f036\\"}  .fa-align-center:before{content:\\"\\\\f037\\"}  .fa-align-right:before{content:\\"\\\\f038\\"}  .fa-align-justify:before{content:\\"\\\\f039\\"}  .fa-list:before{content:\\"\\\\f03a\\"}  .fa-dedent:before,.fa-outdent:before{content:\\"\\\\f03b\\"}  .fa-indent:before{content:\\"\\\\f03c\\"}  .fa-video-camera:before{content:\\"\\\\f03d\\"}  .fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\\"\\\\f03e\\"}  .fa-pencil:before{content:\\"\\\\f040\\"}  .fa-map-marker:before{content:\\"\\\\f041\\"}  .fa-adjust:before{content:\\"\\\\f042\\"}  .fa-tint:before{content:\\"\\\\f043\\"}  .fa-edit:before,.fa-pencil-square-o:before{content:\\"\\\\f044\\"}  .fa-share-square-o:before{content:\\"\\\\f045\\"}  .fa-check-square-o:before{content:\\"\\\\f046\\"}  .fa-arrows:before{content:\\"\\\\f047\\"}  .fa-step-backward:before{content:\\"\\\\f048\\"}  .fa-fast-backward:before{content:\\"\\\\f049\\"}  .fa-backward:before{content:\\"\\\\f04a\\"}  .fa-play:before{content:\\"\\\\f04b\\"}  .fa-pause:before{content:\\"\\\\f04c\\"}  .fa-stop:before{content:\\"\\\\f04d\\"}  .fa-forward:before{content:\\"\\\\f04e\\"}  .fa-fast-forward:before{content:\\"\\\\f050\\"}  .fa-step-forward:before{content:\\"\\\\f051\\"}  .fa-eject:before{content:\\"\\\\f052\\"}  .fa-chevron-left:before{content:\\"\\\\f053\\"}  .fa-chevron-right:before{content:\\"\\\\f054\\"}  .fa-plus-circle:before{content:\\"\\\\f055\\"}  .fa-minus-circle:before{content:\\"\\\\f056\\"}  .fa-times-circle:before{content:\\"\\\\f057\\"}  .fa-check-circle:before{content:\\"\\\\f058\\"}  .fa-question-circle:before{content:\\"\\\\f059\\"}  .fa-info-circle:before{content:\\"\\\\f05a\\"}  .fa-crosshairs:before{content:\\"\\\\f05b\\"}  .fa-times-circle-o:before{content:\\"\\\\f05c\\"}  .fa-check-circle-o:before{content:\\"\\\\f05d\\"}  .fa-ban:before{content:\\"\\\\f05e\\"}  .fa-arrow-left:before{content:\\"\\\\f060\\"}  .fa-arrow-right:before{content:\\"\\\\f061\\"}  .fa-arrow-up:before{content:\\"\\\\f062\\"}  .fa-arrow-down:before{content:\\"\\\\f063\\"}  .fa-mail-forward:before,.fa-share:before{content:\\"\\\\f064\\"}  .fa-expand:before{content:\\"\\\\f065\\"}  .fa-compress:before{content:\\"\\\\f066\\"}  .fa-plus:before{content:\\"\\\\f067\\"}  .fa-minus:before{content:\\"\\\\f068\\"}  .fa-asterisk:before{content:\\"\\\\f069\\"}  .fa-exclamation-circle:before{content:\\"\\\\f06a\\"}  .fa-gift:before{content:\\"\\\\f06b\\"}  .fa-leaf:before{content:\\"\\\\f06c\\"}  .fa-fire:before{content:\\"\\\\f06d\\"}  .fa-eye:before{content:\\"\\\\f06e\\"}  .fa-eye-slash:before{content:\\"\\\\f070\\"}  .fa-warning:before,.fa-exclamation-triangle:before{content:\\"\\\\f071\\"}  .fa-plane:before{content:\\"\\\\f072\\"}  .fa-calendar:before{content:\\"\\\\f073\\"}  .fa-random:before{content:\\"\\\\f074\\"}  .fa-comment:before{content:\\"\\\\f075\\"}  .fa-magnet:before{content:\\"\\\\f076\\"}  .fa-chevron-up:before{content:\\"\\\\f077\\"}  .fa-chevron-down:before{content:\\"\\\\f078\\"}  .fa-retweet:before{content:\\"\\\\f079\\"}  .fa-shopping-cart:before{content:\\"\\\\f07a\\"}  .fa-folder:before{content:\\"\\\\f07b\\"}  .fa-folder-open:before{content:\\"\\\\f07c\\"}  .fa-arrows-v:before{content:\\"\\\\f07d\\"}  .fa-arrows-h:before{content:\\"\\\\f07e\\"}  .fa-bar-chart-o:before,.fa-bar-chart:before{content:\\"\\\\f080\\"}  .fa-twitter-square:before{content:\\"\\\\f081\\"}  .fa-facebook-square:before{content:\\"\\\\f082\\"}  .fa-camera-retro:before{content:\\"\\\\f083\\"}  .fa-key:before{content:\\"\\\\f084\\"}  .fa-gears:before,.fa-cogs:before{content:\\"\\\\f085\\"}  .fa-comments:before{content:\\"\\\\f086\\"}  .fa-thumbs-o-up:before{content:\\"\\\\f087\\"}  .fa-thumbs-o-down:before{content:\\"\\\\f088\\"}  .fa-star-half:before{content:\\"\\\\f089\\"}  .fa-heart-o:before{content:\\"\\\\f08a\\"}  .fa-sign-out:before{content:\\"\\\\f08b\\"}  .fa-linkedin-square:before{content:\\"\\\\f08c\\"}  .fa-thumb-tack:before{content:\\"\\\\f08d\\"}  .fa-external-link:before{content:\\"\\\\f08e\\"}  .fa-sign-in:before{content:\\"\\\\f090\\"}  .fa-trophy:before{content:\\"\\\\f091\\"}  .fa-github-square:before{content:\\"\\\\f092\\"}  .fa-upload:before{content:\\"\\\\f093\\"}  .fa-lemon-o:before{content:\\"\\\\f094\\"}  .fa-phone:before{content:\\"\\\\f095\\"}  .fa-square-o:before{content:\\"\\\\f096\\"}  .fa-bookmark-o:before{content:\\"\\\\f097\\"}  .fa-phone-square:before{content:\\"\\\\f098\\"}  .fa-twitter:before{content:\\"\\\\f099\\"}  .fa-facebook-f:before,.fa-facebook:before{content:\\"\\\\f09a\\"}  .fa-github:before{content:\\"\\\\f09b\\"}  .fa-unlock:before{content:\\"\\\\f09c\\"}  .fa-credit-card:before{content:\\"\\\\f09d\\"}  .fa-feed:before,.fa-rss:before{content:\\"\\\\f09e\\"}  .fa-hdd-o:before{content:\\"\\\\f0a0\\"}  .fa-bullhorn:before{content:\\"\\\\f0a1\\"}  .fa-bell:before{content:\\"\\\\f0f3\\"}  .fa-certificate:before{content:\\"\\\\f0a3\\"}  .fa-hand-o-right:before{content:\\"\\\\f0a4\\"}  .fa-hand-o-left:before{content:\\"\\\\f0a5\\"}  .fa-hand-o-up:before{content:\\"\\\\f0a6\\"}  .fa-hand-o-down:before{content:\\"\\\\f0a7\\"}  .fa-arrow-circle-left:before{content:\\"\\\\f0a8\\"}  .fa-arrow-circle-right:before{content:\\"\\\\f0a9\\"}  .fa-arrow-circle-up:before{content:\\"\\\\f0aa\\"}  .fa-arrow-circle-down:before{content:\\"\\\\f0ab\\"}  .fa-globe:before{content:\\"\\\\f0ac\\"}  .fa-wrench:before{content:\\"\\\\f0ad\\"}  .fa-tasks:before{content:\\"\\\\f0ae\\"}  .fa-filter:before{content:\\"\\\\f0b0\\"}  .fa-briefcase:before{content:\\"\\\\f0b1\\"}  .fa-arrows-alt:before{content:\\"\\\\f0b2\\"}  .fa-group:before,.fa-users:before{content:\\"\\\\f0c0\\"}  .fa-chain:before,.fa-link:before{content:\\"\\\\f0c1\\"}  .fa-cloud:before{content:\\"\\\\f0c2\\"}  .fa-flask:before{content:\\"\\\\f0c3\\"}  .fa-cut:before,.fa-scissors:before{content:\\"\\\\f0c4\\"}  .fa-copy:before,.fa-files-o:before{content:\\"\\\\f0c5\\"}  .fa-paperclip:before{content:\\"\\\\f0c6\\"}  .fa-save:before,.fa-floppy-o:before{content:\\"\\\\f0c7\\"}  .fa-square:before{content:\\"\\\\f0c8\\"}  .fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\\"\\\\f0c9\\"}  .fa-list-ul:before{content:\\"\\\\f0ca\\"}  .fa-list-ol:before{content:\\"\\\\f0cb\\"}  .fa-strikethrough:before{content:\\"\\\\f0cc\\"}  .fa-underline:before{content:\\"\\\\f0cd\\"}  .fa-table:before{content:\\"\\\\f0ce\\"}  .fa-magic:before{content:\\"\\\\f0d0\\"}  .fa-truck:before{content:\\"\\\\f0d1\\"}  .fa-pinterest:before{content:\\"\\\\f0d2\\"}  .fa-pinterest-square:before{content:\\"\\\\f0d3\\"}  .fa-google-plus-square:before{content:\\"\\\\f0d4\\"}  .fa-google-plus:before{content:\\"\\\\f0d5\\"}  .fa-money:before{content:\\"\\\\f0d6\\"}  .fa-caret-down:before{content:\\"\\\\f0d7\\"}  .fa-caret-up:before{content:\\"\\\\f0d8\\"}  .fa-caret-left:before{content:\\"\\\\f0d9\\"}  .fa-caret-right:before{content:\\"\\\\f0da\\"}  .fa-columns:before{content:\\"\\\\f0db\\"}  .fa-unsorted:before,.fa-sort:before{content:\\"\\\\f0dc\\"}  .fa-sort-down:before,.fa-sort-desc:before{content:\\"\\\\f0dd\\"}  .fa-sort-up:before,.fa-sort-asc:before{content:\\"\\\\f0de\\"}  .fa-envelope:before{content:\\"\\\\f0e0\\"}  .fa-linkedin:before{content:\\"\\\\f0e1\\"}  .fa-rotate-left:before,.fa-undo:before{content:\\"\\\\f0e2\\"}  .fa-legal:before,.fa-gavel:before{content:\\"\\\\f0e3\\"}  .fa-dashboard:before,.fa-tachometer:before{content:\\"\\\\f0e4\\"}  .fa-comment-o:before{content:\\"\\\\f0e5\\"}  .fa-comments-o:before{content:\\"\\\\f0e6\\"}  .fa-flash:before,.fa-bolt:before{content:\\"\\\\f0e7\\"}  .fa-sitemap:before{content:\\"\\\\f0e8\\"}  .fa-umbrella:before{content:\\"\\\\f0e9\\"}  .fa-paste:before,.fa-clipboard:before{content:\\"\\\\f0ea\\"}  .fa-lightbulb-o:before{content:\\"\\\\f0eb\\"}  .fa-exchange:before{content:\\"\\\\f0ec\\"}  .fa-cloud-download:before{content:\\"\\\\f0ed\\"}  .fa-cloud-upload:before{content:\\"\\\\f0ee\\"}  .fa-user-md:before{content:\\"\\\\f0f0\\"}  .fa-stethoscope:before{content:\\"\\\\f0f1\\"}  .fa-suitcase:before{content:\\"\\\\f0f2\\"}  .fa-bell-o:before{content:\\"\\\\f0a2\\"}  .fa-coffee:before{content:\\"\\\\f0f4\\"}  .fa-cutlery:before{content:\\"\\\\f0f5\\"}  .fa-file-text-o:before{content:\\"\\\\f0f6\\"}  .fa-building-o:before{content:\\"\\\\f0f7\\"}  .fa-hospital-o:before{content:\\"\\\\f0f8\\"}  .fa-ambulance:before{content:\\"\\\\f0f9\\"}  .fa-medkit:before{content:\\"\\\\f0fa\\"}  .fa-fighter-jet:before{content:\\"\\\\f0fb\\"}  .fa-beer:before{content:\\"\\\\f0fc\\"}  .fa-h-square:before{content:\\"\\\\f0fd\\"}  .fa-plus-square:before{content:\\"\\\\f0fe\\"}  .fa-angle-double-left:before{content:\\"\\\\f100\\"}  .fa-angle-double-right:before{content:\\"\\\\f101\\"}  .fa-angle-double-up:before{content:\\"\\\\f102\\"}  .fa-angle-double-down:before{content:\\"\\\\f103\\"}  .fa-angle-left:before{content:\\"\\\\f104\\"}  .fa-angle-right:before{content:\\"\\\\f105\\"}  .fa-angle-up:before{content:\\"\\\\f106\\"}  .fa-angle-down:before{content:\\"\\\\f107\\"}  .fa-desktop:before{content:\\"\\\\f108\\"}  .fa-laptop:before{content:\\"\\\\f109\\"}  .fa-tablet:before{content:\\"\\\\f10a\\"}  .fa-mobile-phone:before,.fa-mobile:before{content:\\"\\\\f10b\\"}  .fa-circle-o:before{content:\\"\\\\f10c\\"}  .fa-quote-left:before{content:\\"\\\\f10d\\"}  .fa-quote-right:before{content:\\"\\\\f10e\\"}  .fa-spinner:before{content:\\"\\\\f110\\"}  .fa-circle:before{content:\\"\\\\f111\\"}  .fa-mail-reply:before,.fa-reply:before{content:\\"\\\\f112\\"}  .fa-github-alt:before{content:\\"\\\\f113\\"}  .fa-folder-o:before{content:\\"\\\\f114\\"}  .fa-folder-open-o:before{content:\\"\\\\f115\\"}  .fa-smile-o:before{content:\\"\\\\f118\\"}  .fa-frown-o:before{content:\\"\\\\f119\\"}  .fa-meh-o:before{content:\\"\\\\f11a\\"}  .fa-gamepad:before{content:\\"\\\\f11b\\"}  .fa-keyboard-o:before{content:\\"\\\\f11c\\"}  .fa-flag-o:before{content:\\"\\\\f11d\\"}  .fa-flag-checkered:before{content:\\"\\\\f11e\\"}  .fa-terminal:before{content:\\"\\\\f120\\"}  .fa-code:before{content:\\"\\\\f121\\"}  .fa-mail-reply-all:before,.fa-reply-all:before{content:\\"\\\\f122\\"}  .fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\\"\\\\f123\\"}  .fa-location-arrow:before{content:\\"\\\\f124\\"}  .fa-crop:before{content:\\"\\\\f125\\"}  .fa-code-fork:before{content:\\"\\\\f126\\"}  .fa-unlink:before,.fa-chain-broken:before{content:\\"\\\\f127\\"}  .fa-question:before{content:\\"\\\\f128\\"}  .fa-info:before{content:\\"\\\\f129\\"}  .fa-exclamation:before{content:\\"\\\\f12a\\"}  .fa-superscript:before{content:\\"\\\\f12b\\"}  .fa-subscript:before{content:\\"\\\\f12c\\"}  .fa-eraser:before{content:\\"\\\\f12d\\"}  .fa-puzzle-piece:before{content:\\"\\\\f12e\\"}  .fa-microphone:before{content:\\"\\\\f130\\"}  .fa-microphone-slash:before{content:\\"\\\\f131\\"}  .fa-shield:before{content:\\"\\\\f132\\"}  .fa-calendar-o:before{content:\\"\\\\f133\\"}  .fa-fire-extinguisher:before{content:\\"\\\\f134\\"}  .fa-rocket:before{content:\\"\\\\f135\\"}  .fa-maxcdn:before{content:\\"\\\\f136\\"}  .fa-chevron-circle-left:before{content:\\"\\\\f137\\"}  .fa-chevron-circle-right:before{content:\\"\\\\f138\\"}  .fa-chevron-circle-up:before{content:\\"\\\\f139\\"}  .fa-chevron-circle-down:before{content:\\"\\\\f13a\\"}  .fa-html5:before{content:\\"\\\\f13b\\"}  .fa-css3:before{content:\\"\\\\f13c\\"}  .fa-anchor:before{content:\\"\\\\f13d\\"}  .fa-unlock-alt:before{content:\\"\\\\f13e\\"}  .fa-bullseye:before{content:\\"\\\\f140\\"}  .fa-ellipsis-h:before{content:\\"\\\\f141\\"}  .fa-ellipsis-v:before{content:\\"\\\\f142\\"}  .fa-rss-square:before{content:\\"\\\\f143\\"}  .fa-play-circle:before{content:\\"\\\\f144\\"}  .fa-ticket:before{content:\\"\\\\f145\\"}  .fa-minus-square:before{content:\\"\\\\f146\\"}  .fa-minus-square-o:before{content:\\"\\\\f147\\"}  .fa-level-up:before{content:\\"\\\\f148\\"}  .fa-level-down:before{content:\\"\\\\f149\\"}  .fa-check-square:before{content:\\"\\\\f14a\\"}  .fa-pencil-square:before{content:\\"\\\\f14b\\"}  .fa-external-link-square:before{content:\\"\\\\f14c\\"}  .fa-share-square:before{content:\\"\\\\f14d\\"}  .fa-compass:before{content:\\"\\\\f14e\\"}  .fa-toggle-down:before,.fa-caret-square-o-down:before{content:\\"\\\\f150\\"}  .fa-toggle-up:before,.fa-caret-square-o-up:before{content:\\"\\\\f151\\"}  .fa-toggle-right:before,.fa-caret-square-o-right:before{content:\\"\\\\f152\\"}  .fa-euro:before,.fa-eur:before{content:\\"\\\\f153\\"}  .fa-gbp:before{content:\\"\\\\f154\\"}  .fa-dollar:before,.fa-usd:before{content:\\"\\\\f155\\"}  .fa-rupee:before,.fa-inr:before{content:\\"\\\\f156\\"}  .fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\\"\\\\f157\\"}  .fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\\"\\\\f158\\"}  .fa-won:before,.fa-krw:before{content:\\"\\\\f159\\"}  .fa-bitcoin:before,.fa-btc:before{content:\\"\\\\f15a\\"}  .fa-file:before{content:\\"\\\\f15b\\"}  .fa-file-text:before{content:\\"\\\\f15c\\"}  .fa-sort-alpha-asc:before{content:\\"\\\\f15d\\"}  .fa-sort-alpha-desc:before{content:\\"\\\\f15e\\"}  .fa-sort-amount-asc:before{content:\\"\\\\f160\\"}  .fa-sort-amount-desc:before{content:\\"\\\\f161\\"}  .fa-sort-numeric-asc:before{content:\\"\\\\f162\\"}  .fa-sort-numeric-desc:before{content:\\"\\\\f163\\"}  .fa-thumbs-up:before{content:\\"\\\\f164\\"}  .fa-thumbs-down:before{content:\\"\\\\f165\\"}  .fa-youtube-square:before{content:\\"\\\\f166\\"}  .fa-youtube:before{content:\\"\\\\f167\\"}  .fa-xing:before{content:\\"\\\\f168\\"}  .fa-xing-square:before{content:\\"\\\\f169\\"}  .fa-youtube-play:before{content:\\"\\\\f16a\\"}  .fa-dropbox:before{content:\\"\\\\f16b\\"}  .fa-stack-overflow:before{content:\\"\\\\f16c\\"}  .fa-instagram:before{content:\\"\\\\f16d\\"}  .fa-flickr:before{content:\\"\\\\f16e\\"}  .fa-adn:before{content:\\"\\\\f170\\"}  .fa-bitbucket:before{content:\\"\\\\f171\\"}  .fa-bitbucket-square:before{content:\\"\\\\f172\\"}  .fa-tumblr:before{content:\\"\\\\f173\\"}  .fa-tumblr-square:before{content:\\"\\\\f174\\"}  .fa-long-arrow-down:before{content:\\"\\\\f175\\"}  .fa-long-arrow-up:before{content:\\"\\\\f176\\"}  .fa-long-arrow-left:before{content:\\"\\\\f177\\"}  .fa-long-arrow-right:before{content:\\"\\\\f178\\"}  .fa-apple:before{content:\\"\\\\f179\\"}  .fa-windows:before{content:\\"\\\\f17a\\"}  .fa-android:before{content:\\"\\\\f17b\\"}  .fa-linux:before{content:\\"\\\\f17c\\"}  .fa-dribbble:before{content:\\"\\\\f17d\\"}  .fa-skype:before{content:\\"\\\\f17e\\"}  .fa-foursquare:before{content:\\"\\\\f180\\"}  .fa-trello:before{content:\\"\\\\f181\\"}  .fa-female:before{content:\\"\\\\f182\\"}  .fa-male:before{content:\\"\\\\f183\\"}  .fa-gittip:before,.fa-gratipay:before{content:\\"\\\\f184\\"}  .fa-sun-o:before{content:\\"\\\\f185\\"}  .fa-moon-o:before{content:\\"\\\\f186\\"}  .fa-archive:before{content:\\"\\\\f187\\"}  .fa-bug:before{content:\\"\\\\f188\\"}  .fa-vk:before{content:\\"\\\\f189\\"}  .fa-weibo:before{content:\\"\\\\f18a\\"}  .fa-renren:before{content:\\"\\\\f18b\\"}  .fa-pagelines:before{content:\\"\\\\f18c\\"}  .fa-stack-exchange:before{content:\\"\\\\f18d\\"}  .fa-arrow-circle-o-right:before{content:\\"\\\\f18e\\"}  .fa-arrow-circle-o-left:before{content:\\"\\\\f190\\"}  .fa-toggle-left:before,.fa-caret-square-o-left:before{content:\\"\\\\f191\\"}  .fa-dot-circle-o:before{content:\\"\\\\f192\\"}  .fa-wheelchair:before{content:\\"\\\\f193\\"}  .fa-vimeo-square:before{content:\\"\\\\f194\\"}  .fa-turkish-lira:before,.fa-try:before{content:\\"\\\\f195\\"}  .fa-plus-square-o:before{content:\\"\\\\f196\\"}  .fa-space-shuttle:before{content:\\"\\\\f197\\"}  .fa-slack:before{content:\\"\\\\f198\\"}  .fa-envelope-square:before{content:\\"\\\\f199\\"}  .fa-wordpress:before{content:\\"\\\\f19a\\"}  .fa-openid:before{content:\\"\\\\f19b\\"}  .fa-institution:before,.fa-bank:before,.fa-university:before{content:\\"\\\\f19c\\"}  .fa-mortar-board:before,.fa-graduation-cap:before{content:\\"\\\\f19d\\"}  .fa-yahoo:before{content:\\"\\\\f19e\\"}  .fa-google:before{content:\\"\\\\f1a0\\"}  .fa-reddit:before{content:\\"\\\\f1a1\\"}  .fa-reddit-square:before{content:\\"\\\\f1a2\\"}  .fa-stumbleupon-circle:before{content:\\"\\\\f1a3\\"}  .fa-stumbleupon:before{content:\\"\\\\f1a4\\"}  .fa-delicious:before{content:\\"\\\\f1a5\\"}  .fa-digg:before{content:\\"\\\\f1a6\\"}  .fa-pied-piper-pp:before{content:\\"\\\\f1a7\\"}  .fa-pied-piper-alt:before{content:\\"\\\\f1a8\\"}  .fa-drupal:before{content:\\"\\\\f1a9\\"}  .fa-joomla:before{content:\\"\\\\f1aa\\"}  .fa-language:before{content:\\"\\\\f1ab\\"}  .fa-fax:before{content:\\"\\\\f1ac\\"}  .fa-building:before{content:\\"\\\\f1ad\\"}  .fa-child:before{content:\\"\\\\f1ae\\"}  .fa-paw:before{content:\\"\\\\f1b0\\"}  .fa-spoon:before{content:\\"\\\\f1b1\\"}  .fa-cube:before{content:\\"\\\\f1b2\\"}  .fa-cubes:before{content:\\"\\\\f1b3\\"}  .fa-behance:before{content:\\"\\\\f1b4\\"}  .fa-behance-square:before{content:\\"\\\\f1b5\\"}  .fa-steam:before{content:\\"\\\\f1b6\\"}  .fa-steam-square:before{content:\\"\\\\f1b7\\"}  .fa-recycle:before{content:\\"\\\\f1b8\\"}  .fa-automobile:before,.fa-car:before{content:\\"\\\\f1b9\\"}  .fa-cab:before,.fa-taxi:before{content:\\"\\\\f1ba\\"}  .fa-tree:before{content:\\"\\\\f1bb\\"}  .fa-spotify:before{content:\\"\\\\f1bc\\"}  .fa-deviantart:before{content:\\"\\\\f1bd\\"}  .fa-soundcloud:before{content:\\"\\\\f1be\\"}  .fa-database:before{content:\\"\\\\f1c0\\"}  .fa-file-pdf-o:before{content:\\"\\\\f1c1\\"}  .fa-file-word-o:before{content:\\"\\\\f1c2\\"}  .fa-file-excel-o:before{content:\\"\\\\f1c3\\"}  .fa-file-powerpoint-o:before{content:\\"\\\\f1c4\\"}  .fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\\"\\\\f1c5\\"}  .fa-file-zip-o:before,.fa-file-archive-o:before{content:\\"\\\\f1c6\\"}  .fa-file-sound-o:before,.fa-file-audio-o:before{content:\\"\\\\f1c7\\"}  .fa-file-movie-o:before,.fa-file-video-o:before{content:\\"\\\\f1c8\\"}  .fa-file-code-o:before{content:\\"\\\\f1c9\\"}  .fa-vine:before{content:\\"\\\\f1ca\\"}  .fa-codepen:before{content:\\"\\\\f1cb\\"}  .fa-jsfiddle:before{content:\\"\\\\f1cc\\"}  .fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\\"\\\\f1cd\\"}  .fa-circle-o-notch:before{content:\\"\\\\f1ce\\"}  .fa-ra:before,.fa-resistance:before,.fa-rebel:before{content:\\"\\\\f1d0\\"}  .fa-ge:before,.fa-empire:before{content:\\"\\\\f1d1\\"}  .fa-git-square:before{content:\\"\\\\f1d2\\"}  .fa-git:before{content:\\"\\\\f1d3\\"}  .fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:\\"\\\\f1d4\\"}  .fa-tencent-weibo:before{content:\\"\\\\f1d5\\"}  .fa-qq:before{content:\\"\\\\f1d6\\"}  .fa-wechat:before,.fa-weixin:before{content:\\"\\\\f1d7\\"}  .fa-send:before,.fa-paper-plane:before{content:\\"\\\\f1d8\\"}  .fa-send-o:before,.fa-paper-plane-o:before{content:\\"\\\\f1d9\\"}  .fa-history:before{content:\\"\\\\f1da\\"}  .fa-circle-thin:before{content:\\"\\\\f1db\\"}  .fa-header:before{content:\\"\\\\f1dc\\"}  .fa-paragraph:before{content:\\"\\\\f1dd\\"}  .fa-sliders:before{content:\\"\\\\f1de\\"}  .fa-share-alt:before{content:\\"\\\\f1e0\\"}  .fa-share-alt-square:before{content:\\"\\\\f1e1\\"}  .fa-bomb:before{content:\\"\\\\f1e2\\"}  .fa-soccer-ball-o:before,.fa-futbol-o:before{content:\\"\\\\f1e3\\"}  .fa-tty:before{content:\\"\\\\f1e4\\"}  .fa-binoculars:before{content:\\"\\\\f1e5\\"}  .fa-plug:before{content:\\"\\\\f1e6\\"}  .fa-slideshare:before{content:\\"\\\\f1e7\\"}  .fa-twitch:before{content:\\"\\\\f1e8\\"}  .fa-yelp:before{content:\\"\\\\f1e9\\"}  .fa-newspaper-o:before{content:\\"\\\\f1ea\\"}  .fa-wifi:before{content:\\"\\\\f1eb\\"}  .fa-calculator:before{content:\\"\\\\f1ec\\"}  .fa-paypal:before{content:\\"\\\\f1ed\\"}  .fa-google-wallet:before{content:\\"\\\\f1ee\\"}  .fa-cc-visa:before{content:\\"\\\\f1f0\\"}  .fa-cc-mastercard:before{content:\\"\\\\f1f1\\"}  .fa-cc-discover:before{content:\\"\\\\f1f2\\"}  .fa-cc-amex:before{content:\\"\\\\f1f3\\"}  .fa-cc-paypal:before{content:\\"\\\\f1f4\\"}  .fa-cc-stripe:before{content:\\"\\\\f1f5\\"}  .fa-bell-slash:before{content:\\"\\\\f1f6\\"}  .fa-bell-slash-o:before{content:\\"\\\\f1f7\\"}  .fa-trash:before{content:\\"\\\\f1f8\\"}  .fa-copyright:before{content:\\"\\\\f1f9\\"}  .fa-at:before{content:\\"\\\\f1fa\\"}  .fa-eyedropper:before{content:\\"\\\\f1fb\\"}  .fa-paint-brush:before{content:\\"\\\\f1fc\\"}  .fa-birthday-cake:before{content:\\"\\\\f1fd\\"}  .fa-area-chart:before{content:\\"\\\\f1fe\\"}  .fa-pie-chart:before{content:\\"\\\\f200\\"}  .fa-line-chart:before{content:\\"\\\\f201\\"}  .fa-lastfm:before{content:\\"\\\\f202\\"}  .fa-lastfm-square:before{content:\\"\\\\f203\\"}  .fa-toggle-off:before{content:\\"\\\\f204\\"}  .fa-toggle-on:before{content:\\"\\\\f205\\"}  .fa-bicycle:before{content:\\"\\\\f206\\"}  .fa-bus:before{content:\\"\\\\f207\\"}  .fa-ioxhost:before{content:\\"\\\\f208\\"}  .fa-angellist:before{content:\\"\\\\f209\\"}  .fa-cc:before{content:\\"\\\\f20a\\"}  .fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:\\"\\\\f20b\\"}  .fa-meanpath:before{content:\\"\\\\f20c\\"}  .fa-buysellads:before{content:\\"\\\\f20d\\"}  .fa-connectdevelop:before{content:\\"\\\\f20e\\"}  .fa-dashcube:before{content:\\"\\\\f210\\"}  .fa-forumbee:before{content:\\"\\\\f211\\"}  .fa-leanpub:before{content:\\"\\\\f212\\"}  .fa-sellsy:before{content:\\"\\\\f213\\"}  .fa-shirtsinbulk:before{content:\\"\\\\f214\\"}  .fa-simplybuilt:before{content:\\"\\\\f215\\"}  .fa-skyatlas:before{content:\\"\\\\f216\\"}  .fa-cart-plus:before{content:\\"\\\\f217\\"}  .fa-cart-arrow-down:before{content:\\"\\\\f218\\"}  .fa-diamond:before{content:\\"\\\\f219\\"}  .fa-ship:before{content:\\"\\\\f21a\\"}  .fa-user-secret:before{content:\\"\\\\f21b\\"}  .fa-motorcycle:before{content:\\"\\\\f21c\\"}  .fa-street-view:before{content:\\"\\\\f21d\\"}  .fa-heartbeat:before{content:\\"\\\\f21e\\"}  .fa-venus:before{content:\\"\\\\f221\\"}  .fa-mars:before{content:\\"\\\\f222\\"}  .fa-mercury:before{content:\\"\\\\f223\\"}  .fa-intersex:before,.fa-transgender:before{content:\\"\\\\f224\\"}  .fa-transgender-alt:before{content:\\"\\\\f225\\"}  .fa-venus-double:before{content:\\"\\\\f226\\"}  .fa-mars-double:before{content:\\"\\\\f227\\"}  .fa-venus-mars:before{content:\\"\\\\f228\\"}  .fa-mars-stroke:before{content:\\"\\\\f229\\"}  .fa-mars-stroke-v:before{content:\\"\\\\f22a\\"}  .fa-mars-stroke-h:before{content:\\"\\\\f22b\\"}  .fa-neuter:before{content:\\"\\\\f22c\\"}  .fa-genderless:before{content:\\"\\\\f22d\\"}  .fa-facebook-official:before{content:\\"\\\\f230\\"}  .fa-pinterest-p:before{content:\\"\\\\f231\\"}  .fa-whatsapp:before{content:\\"\\\\f232\\"}  .fa-server:before{content:\\"\\\\f233\\"}  .fa-user-plus:before{content:\\"\\\\f234\\"}  .fa-user-times:before{content:\\"\\\\f235\\"}  .fa-hotel:before,.fa-bed:before{content:\\"\\\\f236\\"}  .fa-viacoin:before{content:\\"\\\\f237\\"}  .fa-train:before{content:\\"\\\\f238\\"}  .fa-subway:before{content:\\"\\\\f239\\"}  .fa-medium:before{content:\\"\\\\f23a\\"}  .fa-yc:before,.fa-y-combinator:before{content:\\"\\\\f23b\\"}  .fa-optin-monster:before{content:\\"\\\\f23c\\"}  .fa-opencart:before{content:\\"\\\\f23d\\"}  .fa-expeditedssl:before{content:\\"\\\\f23e\\"}  .fa-battery-4:before,.fa-battery-full:before{content:\\"\\\\f240\\"}  .fa-battery-3:before,.fa-battery-three-quarters:before{content:\\"\\\\f241\\"}  .fa-battery-2:before,.fa-battery-half:before{content:\\"\\\\f242\\"}  .fa-battery-1:before,.fa-battery-quarter:before{content:\\"\\\\f243\\"}  .fa-battery-0:before,.fa-battery-empty:before{content:\\"\\\\f244\\"}  .fa-mouse-pointer:before{content:\\"\\\\f245\\"}  .fa-i-cursor:before{content:\\"\\\\f246\\"}  .fa-object-group:before{content:\\"\\\\f247\\"}  .fa-object-ungroup:before{content:\\"\\\\f248\\"}  .fa-sticky-note:before{content:\\"\\\\f249\\"}  .fa-sticky-note-o:before{content:\\"\\\\f24a\\"}  .fa-cc-jcb:before{content:\\"\\\\f24b\\"}  .fa-cc-diners-club:before{content:\\"\\\\f24c\\"}  .fa-clone:before{content:\\"\\\\f24d\\"}  .fa-balance-scale:before{content:\\"\\\\f24e\\"}  .fa-hourglass-o:before{content:\\"\\\\f250\\"}  .fa-hourglass-1:before,.fa-hourglass-start:before{content:\\"\\\\f251\\"}  .fa-hourglass-2:before,.fa-hourglass-half:before{content:\\"\\\\f252\\"}  .fa-hourglass-3:before,.fa-hourglass-end:before{content:\\"\\\\f253\\"}  .fa-hourglass:before{content:\\"\\\\f254\\"}  .fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\\"\\\\f255\\"}  .fa-hand-stop-o:before,.fa-hand-paper-o:before{content:\\"\\\\f256\\"}  .fa-hand-scissors-o:before{content:\\"\\\\f257\\"}  .fa-hand-lizard-o:before{content:\\"\\\\f258\\"}  .fa-hand-spock-o:before{content:\\"\\\\f259\\"}  .fa-hand-pointer-o:before{content:\\"\\\\f25a\\"}  .fa-hand-peace-o:before{content:\\"\\\\f25b\\"}  .fa-trademark:before{content:\\"\\\\f25c\\"}  .fa-registered:before{content:\\"\\\\f25d\\"}  .fa-creative-commons:before{content:\\"\\\\f25e\\"}  .fa-gg:before{content:\\"\\\\f260\\"}  .fa-gg-circle:before{content:\\"\\\\f261\\"}  .fa-tripadvisor:before{content:\\"\\\\f262\\"}  .fa-odnoklassniki:before{content:\\"\\\\f263\\"}  .fa-odnoklassniki-square:before{content:\\"\\\\f264\\"}  .fa-get-pocket:before{content:\\"\\\\f265\\"}  .fa-wikipedia-w:before{content:\\"\\\\f266\\"}  .fa-safari:before{content:\\"\\\\f267\\"}  .fa-chrome:before{content:\\"\\\\f268\\"}  .fa-firefox:before{content:\\"\\\\f269\\"}  .fa-opera:before{content:\\"\\\\f26a\\"}  .fa-internet-explorer:before{content:\\"\\\\f26b\\"}  .fa-tv:before,.fa-television:before{content:\\"\\\\f26c\\"}  .fa-contao:before{content:\\"\\\\f26d\\"}  .fa-500px:before{content:\\"\\\\f26e\\"}  .fa-amazon:before{content:\\"\\\\f270\\"}  .fa-calendar-plus-o:before{content:\\"\\\\f271\\"}  .fa-calendar-minus-o:before{content:\\"\\\\f272\\"}  .fa-calendar-times-o:before{content:\\"\\\\f273\\"}  .fa-calendar-check-o:before{content:\\"\\\\f274\\"}  .fa-industry:before{content:\\"\\\\f275\\"}  .fa-map-pin:before{content:\\"\\\\f276\\"}  .fa-map-signs:before{content:\\"\\\\f277\\"}  .fa-map-o:before{content:\\"\\\\f278\\"}  .fa-map:before{content:\\"\\\\f279\\"}  .fa-commenting:before{content:\\"\\\\f27a\\"}  .fa-commenting-o:before{content:\\"\\\\f27b\\"}  .fa-houzz:before{content:\\"\\\\f27c\\"}  .fa-vimeo:before{content:\\"\\\\f27d\\"}  .fa-black-tie:before{content:\\"\\\\f27e\\"}  .fa-fonticons:before{content:\\"\\\\f280\\"}  .fa-reddit-alien:before{content:\\"\\\\f281\\"}  .fa-edge:before{content:\\"\\\\f282\\"}  .fa-credit-card-alt:before{content:\\"\\\\f283\\"}  .fa-codiepie:before{content:\\"\\\\f284\\"}  .fa-modx:before{content:\\"\\\\f285\\"}  .fa-fort-awesome:before{content:\\"\\\\f286\\"}  .fa-usb:before{content:\\"\\\\f287\\"}  .fa-product-hunt:before{content:\\"\\\\f288\\"}  .fa-mixcloud:before{content:\\"\\\\f289\\"}  .fa-scribd:before{content:\\"\\\\f28a\\"}  .fa-pause-circle:before{content:\\"\\\\f28b\\"}  .fa-pause-circle-o:before{content:\\"\\\\f28c\\"}  .fa-stop-circle:before{content:\\"\\\\f28d\\"}  .fa-stop-circle-o:before{content:\\"\\\\f28e\\"}  .fa-shopping-bag:before{content:\\"\\\\f290\\"}  .fa-shopping-basket:before{content:\\"\\\\f291\\"}  .fa-hashtag:before{content:\\"\\\\f292\\"}  .fa-bluetooth:before{content:\\"\\\\f293\\"}  .fa-bluetooth-b:before{content:\\"\\\\f294\\"}  .fa-percent:before{content:\\"\\\\f295\\"}  .fa-gitlab:before{content:\\"\\\\f296\\"}  .fa-wpbeginner:before{content:\\"\\\\f297\\"}  .fa-wpforms:before{content:\\"\\\\f298\\"}  .fa-envira:before{content:\\"\\\\f299\\"}  .fa-universal-access:before{content:\\"\\\\f29a\\"}  .fa-wheelchair-alt:before{content:\\"\\\\f29b\\"}  .fa-question-circle-o:before{content:\\"\\\\f29c\\"}  .fa-blind:before{content:\\"\\\\f29d\\"}  .fa-audio-description:before{content:\\"\\\\f29e\\"}  .fa-volume-control-phone:before{content:\\"\\\\f2a0\\"}  .fa-braille:before{content:\\"\\\\f2a1\\"}  .fa-assistive-listening-systems:before{content:\\"\\\\f2a2\\"}  .fa-asl-interpreting:before,.fa-american-sign-language-interpreting:before{content:\\"\\\\f2a3\\"}  .fa-deafness:before,.fa-hard-of-hearing:before,.fa-deaf:before{content:\\"\\\\f2a4\\"}  .fa-glide:before{content:\\"\\\\f2a5\\"}  .fa-glide-g:before{content:\\"\\\\f2a6\\"}  .fa-signing:before,.fa-sign-language:before{content:\\"\\\\f2a7\\"}  .fa-low-vision:before{content:\\"\\\\f2a8\\"}  .fa-viadeo:before{content:\\"\\\\f2a9\\"}  .fa-viadeo-square:before{content:\\"\\\\f2aa\\"}  .fa-snapchat:before{content:\\"\\\\f2ab\\"}  .fa-snapchat-ghost:before{content:\\"\\\\f2ac\\"}  .fa-snapchat-square:before{content:\\"\\\\f2ad\\"}  .fa-pied-piper:before{content:\\"\\\\f2ae\\"}  .fa-first-order:before{content:\\"\\\\f2b0\\"}  .fa-yoast:before{content:\\"\\\\f2b1\\"}  .fa-themeisle:before{content:\\"\\\\f2b2\\"}  .fa-google-plus-circle:before,.fa-google-plus-official:before{content:\\"\\\\f2b3\\"}  .fa-fa:before,.fa-font-awesome:before{content:\\"\\\\f2b4\\"}  .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}  .sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///182\n')},183:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "fontawesome-webfont.eot?09b9015b1ecaf95655b11efd67d00e1f");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL2ZvbnQtYXdlc29tZS00LjYuMy9mb250cy9mb250YXdlc29tZS13ZWJmb250LmVvdD83ODlmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLDZEQUE2RCIsImZpbGUiOiIxODMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udGF3ZXNvbWUtd2ViZm9udC5lb3Q/MDliOTAxNWIxZWNhZjk1NjU1YjExZWZkNjdkMDBlMWZcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///183\n')},184:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "fontawesome-webfont.eot?09b9015b1ecaf95655b11efd67d00e1f");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL2ZvbnQtYXdlc29tZS00LjYuMy9mb250cy9mb250YXdlc29tZS13ZWJmb250LmVvdD81OWE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLDZEQUE2RCIsImZpbGUiOiIxODQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udGF3ZXNvbWUtd2ViZm9udC5lb3Q/MDliOTAxNWIxZWNhZjk1NjU1YjExZWZkNjdkMDBlMWZcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///184\n')},185:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "fontawesome-webfont.woff2?0317d582b93c20f68e059e389aecab33");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL2ZvbnQtYXdlc29tZS00LjYuMy9mb250cy9mb250YXdlc29tZS13ZWJmb250LndvZmYyPzQ3MzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxvRkFBdUIsK0RBQStEIiwiZmlsZSI6IjE4NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250YXdlc29tZS13ZWJmb250LndvZmYyPzAzMTdkNTgyYjkzYzIwZjY4ZTA1OWUzODlhZWNhYjMzXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///185\n')},186:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "fontawesome-webfont.woff?f7f1738ca345185e01856ac55885b089");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL2ZvbnQtYXdlc29tZS00LjYuMy9mb250cy9mb250YXdlc29tZS13ZWJmb250LndvZmY/NTc0NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1Qiw4REFBOEQiLCJmaWxlIjoiMTg2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRhd2Vzb21lLXdlYmZvbnQud29mZj9mN2YxNzM4Y2EzNDUxODVlMDE4NTZhYzU1ODg1YjA4OVwiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///186\n')},187:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "fontawesome-webfont.ttf?f0af1680f082547a7aae4af9d841d693");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL2ZvbnQtYXdlc29tZS00LjYuMy9mb250cy9mb250YXdlc29tZS13ZWJmb250LnR0Zj85NjNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLDZEQUE2RCIsImZpbGUiOiIxODcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udGF3ZXNvbWUtd2ViZm9udC50dGY/ZjBhZjE2ODBmMDgyNTQ3YTdhYWU0YWY5ZDg0MWQ2OTNcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///187\n')},188:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "fontawesome-webfont.svg?ed6298903ae1554c7f3e1a668c39fdcc");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoLWV4dC9yZXNvdXJjZXMvY3NzL2ZvbnQtYXdlc29tZS00LjYuMy9mb250cy9mb250YXdlc29tZS13ZWJmb250LnN2Zz9lZmJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLDZEQUE2RCIsImZpbGUiOiIxODguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udGF3ZXNvbWUtd2ViZm9udC5zdmc/ZWQ2Mjk4OTAzYWUxNTU0YzdmM2UxYTY2OGMzOWZkY2NcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///188\n')},19:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _events_EventManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * This class is in charge of defining a Styler object.\n */\n\nclass Styler {\n  /**\n   *\n   * @param {Object[]} jsonProperties - contains a list of Functions\n   */\n  constructor(jsonProperties) {\n    this.properties = jsonProperties;\n    this.id = "styler-" + Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* randomUUID */ "h"])();\n    this.dataSourceToStylerMap = {};\n    this.initEvents();\n  }\n  /**\n   * @private\n   * @param funcName\n   * @return {*}\n   */\n\n\n  checkFn(funcName) {\n    let func = this.properties[funcName];\n    let isSet = Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* hasValue */ "f"])(func);\n\n    if (isSet) {\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertArray */ "a"])(func.dataSourceIds, funcName + ".dataSourceIds");\n      Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* assertFunction */ "b"])(func.handler, funcName + ".handler");\n    }\n\n    return isSet;\n  }\n  /**\n   * @private\n   */\n\n\n  initEvents() {\n    var that = this;\n    _events_EventManager_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].observe(_events_EventManager_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].EVENT.DATASOURCE_UPDATE_TIME, event => that.clear());\n  }\n  /**\n   * Clear the styler.\n   */\n\n\n  clear() {}\n  /**\n   * Gets the styler id.\n   * @return {String} the styler id\n   */\n\n\n  getId() {\n    return this.id;\n  }\n  /**\n   * Selects the datasource contained into the list\n   * @param {Array} dataSourceIds the list of datasources\n   */\n\n\n  select(dataSourceIds) {}\n  /**\n   * Adds a function associated to a list of dataSource ids\n   * @param {String[]} dataSourceIds - the list of datasources\n   * @param {Function} fn - the function to add\n   */\n\n\n  addFn(dataSourceIds, fn) {\n    for (let i = 0; i < dataSourceIds.length; i++) {\n      let dataSourceId = dataSourceIds[i];\n\n      if (!Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ "g"])(this.dataSourceToStylerMap[dataSourceId])) {\n        this.dataSourceToStylerMap[dataSourceId] = [];\n      }\n\n      this.dataSourceToStylerMap[dataSourceId].push(fn);\n    }\n  }\n  /**\n   *\n   * @param dataSourceId\n   * @param rec\n   * @param view\n   * @param options\n   * @return {Boolean}\n   */\n\n\n  setData(dataSourceId, rec, view, options) {\n    if (dataSourceId in this.dataSourceToStylerMap) {\n      let fnArr = this.dataSourceToStylerMap[dataSourceId];\n\n      for (let i = 0; i < fnArr.length; i++) {\n        for (let j = 0; j < rec.values.length; j++) {\n          fnArr[i](rec.values[j].data, rec.values[j].timeStamp, options);\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n  /**\n   *\n   * @return {String[]} The list of dataSource ids\n   */\n\n\n  getDataSourcesIds() {\n    let res = [];\n\n    for (let i in this.dataSourceToStylerMap) {\n      res.push(i);\n    }\n\n    return res;\n  }\n  /**\n   * Inits the styler.\n   */\n\n\n  init() {}\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (Styler);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n')},20:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an \"AS IS\" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * The DataSource is the abstract class used to create different datasources.\n *\n */\n\nclass DataSource {\n  /**\n   * @param {String} name - the datasource name\n   * @param {Object} properties - the datasource properties\n   * @param {Boolean} [properties.timeShift=false] - fix some problem with some android devices with some timestamp shift to 16 sec\n   * @param {Number} [properties.bufferingTime=0 - defines the time during the data has to be buffered. Useful only when used with DataSynchronizer\n   * @param {Number} [properties.timeOut=0] - defines the limit time before data has to be skipped. Useful only when used with DataSynchronizer\n   * @param {String} properties.protocol - defines the protocol of the datasource. @see {@link DataConnector}\n   * @param {String} properties.endpointUrl the endpoint url\n   * @param {String} properties.service the service\n   * @param {String} properties.offeringID the offeringID\n   * @param {String} properties.observedProperty the observed property\n   * @param {String} properties.startTime the start time (ISO format)\n   * @param {String} properties.endTime the end time (ISO format)\n   * @param {Number} [properties.replaySpeed=1] the replay factor\n   * @param {Number} [properties.responseFormat] the response format (e.g video/mp4)\n   * @param {Number} [properties.reconnectTimeout=10000] - the time before reconnecting (in milliseconds)\n   * @param {Number} [properties.batchSize=1] - the number of data to fetch\n   * @param {Object} [properties.customUrlParams={}] - custom parameters appended to the URL as they are\n   * @param {Object} worker - DataSource worker\n   */\n  constructor(name, properties, worker) {\n    this.id = \"DataSource-\" + Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* randomUUID */ \"h\"])();\n    this.name = name;\n    this.properties = {\n      fetch: 1,\n      // default value if not defined\n      ...properties\n    };\n    this.dataSourceWorker = worker;\n    this.dataSynchronizer = null;\n    this.currentRunningProperties = {};\n    this.initDataSource(properties);\n  }\n  /**\n   * Inits the datasource with the constructor properties.\n   * @private\n   * @param properties\n   */\n\n\n  initDataSource(properties) {\n    this.dataSourceWorker.postMessage({\n      message: 'init',\n      id: this.id,\n      properties: JSON.stringify(properties),\n      topic: _Constants__WEBPACK_IMPORTED_MODULE_1__[/* DATASOURCE_DATA_TOPIC */ \"a\"] + this.id\n    });\n  }\n\n  setDataSynchronizer(dataSynchronizer) {\n    this.dataSynchronizer = dataSynchronizer;\n    this.dataSourceWorker.postMessage({\n      message: 'topic',\n      topic: _Constants__WEBPACK_IMPORTED_MODULE_1__[/* DATA_SYNCHRONIZER_TOPIC */ \"b\"] + this.dataSynchronizer.id\n    });\n  }\n  /**\n   * Sets the data source time range\n   * @param {String} startTime - the startTime (in date ISO)\n   * @param {String} endTime - the startTime (in date ISO)\n   * @param {Number} replaySpeed - the replay speed\n   */\n\n\n  setTimeRange(startTime, endTime, replaySpeed) {\n    this.updateUrl({ ...this.currentRunningProperties,\n      startTime: startTime,\n      endTime: endTime,\n      replaySpeed: replaySpeed\n    });\n  }\n  /**\n   * Gets the startTime\n   * @returns {String} - startTime as ISO date\n   */\n\n\n  getStartTime() {\n    return this.properties.startTime;\n  }\n  /**\n   * Gets the endTime\n   * @returns {String} - endTime as ISO date\n   */\n\n\n  getEndTime() {\n    return this.properties.endTime;\n  }\n  /**\n   * Gets the endTime\n   * @returns {String} - endTime as ISO date\n   */\n\n\n  getReplaySpeed() {\n    return Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ \"g\"])(this.properties.replaySpeed) ? this.properties.replaySpeed : 1;\n  }\n  /**\n   * Disconnect the dataSource then the connector will be closed as well.\n   */\n\n\n  disconnect() {\n    this.dataSourceWorker.postMessage({\n      message: 'disconnect'\n    });\n  }\n  /**\n   * Connect the dataSource then the connector will be opened as well.\n   */\n\n\n  async connect() {\n    this.dataSourceWorker.postMessage({\n      message: 'connect'\n    });\n    return this.isConnected();\n  }\n\n  async isConnected() {\n    const promise = new Promise(resolve => {\n      if (this.dataSourceWorker !== null) {\n        this.dataSourceWorker.onmessage = event => {\n          if (event.data.message === 'is-connected') {\n            resolve(event.data.data);\n          }\n        };\n      }\n    });\n\n    if (this.dataSourceWorker !== null) {\n      this.dataSourceWorker.postMessage({\n        message: 'is-connected'\n      });\n    }\n\n    return promise;\n  }\n\n  async getCurrentTime() {\n    if (Object(_utils_Utils_js__WEBPACK_IMPORTED_MODULE_0__[/* isDefined */ \"g\"])(this.dataSynchronizer)) {\n      return this.dataSynchronizer.getCurrentTime();\n    } else {\n      const promise = new Promise(resolve => {\n        if (this.dataSourceWorker !== null) {\n          this.dataSourceWorker.onmessage = event => {\n            if (event.data.message === 'last-timestamp') {\n              resolve(event.data.data);\n            }\n          };\n        }\n      });\n\n      if (this.dataSourceWorker !== null) {\n        this.dataSourceWorker.postMessage({\n          message: 'last-timestamp'\n        });\n      }\n\n      return promise;\n    }\n  }\n  /**\n   * Gets the datasource id.\n   * @return {String} the datasource id\n   */\n\n\n  getId() {\n    return this.id;\n  }\n  /**\n   * Gets the datasource name.\n   * @return {String} the datasource name\n   */\n\n\n  getName() {\n    return this.name;\n  }\n  /**\n   * Update properties\n   * @param {String} name - the datasource name\n   * @param {Object} properties - the datasource properties\n   * @param {Boolean} properties.timeShift - fix some problem with some android devices with some timestamp shift to 16 sec\n   * @param {Number} properties.bufferingTime - defines the time during the data has to be buffered\n   * @param {Number} properties.timeOut - defines the limit time before data has to be skipped\n   * @param {String} properties.protocol - defines the protocol of the datasource. @see {@link DataConnector}\n   * @param {String} properties.endpointUrl the endpoint url\n   * @param {String} properties.service the service\n   * @param {String} properties.offeringID the offeringID\n   * @param {String} properties.observedProperty the observed property\n   * @param {String} properties.startTime the start time (ISO format)\n   * @param {String} properties.endTime the end time (ISO format)\n   * @param {Number} properties.replaySpeed the replay speed\n   * @param {Number} properties.responseFormat the response format (e.g video/mp4)\n   * @param {Number} properties.reconnectTimeout - the timeout before reconnecting\n   */\n\n\n  updateUrl(properties) {\n    // save current running properties\n    this.currentRunningProperties = { ...this.properties,\n      ...properties\n    };\n\n    if (this.dataSourceWorker !== null) {\n      this.dataSourceWorker.postMessage({\n        message: 'update-url',\n        data: properties\n      });\n    }\n  }\n\n  getCurrentRunningProperties() {\n    return this.currentRunningProperties;\n  }\n\n  terminate() {\n    if (this.dataSourceWorker !== null) {\n      this.dataSourceWorker.terminate();\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DataSource);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n")},21:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _DataSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);\n/* harmony import */ var _workers_SweJson_worker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(165);\n/* harmony import */ var _workers_SweJson_worker_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_workers_SweJson_worker_js__WEBPACK_IMPORTED_MODULE_1__);\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n\n/**\n * This datasource provides generic parsing for JSON response.\n *\n * @extends DataSource\n * @example\n * import SweJson from \'osh/datareceiver/SweJson.js\';\n *\n * let androidPhoneGpsDataSource = new SweJson("android-GPS", {\n    protocol: "ws",\n    service: "SOS",\n    endpointUrl: "sensiasoft.net:8181/sensorhub/sos",\n    offeringID: "urn:android:device:060693280a28e015-sos",\n    observedProperty: "http://sensorml.com/ont/swe/property/Location",\n    startTime: "2015-02-16T07:58:00Z",\n    endTime: "2015-02-16T08:09:00Z",\n    replaySpeed: replaySpeed+"",\n    bufferingTime: 1000,\n    timeShift: -16000\n  });\n */\n\nclass SweJson extends _DataSource_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {\n  /**\n   * @param {String} name - the datasource name\n   * @param {Object} properties - the datasource properties\n   * @param {Boolean} [properties.timeShift=false] - fix some problem with some android devices with some timestamp shift to 16 sec\n   * @param {Number} [properties.bufferingTime=0 - defines the time during the data has to be buffered. Useful only when used with DataSynchronizer\n   * @param {Number} [properties.timeOut=0] - defines the limit time before data has to be skipped. Useful only when used with DataSynchronizer\n   * @param {String} properties.protocol - defines the protocol of the datasource. @see {@link DataConnector}\n   * @param {String} properties.endpointUrl the endpoint url\n   * @param {String} properties.service the service\n   * @param {String} properties.offeringID the offeringID\n   * @param {String} properties.observedProperty the observed property\n   * @param {String} properties.startTime the start time (ISO format)\n   * @param {String} properties.endTime the end time (ISO format)\n   * @param {Number} [properties.replaySpeed=1] the replay factor\n   * @param {Number} [properties.responseFormat] the response format (e.g video/mp4)\n   * @param {Number} [properties.reconnectTimeout=10000] - the time before reconnecting (in milliseconds)\n   */\n  constructor(name, properties) {\n    super(name, {\n      timeShift: 0,\n      reconnectTimeout: 1000 * 5,\n      // default if not defined into properties\n      ...properties\n    }, new _workers_SweJson_worker_js__WEBPACK_IMPORTED_MODULE_1___default.a());\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (SweJson);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL2RhdGFyZWNlaXZlci9Td2VKc29uLmpzPzI4YjQiXSwibmFtZXMiOlsiU3dlSnNvbiIsIkRhdGFTb3VyY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJwcm9wZXJ0aWVzIiwidGltZVNoaWZ0IiwicmVjb25uZWN0VGltZW91dCIsIlN3ZUpzb25Xb3JrZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFDQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkEsTUFBTUEsT0FBTixTQUFzQkMsOERBQXRCLENBQWlDO0FBQzdCOzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQUMsYUFBVyxDQUFDQyxJQUFELEVBQU9DLFVBQVAsRUFBbUI7QUFDMUIsVUFBTUQsSUFBTixFQUFZO0FBQ1JFLGVBQVMsRUFBQyxDQURGO0FBRVJDLHNCQUFnQixFQUFFLE9BQU8sQ0FGakI7QUFFb0I7QUFDNUIsU0FBR0Y7QUFISyxLQUFaLEVBSUcsSUFBSUcsaUVBQUosRUFKSDtBQUtIOztBQXhCNEI7O0FBMkJsQlAsZ0VBQWYiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogQkVHSU4gTElDRU5TRSBCTE9DSyAqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuIFRoZSBjb250ZW50cyBvZiB0aGlzIGZpbGUgYXJlIHN1YmplY3QgdG8gdGhlIE1vemlsbGEgUHVibGljIExpY2Vuc2UsIHYuIDIuMC5cbiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmVcbiBhdCBodHRwOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uXG5cbiBTb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgYmFzaXMsXG4gV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlXG4gZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcmlnaHRzIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuIENvcHlyaWdodCAoQykgMjAxNS0yMDIwIE1hdGhpZXUgRGhhaW5hdXQuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG5cbiBBdXRob3I6IE1hdGhpZXUgRGhhaW5hdXQgPG1hdGhpZXUuZGhhaW5hdXRAZ21haWwuY29tPlxuXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiBFTkQgTElDRU5TRSBCTE9DSyAqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblxuaW1wb3J0IERhdGFTb3VyY2UgZnJvbSAnLi9EYXRhU291cmNlLmpzJztcbmltcG9ydCBTd2VKc29uV29ya2VyIGZyb20gJy4vd29ya2Vycy9Td2VKc29uLndvcmtlci5qcyc7XG5cbi8qKlxuICogVGhpcyBkYXRhc291cmNlIHByb3ZpZGVzIGdlbmVyaWMgcGFyc2luZyBmb3IgSlNPTiByZXNwb25zZS5cbiAqXG4gKiBAZXh0ZW5kcyBEYXRhU291cmNlXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IFN3ZUpzb24gZnJvbSAnb3NoL2RhdGFyZWNlaXZlci9Td2VKc29uLmpzJztcbiAqXG4gKiBsZXQgYW5kcm9pZFBob25lR3BzRGF0YVNvdXJjZSA9IG5ldyBTd2VKc29uKFwiYW5kcm9pZC1HUFNcIiwge1xuICAgIHByb3RvY29sOiBcIndzXCIsXG4gICAgc2VydmljZTogXCJTT1NcIixcbiAgICBlbmRwb2ludFVybDogXCJzZW5zaWFzb2Z0Lm5ldDo4MTgxL3NlbnNvcmh1Yi9zb3NcIixcbiAgICBvZmZlcmluZ0lEOiBcInVybjphbmRyb2lkOmRldmljZTowNjA2OTMyODBhMjhlMDE1LXNvc1wiLFxuICAgIG9ic2VydmVkUHJvcGVydHk6IFwiaHR0cDovL3NlbnNvcm1sLmNvbS9vbnQvc3dlL3Byb3BlcnR5L0xvY2F0aW9uXCIsXG4gICAgc3RhcnRUaW1lOiBcIjIwMTUtMDItMTZUMDc6NTg6MDBaXCIsXG4gICAgZW5kVGltZTogXCIyMDE1LTAyLTE2VDA4OjA5OjAwWlwiLFxuICAgIHJlcGxheVNwZWVkOiByZXBsYXlTcGVlZCtcIlwiLFxuICAgIGJ1ZmZlcmluZ1RpbWU6IDEwMDAsXG4gICAgdGltZVNoaWZ0OiAtMTYwMDBcbiAgfSk7XG4gKi9cblxuY2xhc3MgU3dlSnNvbiBleHRlbmRzIERhdGFTb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIC0gdGhlIGRhdGFzb3VyY2UgbmFtZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wZXJ0aWVzIC0gdGhlIGRhdGFzb3VyY2UgcHJvcGVydGllc1xuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW3Byb3BlcnRpZXMudGltZVNoaWZ0PWZhbHNlXSAtIGZpeCBzb21lIHByb2JsZW0gd2l0aCBzb21lIGFuZHJvaWQgZGV2aWNlcyB3aXRoIHNvbWUgdGltZXN0YW1wIHNoaWZ0IHRvIDE2IHNlY1xuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5idWZmZXJpbmdUaW1lPTAgLSBkZWZpbmVzIHRoZSB0aW1lIGR1cmluZyB0aGUgZGF0YSBoYXMgdG8gYmUgYnVmZmVyZWQuIFVzZWZ1bCBvbmx5IHdoZW4gdXNlZCB3aXRoIERhdGFTeW5jaHJvbml6ZXJcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3Byb3BlcnRpZXMudGltZU91dD0wXSAtIGRlZmluZXMgdGhlIGxpbWl0IHRpbWUgYmVmb3JlIGRhdGEgaGFzIHRvIGJlIHNraXBwZWQuIFVzZWZ1bCBvbmx5IHdoZW4gdXNlZCB3aXRoIERhdGFTeW5jaHJvbml6ZXJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydGllcy5wcm90b2NvbCAtIGRlZmluZXMgdGhlIHByb3RvY29sIG9mIHRoZSBkYXRhc291cmNlLiBAc2VlIHtAbGluayBEYXRhQ29ubmVjdG9yfVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0aWVzLmVuZHBvaW50VXJsIHRoZSBlbmRwb2ludCB1cmxcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydGllcy5zZXJ2aWNlIHRoZSBzZXJ2aWNlXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnRpZXMub2ZmZXJpbmdJRCB0aGUgb2ZmZXJpbmdJRFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0aWVzLm9ic2VydmVkUHJvcGVydHkgdGhlIG9ic2VydmVkIHByb3BlcnR5XG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnRpZXMuc3RhcnRUaW1lIHRoZSBzdGFydCB0aW1lIChJU08gZm9ybWF0KVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0aWVzLmVuZFRpbWUgdGhlIGVuZCB0aW1lIChJU08gZm9ybWF0KVxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5yZXBsYXlTcGVlZD0xXSB0aGUgcmVwbGF5IGZhY3RvclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbcHJvcGVydGllcy5yZXNwb25zZUZvcm1hdF0gdGhlIHJlc3BvbnNlIGZvcm1hdCAoZS5nIHZpZGVvL21wNClcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gW3Byb3BlcnRpZXMucmVjb25uZWN0VGltZW91dD0xMDAwMF0gLSB0aGUgdGltZSBiZWZvcmUgcmVjb25uZWN0aW5nIChpbiBtaWxsaXNlY29uZHMpXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobmFtZSwgcHJvcGVydGllcykge1xuICAgICAgICBzdXBlcihuYW1lLCB7XG4gICAgICAgICAgICB0aW1lU2hpZnQ6MCxcbiAgICAgICAgICAgIHJlY29ubmVjdFRpbWVvdXQ6IDEwMDAgKiA1LCAvLyBkZWZhdWx0IGlmIG5vdCBkZWZpbmVkIGludG8gcHJvcGVydGllc1xuICAgICAgICAgICAgLi4ucHJvcGVydGllc1xuICAgICAgICB9LCBuZXcgU3dlSnNvbldvcmtlcigpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN3ZUpzb247XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n')},3:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/utils/Utils.js\nvar Utils = __webpack_require__(1);\n\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/events/EventMap.js\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n/**\n * This class is responsible for observing and firing events. It used an object as backed data structure.\n */\n\nclass EventMap_EventMap {\n  constructor() {\n    this.eventMap = {};\n  }\n\n  remove(eventName, id) {\n    if (eventName in this.eventMap) {\n      this.eventMap[eventName] = this.eventMap[eventName].filter(obj => obj.id !== id);\n    }\n  }\n\n  removeById(id) {\n    for (let eventName in this.eventMap) {\n      this.eventMap[eventName] = this.eventMap[eventName].filter(obj => obj.id !== id);\n    }\n  }\n  /**\n   * Observes any eventName and calls the callback when the event is fired.\n   * @param {String} eventName -\n   * @param {Function} fnCallback -\n   * @param {String} id - id of the div to observe\n   */\n\n\n  observe(eventName, fnCallback, id = \'any\') {\n    if (!Object(Utils["g" /* isDefined */])(eventName) || !Object(Utils["g" /* isDefined */])(fnCallback) || !Object(Utils["g" /* isDefined */])(id)) {\n      return;\n    }\n\n    if (!(eventName in this.eventMap)) {\n      this.eventMap[eventName] = [];\n    }\n\n    this.eventMap[eventName].push({\n      fn: fnCallback,\n      id: id\n    });\n  }\n  /**\n   * Fires an event\n   * @param {String} eventName -\n   * @param {Object} properties -\n   */\n\n\n  fire(eventName, properties) {\n    if (!Object(Utils["g" /* isDefined */])(eventName)) {\n      return;\n    }\n\n    if (eventName in this.eventMap) {\n      let fnCallbackArr = this.eventMap[eventName];\n\n      for (let i = 0; i < fnCallbackArr.length; i++) {\n        // callback the properties to the current callback\n        fnCallbackArr[i].fn(properties);\n      }\n    }\n  }\n\n}\n\n/* harmony default export */ var events_EventMap = (EventMap_EventMap);\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/events/EventManager.js\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\nconst eventMap = new events_EventMap();\n/**\n * This class is response for handling events and acts as an event bus.\n */\n\nclass EventManager {\n  static remove(eventName, id = \'any\') {\n    eventMap.remove(\'osh:\' + eventName, id);\n  }\n\n  static removeById(id = \'any\') {\n    eventMap.removeById(id);\n  }\n\n  static registerView(view) {\n    view.registerCallback();\n  }\n\n  static unregisterView(view) {\n    view.unregisterCallback();\n  }\n  /**\n   * Fires an event\n   * @param {String} eventName -\n   * @param {Object} properties -\n   */\n\n\n  static fire(eventName, properties) {\n    properties.name = eventName;\n    eventMap.fire(\'osh:\' + eventName, properties);\n  }\n  /**\n   * Observes any eventName and calls the callback when the event is fired.\n   * @param {String} eventName -\n   * @param {Function} fnCallback -\n   */\n\n\n  static observe(eventName, fnCallback, id = \'any\') {\n    eventMap.observe(\'osh:\' + eventName, fnCallback, id);\n  }\n  /**\n   * Observes eventName attached to a div element  and calls the callback when the event is fired.\n   * @param {String} divId -\n   * @param {String} eventName -\n   * @param {Function} fnCallback -\n   */\n\n\n  static observeDiv(divId, eventName, fnCallback) {\n    let elem = document.getElementById(divId); // use native dom event listener\n\n    elem.addEventListener(eventName, fnCallback);\n  }\n  /**\n   * This part defines the events used INTO the API\n   * @const\n   * @type {{DATA: string, SYNC_DATA: string, SELECT_VIEW: string, CONTEXT_MENU: string, SHOW_VIEW: string, CONNECT_DATASOURCE: string, DISCONNECT_DATASOURCE: string, DATASOURCE_UPDATE_TIME: string, CURRENT_MASTER_TIME: string, UAV_TAKEOFF: string, UAV_GOTO: string, UAV_LOOKAT: string, UAV_LAND: string, UAV_ORBIT: string, LOADING_START: string, LOADING_STOP: string, ADD_VIEW_ITEM: string}}\n   */\n\n\n  static get EVENT() {\n    return {\n      SELECT_VIEW: "selectView",\n      SHOW_VIEW: "showView",\n      UAV_TAKEOFF: "uav:takeoff",\n      UAV_GOTO: "uav:goto",\n      UAV_LOOKAT: "uav:lookat",\n      UAV_LAND: "uav:land",\n      UAV_ORBIT: "uav:orbit",\n      LOADING_START: "loading:start",\n      LOADING_STOP: "loading:stop",\n      ADD_VIEW_ITEM: "addViewItem",\n      RESIZE: "resize",\n      PTZ_SEND_REQUEST: "ptzSendRequest"\n    };\n  }\n\n}\n\n/* harmony default export */ var events_EventManager = __webpack_exports__["a"] = (EventManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},7:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/utils/Utils.js\nvar Utils = __webpack_require__(1);\n\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/events/EventManager.js + 1 modules\nvar EventManager = __webpack_require__(3);\n\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/resources/css/view.css\nvar view = __webpack_require__(171);\n\n// EXTERNAL MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/Constants.js\nvar Constants = __webpack_require__(8);\n\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/dataconnector/Status.js\n/**\n * Enum for connection status.\n * @readonly\n * @enum {{name: string}}\n */\nconst Status = {\n  CONNECTED: "connected",\n  DISCONNECTED: "disconnected"\n};\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/event/EventType.js\nconst EventType = {\n  DATA: \'data\',\n  STATUS: \'status\'\n};\n// CONCATENATED MODULE: /home/nevro/Progs/progs-local/git-repo/OSH/osh-js/source/osh/ui/view/View.js\n/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an "AS IS" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2020 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n/**\n * The abstract object to represent a view.\n * @param {Object} parentElementDivId - The parent html element div id to attach/or create the view.\n * @param {String} viewItems - The list of view items\n * @param {String} options - The options\n */\n\n\n\n\n\n\n\nclass View_View {\n  /**\n   * Create a View.\n   * @param {String} parentElementDivId - The div element to attach to\n   * @param {Object[]}  [viewItems=[]] - The initial view items to add\n   * @param {String} [viewItems.name] - The name of the view item\n   * @param {Styler} viewItems.styler - The styler object representing the view item\n   * @param {Object} [options={}] - the properties of the view\n   * @param {String} [options.dataSourceId] - The dataSource id of the dataSource providing data to the view\n   * @param {Entity} [options.entity] - The entity to which the view belongs to\n   */\n  constructor(parentElementDivId, viewItems, options) {\n    // list of stylers\n    this.stylers = [];\n    this.viewItems = [];\n    this.names = {};\n    this.lastRec = {};\n    this.selectedDataSources = [];\n    this.dataSources = [];\n    this.entity = null; //this.divId = divId;\n\n    this.id = "view-" + Object(Utils["h" /* randomUUID */])();\n    this.entity = null;\n    this.dataSourceId = -1; // sets dataSourceId\n\n    if (Object(Utils["g" /* isDefined */])(options) && Object(Utils["g" /* isDefined */])(options.dataSourceId)) {\n      this.dataSourceId = options.dataSourceId;\n    }\n\n    if (Object(Utils["g" /* isDefined */])(options) && Object(Utils["g" /* isDefined */])(options.entity)) {\n      this.entity = options.entity;\n    }\n\n    this.css = "";\n    this.cssSelected = "";\n\n    if (Object(Utils["g" /* isDefined */])(options) && Object(Utils["g" /* isDefined */])(options.css)) {\n      this.css = options.css;\n    }\n\n    if (Object(Utils["g" /* isDefined */])(options) && Object(Utils["g" /* isDefined */])(options.cssSelected)) {\n      this.cssSelected = options.cssSelected;\n    } // inits the view before adding the viewItem\n\n\n    this.init(parentElementDivId, viewItems, options);\n  }\n  /**\n   * Inits the view component.\n   * @param parentElementDivId The parent html element object to attach/create the view\n   * @param viewItems the list of items to add\n   * @param options [TODO]\n   * @memberof View\n   */\n\n\n  init(parentElementDivId, viewItems, options) {\n    this.elementDiv = document.createElement("div");\n    this.elementDiv.setAttribute("id", this.id);\n    this.elementDiv.setAttribute("class", this.css + " osh-view");\n    this.divId = this.id;\n    let div = document.getElementById(parentElementDivId);\n\n    if (!Object(Utils["g" /* isDefined */])(div) || div === null) {\n      document.body.appendChild(this.elementDiv);\n      this.hide();\n      this.container = document.body;\n    } else {\n      div.appendChild(this.elementDiv);\n      this.container = div;\n    }\n\n    this.beforeAddingItems(options);\n\n    if (Object(Utils["g" /* isDefined */])(viewItems)) {\n      for (let i = 0; i < viewItems.length; i++) {\n        this.addViewItem(viewItems[i]);\n      }\n    }\n\n    if (Object(Utils["g" /* isDefined */])(options)) {\n      if (Object(Utils["g" /* isDefined */])(options.show)) {\n        document.getElementById(this.divId).style.display = options.show ? "block" : "none";\n      }\n    }\n\n    this.handleEvents();\n    var that = this; // observes the event associated to the dataSourceId\n\n    this.registerCallback();\n    let observer = new MutationObserver(mutations => {\n      mutations.forEach(function (mutation) {\n        // Was it the style attribute that changed? (Maybe a classname or other attribute change could do this too? You might want to remove the attribute condition) Is display set to \'none\'?\n        if (mutation.attributeName === \'style\') {\n          that.onResize();\n        }\n      });\n    }); // Attach the mutation observer to blocker, and only when attribute values change\n\n    observer.observe(this.elementDiv, {\n      attributes: true\n    });\n    const rootObserver = new MutationObserver(function (mutations) {\n      // try to get the div element by the id to check if it is still owned by the document object\n      if (!Object(Utils["g" /* isDefined */])(document.getElementById(that.divId))) {\n        this.disconnect();\n        that.destroy();\n      }\n    });\n    rootObserver.observe(document.body, {\n      childList: true\n    });\n  }\n\n  registerCallback() {\n    if (Object(Utils["g" /* isDefined */])(this.dataSourceId) || Object(Utils["g" /* isDefined */])(this.entity)) {\n      const that = this;\n\n      function registerDs(dataSourceId) {\n        const broadcastChannel = new BroadcastChannel(Constants["a" /* DATASOURCE_DATA_TOPIC */] + dataSourceId);\n\n        broadcastChannel.onmessage = event => {\n          if (event.data.message && event.data.message === \'reset\') {\n            that.reset(); // on data stream reset\n          } else {\n            if (event.data.type === EventType.DATA) {\n              that.setData(dataSourceId, event.data.values);\n            } else if (event.data.type === EventType.STATUS && event.data.status === Status.DISCONNECTED) {\n              that.reset();\n            }\n          }\n        };\n      }\n\n      if (this.entity !== null) {\n        for (let dataSource of this.entity.getDataSources()) {\n          registerDs(dataSource.id);\n        }\n      } else {\n        registerDs(this.dataSourceId);\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  unregisterCallback() {\n    EventManager["a" /* default */].removeById(this.divId);\n  }\n  /**\n   * Hide the view\n   */\n\n\n  hide() {\n    this.elementDiv.style.display = "none";\n  }\n  /**\n   * Callback called when the view is resized\n   * @event\n   */\n\n\n  onResize() {}\n  /**\n   * Attach the view to a specific div. If the view has already been attached to a div, it will be removed\n   * from its current parent and will be attached to new one.\n   * Note: the onResize() is called at the end of the process.\n   * @param {String} divId - The div element to attach to\n   */\n\n\n  attachTo(divId) {\n    if (Object(Utils["g" /* isDefined */])(this.elementDiv.parentNode)) {\n      // detach from its parent\n      this.elementDiv.parentNode.removeChild(this.elementDiv);\n    }\n\n    document.getElementById(divId).appendChild(this.elementDiv);\n\n    if (this.elementDiv.style.display === "none") {\n      this.elementDiv.style.display = "block";\n    }\n\n    this.onResize();\n  }\n  /**\n   * This method is called before attaching any view items passed as arguments in the constructor of the view.\n   * @event\n   * @param {Object} options - A generic object to use\n   */\n\n\n  beforeAddingItems(options) {}\n  /**\n   * Gets the inner id of the view object.\n   * @return {String} The id of the view\n   */\n\n\n  getId() {\n    return this.id;\n  }\n  /**\n   * Gets the div id of the DOM element.\n   * @return {String} The div id of the view\n   */\n\n\n  getDivId() {\n    return this.divId;\n  }\n  /**\n   * Set the data to the view. Each view has to handle the kind of the data separately.\n   * @param {String} dataSourceId - The dataSource id of the source providing the data\n   * @param {any[]} data - The data array to set\n   */\n\n\n  setData(dataSourceId, data) {}\n  /**\n   * Show the view.\n   * @param  {Object} properties - A generic object\n   */\n\n\n  show(properties) {}\n\n  destroy() {\n    this.unregisterCallback();\n  }\n  /**\n   * Adds a viewItem to the view. A broadcastChannel is going to listen the new dataSources\n   * and EventManager.EVENT.SELECT_VIEW are then observed using the\n   * dataSource(s) contained into the styler.\n   * @param {Object} viewItem - The initial view items to add\n   * @param {String} viewItem.name - The name of the view item\n   * @param {Styler} viewItem.styler - The styler object representing the view item\n   */\n\n\n  addViewItem(viewItem) {\n    this.viewItems.push(viewItem);\n\n    if (viewItem.hasOwnProperty("styler")) {\n      let styler = viewItem.styler;\n      this.stylers.push(styler);\n\n      if (viewItem.hasOwnProperty("name")) {\n        this.names[styler.markerId] = viewItem.name;\n      }\n\n      styler.viewItem = viewItem;\n      styler.init(this); //for(let dataSourceId in styler.dataSourceToStylerMap) {\n\n      let ds = styler.getDataSourcesIds();\n\n      for (let i = 0; i < ds.length; i++) {\n        const dataSourceId = ds[i]; // observes the data come in\n\n        let self = this;\n        const broadcastChannel = new BroadcastChannel(Constants["a" /* DATASOURCE_DATA_TOPIC */] + dataSourceId);\n\n        broadcastChannel.onmessage = event => {\n          // skip data reset events for now\n          if (event.data.type === EventType.STATUS && event.data.status === Status.DISCONNECTED) {\n            return;\n          } // we check selected dataSource only when the selected entity is not set\n\n\n          let selected = false;\n\n          if (Object(Utils["g" /* isDefined */])(self.selectedEntity)) {\n            selected = viewItem.entityId === self.selectedEntity;\n          } else {\n            selected = self.selectedDataSources.indexOf(dataSourceId) > -1;\n          } //TODO: maybe done into the styler?\n\n\n          if (event.data.type === EventType.DATA) {\n            styler.setData(dataSourceId, event.data, self, {\n              selected: selected\n            });\n            self.lastRec[dataSourceId] = event.data;\n          }\n        };\n\n        EventManager["a" /* default */].observe(EventManager["a" /* default */].EVENT.SELECT_VIEW, event => {\n          // we check selected dataSource only when the selected entity is not set\n          let selected = false;\n\n          if (Object(Utils["g" /* isDefined */])(event.entityId)) {\n            selected = viewItem.entityId === event.entityId;\n          } else {\n            selected = event.dataSourcesIds.indexOf(dataSourceId) > -1;\n          }\n\n          if (dataSourceId in self.lastRec) {\n            styler.setData(dataSourceId, self.lastRec[dataSourceId], self, {\n              selected: selected\n            });\n          }\n        }, this.divId);\n      }\n    }\n  }\n  /**\n   * Removes a view item from the view.\n   * @param {Object} viewItem - The initial view items to add\n   * @param {String} viewItem.name - The name of the view item\n   * @param {Styler} viewItem.styler - The styler object representing the view item\n   */\n\n\n  removeViewItem(viewItem) {\n    if (this.viewItems.includes(viewItem)) {\n      // 1) remove from STYLER fn\n      for (let ds in viewItem.styler.dataSourceToStylerMap) {\n        delete this.lastRec[ds];\n      }\n\n      this.viewItems = this.viewItems.filter(currentViewItem => currentViewItem !== viewItem);\n    }\n\n    this.stylers = this.stylers.filter(currentStyler => currentStyler.id !== viewItem.styler.id);\n    delete this.names[viewItem.styler.markerId];\n  }\n  /**\n   * Removes all view item from the view.\n   */\n\n\n  removeViewItems() {\n    for (const viewItem of this.viewItems) {\n      this.removeViewItem(viewItem);\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  handleEvents() {\n    var that = this; // observes the selected event\n\n    EventManager["a" /* default */].observe(EventManager["a" /* default */].EVENT.SELECT_VIEW, event => that.selectDataView(event.dataSourcesIds, event.entityId), this.divId); // observes the SHOW event\n\n    EventManager["a" /* default */].observe(EventManager["a" /* default */].EVENT.SHOW_VIEW, event => that.show(event), this.divId); //\n\n    EventManager["a" /* default */].observe(EventManager["a" /* default */].EVENT.ADD_VIEW_ITEM, event => {\n      if (Object(Utils["g" /* isDefined */])(event.viewId) && event.viewId === that.id) {\n        that.addViewItem(event.viewItem);\n      }\n    }, this.divId);\n    EventManager["a" /* default */].observe(EventManager["a" /* default */].EVENT.RESIZE + "-" + this.divId, event => that.onResize(), this.divId);\n  }\n  /**\n   * Selects the view by setting the current selected entity and dataSource.\n   * @param  {String} dataSourcesIds - The dataSource id\n   * @param {String} entityId - The entity id\n   */\n\n\n  selectDataView(dataSourcesIds, entityId) {\n    if (Object(Utils["g" /* isDefined */])(this.dataSources)) {\n      this.selectedDataSources = dataSourcesIds; // set the selected entity even if it is undefined\n      // this is handled by the setData function\n\n      this.selectedEntity = entityId;\n\n      for (let j = 0; j < this.dataSources.length; j++) {\n        this.setData(this.dataSources[j], this.lastRec[this.dataSources[j]]);\n      }\n    }\n  }\n  /**\n   * Gets the list of the dataSource ids contained into the view.\n   * @return {String[]} The list of dataSource ids\n   */\n\n\n  getDataSourcesId() {\n    let res = [];\n\n    if (this.dataSourceId !== -1) {\n      res.push(this.dataSourceId);\n    } // check for stylers\n\n\n    for (let i = 0; i < this.viewItems.length; i++) {\n      let viewItem = this.viewItems[i];\n\n      if (viewItem.hasOwnProperty("styler")) {\n        let styler = viewItem.styler;\n        res = res.concat(styler.getDataSourcesIds());\n      }\n    }\n\n    return res;\n  }\n  /**\n   * Calls for resetting the view.\n   */\n\n\n  reset() {}\n\n}\n\n/* harmony default export */ var view_View = __webpack_exports__["a"] = (View_View);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')},8:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DATA_SYNCHRONIZER_TOPIC; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DATASOURCE_DATA_TOPIC; });\n/* unused harmony export FFMPEG_VIEW_DECODE_TOPIC */\nconst DATA_SYNCHRONIZER_TOPIC = 'data-synchronizer-';\nconst DATASOURCE_DATA_TOPIC = 'datasource-data-';\nconst FFMPEG_VIEW_DECODE_TOPIC = 'ffmpeg-decode-';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvbmV2cm8vUHJvZ3MvcHJvZ3MtbG9jYWwvZ2l0LXJlcG8vT1NIL29zaC1qcy9zb3VyY2Uvb3NoL0NvbnN0YW50cy5qcz9kYmY3Il0sIm5hbWVzIjpbIkRBVEFfU1lOQ0hST05JWkVSX1RPUElDIiwiREFUQVNPVVJDRV9EQVRBX1RPUElDIiwiRkZNUEVHX1ZJRVdfREVDT0RFX1RPUElDIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBTyxNQUFNQSx1QkFBdUIsR0FBRyxvQkFBaEM7QUFDQSxNQUFNQyxxQkFBcUIsR0FBRyxrQkFBOUI7QUFDQSxNQUFNQyx3QkFBd0IsR0FBRyxnQkFBakMiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBEQVRBX1NZTkNIUk9OSVpFUl9UT1BJQyA9ICdkYXRhLXN5bmNocm9uaXplci0nO1xuZXhwb3J0IGNvbnN0IERBVEFTT1VSQ0VfREFUQV9UT1BJQyA9ICdkYXRhc291cmNlLWRhdGEtJztcbmV4cG9ydCBjb25zdCBGRk1QRUdfVklFV19ERUNPREVfVE9QSUMgPSAnZmZtcGVnLWRlY29kZS0nO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n")}}]);