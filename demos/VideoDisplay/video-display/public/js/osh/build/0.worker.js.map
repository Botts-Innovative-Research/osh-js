{"version":3,"sources":["webpack://osh/webpack/bootstrap","webpack://osh/./source/osh/parsers/SWEXmlStreamParser.js","webpack://osh/./source/osh/server/GetRequestWorker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SWEXmlStreamParser","xml","this","originalXml","Set","S","pos","openBracketCC","charCodeAt","closeBracketCC","minusCC","slashCC","exclamationCC","singleQuoteCC","doubleQuoteCC","arrayNodeSet","numericalNodeSet","parseText","start","indexOf","length","slice","parseName","getLocalName","qname","nsEnd","substring","parseNode","node","type","code","parseString","startsWith","child","childName","isProperty","charAt","toLowerCase","k","assign","has","push","text","trim","parseFloat","parseChildren","startChar","startpos","out","self","onmessage","e","xhr","XMLHttpRequest","onreadystatechange","readyState","status","sweXmlParser","responseText","setXml","respObj","toJson","postMessage","error","msg","withCredentials","open","data","send"],"mappings":"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","file":"0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Created by Alex Robin on 5/5/19.\n */\n\n/**\n * @class Javascript binding for SWE requests\n * @classdesc\n *\n */\nexport default class SWEXmlStreamParser {\n    constructor(xml='undefined') {\n        this.originalXml = xml;\n    }\n\n    setXml(xml) {\n        this.originalXml = xml;\n    }\n\n    static get arrayNodeSet() {\n        return new Set([\n            'featureMember',\n            'offering',\n            'observableProperty',\n            'field',\n            'coordinate',\n            'item',\n            'quality',\n            'member',\n            'interval',\n            'AllowedValues/value'\n        ]);\n    }\n\n    static get numericalNodeSet() {\n        return new Set([\n            'nilValue',\n            'paddingBytes-after',\n            'paddingBytes-before',\n            'byteLength',\n            'significantBits',\n            'bitLength',\n            'Time/value',\n            'Quantity/value',\n            'Count/value'\n        ]);\n    }\n\n    toJson() {\n        var options = {};\n        var S = this.originalXml;\n        var pos = options.pos || 0;\n\n        var openBracket = \"<\";\n        var openBracketCC = \"<\".charCodeAt(0);\n        var closeBracket = \">\";\n        var closeBracketCC = \">\".charCodeAt(0);\n        var minus = \"-\";\n        var minusCC = \"-\".charCodeAt(0);\n        var slash = \"/\";\n        var slashCC = \"/\".charCodeAt(0);\n        var exclamation = '!';\n        var exclamationCC = '!'.charCodeAt(0);\n        var singleQuote = \"'\";\n        var singleQuoteCC = \"'\".charCodeAt(0);\n        var doubleQuote = '\"';\n        var doubleQuoteCC = '\"'.charCodeAt(0);\n        var arrayNodeSet = SWEXmlStreamParser.arrayNodeSet;\n        var numericalNodeSet = SWEXmlStreamParser.numericalNodeSet;\n\n        function isArray(name) {\n            return arrayNodeSet.has(name);\n        }\n\n        /**\n         * parsing a list of entries\n         */\n        function parseChildren(node) {\n            while (S[pos]) {\n                if (S.charCodeAt(pos) == openBracketCC) {\n                    if (S.charCodeAt(pos + 1) === slashCC) {\n                        pos = S.indexOf(closeBracket, pos);\n                        if (pos + 1) pos += 1\n                        return;\n                    } else if (S.charCodeAt(pos + 1) === exclamationCC) {\n                        if (S.charCodeAt(pos + 2) == minusCC) {\n                            //comment support\n                            while (pos !== -1 && !(S.charCodeAt(pos) === closeBracketCC && S.charCodeAt(pos - 1) == minusCC && S.charCodeAt(pos - 2) == minusCC && pos != -1)) {\n                                pos = S.indexOf(closeBracket, pos + 1);\n                            }\n                            if (pos === -1) {\n                                pos = S.length\n                            }\n                        } else {\n                            // doctypesupport\n                            pos += 2;\n                            while (S.charCodeAt(pos) !== closeBracketCC && S[pos]) {\n                                pos++;\n                            }\n                        }\n                        pos++;\n                        continue;\n                    }\n                    var child = parseNode();\n                    var childName = child.type;\n                    if (childName === 'type') // don't override special 'type' attribute!\n                        continue;\n                    var isProperty = childName.charAt(0) == childName.charAt(0).toLowerCase();//Object.keys(child).length == 2;\n                    if (isProperty && child.hasOwnProperty('value')) {\n                        node[childName] = child.value;\n                    } else {\n                        // skip one level if child is an OGC property\n                        if (isProperty) {\n                            delete child.type;\n                            for (var k in child) {\n                                if (typeof (child[k]) === 'object' && k !== 'name') {\n                                    Object.assign(child, child[k]);\n                                    delete child[k];\n                                }\n                            }\n                        }\n                        if (isArray(childName)) {\n                            if (!node.hasOwnProperty(childName))\n                                node[childName] = [];\n                            node[childName].push(child);\n                        } else {\n                            node[childName] = child;\n                        }\n                    }\n                } else {\n                    var text = parseText();\n                    if (text.trim().length > 0) {\n                        if (numericalNodeSet.has(node.type))\n                            node.value = parseFloat(text);\n                        else\n                            node.value = text;\n                    }\n                    pos++;\n                }\n            }\n        }\n\n        /**\n         *    returns the text outside of texts until the first '<'\n         */\n        function parseText() {\n            var start = pos;\n            pos = S.indexOf(openBracket, pos) - 1;\n            if (pos === -2)\n                pos = S.length;\n            return S.slice(start, pos + 1);\n        }\n\n        /**\n         *    returns text until the first nonAlphebetic letter\n         */\n        var nameSpacer = '\\n\\t>/= ';\n\n        function parseName() {\n            var start = pos;\n            while (nameSpacer.indexOf(S[pos]) === -1 && S[pos]) {\n                pos++;\n            }\n            return S.slice(start, pos);\n        }\n\n        function getLocalName(qname) {\n            var nsEnd = qname.indexOf(':');\n            if (nsEnd > 0)\n                return qname.substring(nsEnd + 1);\n            else\n                return qname;\n        }\n\n        function parseNode() {\n            var node = {};\n            pos++;\n            node.type = getLocalName(parseName());\n\n            // parsing attributes\n            while (S.charCodeAt(pos) !== closeBracketCC && S[pos]) {\n                var c = S.charCodeAt(pos);\n                if ((c > 64 && c < 91) || (c > 96 && c < 123)) {\n                    //if('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(S[pos])!==-1 ){\n                    var qname = parseName();\n                    var name = getLocalName(qname);\n                    // search beginning of the string\n                    var code = S.charCodeAt(pos);\n                    while (code && code !== singleQuoteCC && code !== doubleQuoteCC && !((code > 64 && code < 91) || (code > 96 && code < 123)) && code !== closeBracketCC) {\n                        pos++;\n                        code = S.charCodeAt(pos);\n                    }\n                    if (code === singleQuoteCC || code === doubleQuoteCC) {\n                        var value = parseString();\n                        if (pos === -1) {\n                            return node;\n                        }\n                    } else {\n                        value = null;\n                        pos--;\n                    }\n                    if (!qname.startsWith('xmlns:'))\n                        node[name] = value;\n                }\n                pos++;\n\n            }\n\n            // optional parsing of children\n            if (S.charCodeAt(pos - 1) !== slashCC) {\n                pos++;\n                parseChildren(node);\n            } else {\n                pos++;\n            }\n            return node;\n        }\n\n        /**\n         *    is parsing a string, that starts with a char and with the same usually  ' or \"\n         */\n\n        function parseString() {\n            var startChar = S[pos];\n            var startpos = ++pos;\n            pos = S.indexOf(startChar, startpos)\n            return S.slice(startpos, pos);\n        }\n\n        var out = parseNode();\n        out.pos = pos;\n        return out;\n    }\n}\n","import SWEXmlStreamParser from \"../parsers/SWEXmlStreamParser.js\";\n\nself.onmessage = (e) => {\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                let sweXmlParser = new SWEXmlStreamParser(xhr.responseText);\n                sweXmlParser.setXml(xhr.responseText);\n                let respObj = sweXmlParser.toJson();\n                self.postMessage(respObj);\n            } else {\n                self.postMessage({error: true, msg: xhr.responseText});\n            }\n        }\n    };\n    xhr.withCredentials = true;\n    xhr.open('GET', e.data, true);\n    xhr.send();\n};\n"],"sourceRoot":""}