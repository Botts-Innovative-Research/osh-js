{"version":3,"sources":["webpack:///../Toolkit/src/osh/osh-Constants.js","webpack:///../Toolkit/src/osh/datareceiver/osh-DataReceiver-DataSourceVideoH264.js","webpack:///../Toolkit/vendor-local/yuvcanvas/YUVCanvas.js","webpack:///../Toolkit/src/osh/ui/view/video/osh-UI-FFMPEGView.js","webpack:///./video-h264.js"],"names":["BASE_WORKER_URL","path","data","DataView","getFloat64","Uint8Array","byteLength","YUVCanvas","parOptions","this","canvasElement","canvas","document","createElement","contextOptions","type","customYUV444","conversionType","width","height","animationTime","initContextGL","contextGL","initProgram","initBuffers","initTextures","drawNextOuptutPictureGL","par","gl","texturePosBuffer","uTexturePosBuffer","vTexturePosBuffer","yTextureRef","uTextureRef","vTextureRef","yData","uData","vData","yDataPerRow","yRowCnt","uDataPerRow","uRowCnt","vDataPerRow","vRowCnt","viewport","tBottom","tRight","texturePosValues","Float32Array","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","uTexturePosValues","vTexturePosValues","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","LUMINANCE","UNSIGNED_BYTE","TEXTURE1","TEXTURE2","drawArrays","TRIANGLE_STRIP","textureRef","dataPerRow","rowCnt","uniform2f","getUniformLocation","shaderProgram","validContextNames","nameIndex","length","contextName","getContext","e","getParameter","vertexShaderScript","fragmentShaderScript","join","YUV2RGB","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","YUV2RGBRef","uniformMatrix4fv","vertexPosBuffer","createBuffer","STATIC_DRAW","vertexPosRef","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","timePassed","aniFun","mul","setTimeout","neg","pos","texturePosRef","uTexturePosRef","vTexturePosRef","initTexture","ySamplerRef","uniform1i","uSamplerRef","vSamplerRef","samplerRef","createTexture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","croppingParams","drawNextOuptutPictureRGBA","argbData","ctx","imageData","getImageData","set","putImageData","left","top","divId","options","super","fps","bufferring","statistics","videoStartTime","videoPictureCounter","windowStartTime","windowPictureCounter","fpsMin","fpsMax","fpsSinceStart","useWorker","resetCalled","buffering","yuvCanvas","preserveDrawingBuffer","getElementById","appendChild","hidden","visibilityChange","self","observeDiv","event","fire","EVENT","SELECT_VIEW","dataSourcesIds","dataSourceId","entityId","initFFMPEG_DECODER_WORKER","initFFMEG_DECODER","msHidden","webkitHidden","that","addEventListener","skipFrame","pktData","pktSize","decodeWorker","decodedFrame","decode","frameYData","frame_width","frame_height","frameUData","frameVData","updateStatistics","onAfterDecoded","dataSourceIds","indexOf","setAttribute","css","cssSelected","_avcodec_flush_buffers","av_ctx","nodata","s","now","Date","videoElapsedTime","elapsed","windowElapsedTime","callback","worker","Worker","buffer","display","drawing","onmessage","push","setInterval","shift","transferableData","byteOffset","postMessage","Module","ccall","codec","_avcodec_alloc_context3","_avcodec_open2","error","av_pkt","_malloc","av_pktData","_av_init_packet","setValue","av_frame","_avcodec_alloc_frame","alert","got_frame","maxPktSize","writeArrayToMemory","_avcodec_decode_video2","getValue","decoded_frame","frameYDataPtr","frameUDataPtr","frameVDataPtr","HEAPU8","videoDataSource","protocol","service","endpointUrl","offeringID","observedProperty","startTime","endTime","replaySpeed","id","name","showTime","connect"],"mappings":"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","file":"video-h264.js","sourcesContent":["/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an \"AS IS\" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2017 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\nexport const VERSION = '1.3';\nexport const BASE_WORKER_URL = {\n    path: \"js/workers\"\n};\n\n","/***************************** BEGIN LICENSE BLOCK ***************************\n\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n\n Software distributed under the License is distributed on an \"AS IS\" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n\n Copyright (C) 2015-2017 Mathieu Dhainaut. All Rights Reserved.\n\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n\n ******************************* END LICENSE BLOCK ***************************/\n\n/**\n * @classdesc This datasource provides parsing to H264 raw data.\n * Data: ArrayBuffer\n * @class OSH.DataReceiver.VideoH264\n * @augments OSH.DataReceiver.DataSource\n * @example\n * var videoDataSource = new OSH.DataReceiver.VideoH264(\"H264 video \", {\n        protocol: \"ws\",\n        service: \"SOS\",\n        endpointUrl: \"sensiasoft.net:8181/sensorhub/sos\",\n        offeringID: \"urn:android:device:a0e0eac2fea3f614-sos\",\n        observedProperty: \"http://sensorml.com/ont/swe/property/VideoFrame\",\n        startTime: \"2016-08-11T20:17:30.402Z\",\n        endTime: \"2016-08-11T20:18:05.451Z\",\n        replaySpeed: 1,\n        syncMasterTime: false,\n        bufferingTime: 1000\n  });\n */\nimport DataSource from './osh-DataReceiver-DataSource.js';\n\nexport default class VideoH264 extends DataSource {\n    /**\n     * Extracts timestamp from the message. The timestamp is corresponding to the first 64bits of the binary message.\n     * @param {ArrayBuffer} data the data to parse\n     * @returns {number} the extracted timestamp\n     * @memberof OSH.DataReceiver.VideoH264\n     * @instance\n     */\n    parseTimeStamp(data) {\n        // read double time stamp as big endian\n        return new DataView(data).getFloat64(0, false) * 1000;\n    }\n\n    /**\n     * Extract data from the message. The H264 NAL unit starts at offset 12 after 8-bytes time stamp and 4-bytes frame length.\n     * @param {ArrayBuffer} data the data to parse\n     * @returns {Uint8Array} the parsed data\n     * @memberof OSH.DataReceiver.VideoH264\n     * @instance\n     */\n    parseData(data) {\n        return new Uint8Array(data, 12, data.byteLength - 12); // H264 NAL unit starts at offset 12 after 8-bytes time stamp and 4-bytes frame length\n    }\n}\n\n","//\n//  Copyright (c) 2015 Paperspace Co. All rights reserved.\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n//  IN THE SOFTWARE.\n//\n\n\n/**\n * This class can be used to render output pictures from an H264bsdDecoder to a canvas element.\n * If available the content is rendered using WebGL.\n */\nexport default class YUVCanvas {\n    constructor(parOptions) {\n\n        parOptions = parOptions || {};\n\n        this.canvasElement = parOptions.canvas || document.createElement(\"canvas\");\n        this.contextOptions = parOptions.contextOptions;\n\n        this.type = parOptions.type || \"yuv420\";\n\n        this.customYUV444 = parOptions.customYUV444;\n\n        this.conversionType = parOptions.conversionType || \"rec601\";\n\n        this.width = parOptions.width || 640;\n        this.height = parOptions.height || 320;\n\n        this.animationTime = parOptions.animationTime || 0;\n\n        this.canvasElement.width = this.width;\n        this.canvasElement.height = this.height;\n\n        this.initContextGL();\n\n        if (this.contextGL) {\n            this.initProgram();\n            this.initBuffers();\n            this.initTextures();\n        }\n\n\n        /**\n         * Draw the next output picture using WebGL\n         */\n        if (this.type === \"yuv420\") {\n            this.drawNextOuptutPictureGL = (par) => {\n                var gl = this.contextGL;\n                var texturePosBuffer = this.texturePosBuffer;\n                var uTexturePosBuffer = this.uTexturePosBuffer;\n                var vTexturePosBuffer = this.vTexturePosBuffer;\n\n                var yTextureRef = this.yTextureRef;\n                var uTextureRef = this.uTextureRef;\n                var vTextureRef = this.vTextureRef;\n\n                var yData = par.yData;\n                var uData = par.uData;\n                var vData = par.vData;\n\n                var width = this.width;\n                var height = this.height;\n\n                var yDataPerRow = par.yDataPerRow || width;\n                var yRowCnt = par.yRowCnt || height;\n\n                var uDataPerRow = par.uDataPerRow || (width / 2);\n                var uRowCnt = par.uRowCnt || (height / 2);\n\n                var vDataPerRow = par.vDataPerRow || uDataPerRow;\n                var vRowCnt = par.vRowCnt || uRowCnt;\n\n                gl.viewport(0, 0, width, height);\n\n                var tTop = 0;\n                var tLeft = 0;\n                var tBottom = height / yRowCnt;\n                var tRight = width / yDataPerRow;\n                var texturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);\n\n                if (this.customYUV444) {\n                    tBottom = height / uRowCnt;\n                    tRight = width / uDataPerRow;\n                } else {\n                    tBottom = (height / 2) / uRowCnt;\n                    tRight = (width / 2) / uDataPerRow;\n                }\n                var uTexturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, uTexturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, uTexturePosValues, gl.DYNAMIC_DRAW);\n\n\n                if (this.customYUV444) {\n                    tBottom = height / vRowCnt;\n                    tRight = width / vDataPerRow;\n                } else {\n                    tBottom = (height / 2) / vRowCnt;\n                    tRight = (width / 2) / vDataPerRow;\n                }\n                var vTexturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, vTexturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, vTexturePosValues, gl.DYNAMIC_DRAW);\n\n\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, yTextureRef);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, yDataPerRow, yRowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, yData);\n\n                gl.activeTexture(gl.TEXTURE1);\n                gl.bindTexture(gl.TEXTURE_2D, uTextureRef);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, uDataPerRow, uRowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, uData);\n\n                gl.activeTexture(gl.TEXTURE2);\n                gl.bindTexture(gl.TEXTURE_2D, vTextureRef);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, vDataPerRow, vRowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, vData);\n\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            };\n\n        } else if (this.type === \"yuv422\") {\n            this.drawNextOuptutPictureGL = (par) => {\n                var gl = this.contextGL;\n                var texturePosBuffer = this.texturePosBuffer;\n\n                var textureRef = this.textureRef;\n\n                var data = par.data;\n\n                var width = this.width;\n                var height = this.height;\n\n                var dataPerRow = par.dataPerRow || (width * 2);\n                var rowCnt = par.rowCnt || height;\n\n                gl.viewport(0, 0, width, height);\n\n                var tTop = 0;\n                var tLeft = 0;\n                var tBottom = height / rowCnt;\n                var tRight = width / (dataPerRow / 2);\n                var texturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);\n\n                gl.uniform2f(gl.getUniformLocation(this.shaderProgram, 'resolution'), dataPerRow, height);\n\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, textureRef);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, dataPerRow, rowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, data);\n\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            };\n        }\n    }\n\n    /**\n     * Returns true if the canvas supports WebGL\n     */\n    isWebGL() {\n        return this.contextGL;\n    }\n\n    /**\n     * Create the GL context from the canvas element\n     */\n    initContextGL() {\n        var canvas = this.canvasElement;\n        var gl = null;\n\n        var validContextNames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\n        var nameIndex = 0;\n\n        while (!gl && nameIndex < validContextNames.length) {\n            var contextName = validContextNames[nameIndex];\n\n            try {\n                if (this.contextOptions) {\n                    gl = canvas.getContext(contextName, this.contextOptions);\n                } else {\n                    gl = canvas.getContext(contextName);\n                }\n            } catch (e) {\n                gl = null;\n            }\n\n            if (!gl || typeof gl.getParameter !== \"function\") {\n                gl = null;\n            }\n\n            ++nameIndex;\n        }\n\n        this.contextGL = gl;\n    }\n\n    /**\n     * Initialize GL shader program\n     */\n    initProgram() {\n        var gl = this.contextGL;\n\n        // vertex shader is the same for all types\n        var vertexShaderScript;\n        var fragmentShaderScript;\n\n        if (this.type === \"yuv420\") {\n\n            vertexShaderScript = [\n                'attribute vec4 vertexPos;',\n                'attribute vec4 texturePos;',\n                'attribute vec4 uTexturePos;',\n                'attribute vec4 vTexturePos;',\n                'varying vec2 textureCoord;',\n                'varying vec2 uTextureCoord;',\n                'varying vec2 vTextureCoord;',\n\n                'void main()',\n                '{',\n                '  gl_Position = vertexPos;',\n                '  textureCoord = texturePos.xy;',\n                '  uTextureCoord = uTexturePos.xy;',\n                '  vTextureCoord = vTexturePos.xy;',\n                '}'\n            ].join('\\n');\n\n            fragmentShaderScript = [\n                'precision highp float;',\n                'varying highp vec2 textureCoord;',\n                'varying highp vec2 uTextureCoord;',\n                'varying highp vec2 vTextureCoord;',\n                'uniform sampler2D ySampler;',\n                'uniform sampler2D uSampler;',\n                'uniform sampler2D vSampler;',\n                'uniform mat4 YUV2RGB;',\n\n                'void main(void) {',\n                '  highp float y = texture2D(ySampler,  textureCoord).r;',\n                '  highp float u = texture2D(uSampler,  uTextureCoord).r;',\n                '  highp float v = texture2D(vSampler,  vTextureCoord).r;',\n                '  gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;',\n                '}'\n            ].join('\\n');\n\n        } else if (this.type === \"yuv422\") {\n            vertexShaderScript = [\n                'attribute vec4 vertexPos;',\n                'attribute vec4 texturePos;',\n                'varying vec2 textureCoord;',\n\n                'void main()',\n                '{',\n                '  gl_Position = vertexPos;',\n                '  textureCoord = texturePos.xy;',\n                '}'\n            ].join('\\n');\n\n            fragmentShaderScript = [\n                'precision highp float;',\n                'varying highp vec2 textureCoord;',\n                'uniform sampler2D sampler;',\n                'uniform highp vec2 resolution;',\n                'uniform mat4 YUV2RGB;',\n\n                'void main(void) {',\n\n                '  highp float texPixX = 1.0 / resolution.x;',\n                '  highp float logPixX = 2.0 / resolution.x;', // half the resolution of the texture\n                '  highp float logHalfPixX = 4.0 / resolution.x;', // half of the logical resolution so every 4th pixel\n                '  highp float steps = floor(textureCoord.x / logPixX);',\n                '  highp float uvSteps = floor(textureCoord.x / logHalfPixX);',\n                '  highp float y = texture2D(sampler, vec2((logPixX * steps) + texPixX, textureCoord.y)).r;',\n                '  highp float u = texture2D(sampler, vec2((logHalfPixX * uvSteps), textureCoord.y)).r;',\n                '  highp float v = texture2D(sampler, vec2((logHalfPixX * uvSteps) + texPixX + texPixX, textureCoord.y)).r;',\n\n                //'  highp float y = texture2D(sampler,  textureCoord).r;',\n                //'  gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;',\n                '  gl_FragColor = vec4(y, u, v, 1.0) * YUV2RGB;',\n                '}'\n            ].join('\\n');\n        }\n\n        var YUV2RGB = [];\n\n        if (this.conversionType === \"rec709\") {\n            // ITU-T Rec. 709\n            YUV2RGB = [\n                1.16438, 0.00000, 1.79274, -0.97295,\n                1.16438, -0.21325, -0.53291, 0.30148,\n                1.16438, 2.11240, 0.00000, -1.13340,\n                0, 0, 0, 1,\n            ];\n        } else {\n            // assume ITU-T Rec. 601\n            YUV2RGB = [\n                1.16438, 0.00000, 1.59603, -0.87079,\n                1.16438, -0.39176, -0.81297, 0.52959,\n                1.16438, 2.01723, 0.00000, -1.08139,\n                0, 0, 0, 1\n            ];\n        }\n\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertexShaderScript);\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.log('Vertex shader failed to compile: ' + gl.getShaderInfoLog(vertexShader));\n        }\n\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragmentShaderScript);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.log('Fragment shader failed to compile: ' + gl.getShaderInfoLog(fragmentShader));\n        }\n\n        var program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            console.log('Program failed to compile: ' + gl.getProgramInfoLog(program));\n        }\n\n        gl.useProgram(program);\n\n        var YUV2RGBRef = gl.getUniformLocation(program, 'YUV2RGB');\n        gl.uniformMatrix4fv(YUV2RGBRef, false, YUV2RGB);\n\n        this.shaderProgram = program;\n    }\n\n    /**\n     * Initialize vertex buffers and attach to shader program\n     */\n    initBuffers() {\n        var gl = this.contextGL;\n        var program = this.shaderProgram;\n\n        var vertexPosBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n        var vertexPosRef = gl.getAttribLocation(program, 'vertexPos');\n        gl.enableVertexAttribArray(vertexPosRef);\n        gl.vertexAttribPointer(vertexPosRef, 2, gl.FLOAT, false, 0, 0);\n\n        if (this.animationTime) {\n\n            var animationTime = this.animationTime;\n            var timePassed = 0;\n            var stepTime = 15;\n\n            var aniFun = function () {\n\n                timePassed += stepTime;\n                var mul = (1 * timePassed) / animationTime;\n\n                if (timePassed >= animationTime) {\n                    mul = 1;\n                } else {\n                    setTimeout(aniFun, stepTime);\n                }\n\n                var neg = -1 * mul;\n                var pos = 1 * mul;\n\n                var vertexPosBuffer = gl.createBuffer();\n                gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([pos, pos, neg, pos, pos, neg, neg, neg]), gl.STATIC_DRAW);\n\n                var vertexPosRef = gl.getAttribLocation(program, 'vertexPos');\n                gl.enableVertexAttribArray(vertexPosRef);\n                gl.vertexAttribPointer(vertexPosRef, 2, gl.FLOAT, false, 0, 0);\n\n                try {\n                    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n                } catch (e) {\n                }\n\n            };\n            aniFun();\n\n        }\n\n\n        var texturePosBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n        var texturePosRef = gl.getAttribLocation(program, 'texturePos');\n        gl.enableVertexAttribArray(texturePosRef);\n        gl.vertexAttribPointer(texturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n        this.texturePosBuffer = texturePosBuffer;\n\n        if (this.type === \"yuv420\") {\n            var uTexturePosBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, uTexturePosBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n            var uTexturePosRef = gl.getAttribLocation(program, 'uTexturePos');\n            gl.enableVertexAttribArray(uTexturePosRef);\n            gl.vertexAttribPointer(uTexturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n            this.uTexturePosBuffer = uTexturePosBuffer;\n\n\n            var vTexturePosBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vTexturePosBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n            var vTexturePosRef = gl.getAttribLocation(program, 'vTexturePos');\n            gl.enableVertexAttribArray(vTexturePosRef);\n            gl.vertexAttribPointer(vTexturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n            this.vTexturePosBuffer = vTexturePosBuffer;\n        }\n    }\n\n    /**\n     * Initialize GL textures and attach to shader program\n     */\n    initTextures() {\n        var gl = this.contextGL;\n        var program = this.shaderProgram;\n\n        if (this.type === \"yuv420\") {\n\n            var yTextureRef = this.initTexture();\n            var ySamplerRef = gl.getUniformLocation(program, 'ySampler');\n            gl.uniform1i(ySamplerRef, 0);\n            this.yTextureRef = yTextureRef;\n\n            var uTextureRef = this.initTexture();\n            var uSamplerRef = gl.getUniformLocation(program, 'uSampler');\n            gl.uniform1i(uSamplerRef, 1);\n            this.uTextureRef = uTextureRef;\n\n            var vTextureRef = this.initTexture();\n            var vSamplerRef = gl.getUniformLocation(program, 'vSampler');\n            gl.uniform1i(vSamplerRef, 2);\n            this.vTextureRef = vTextureRef;\n\n        } else if (this.type === \"yuv422\") {\n            // only one texture for 422\n            var textureRef = this.initTexture();\n            var samplerRef = gl.getUniformLocation(program, 'sampler');\n            gl.uniform1i(samplerRef, 0);\n            this.textureRef = textureRef;\n\n        }\n    }\n\n    /**\n     * Create and configure a single texture\n     */\n    initTexture() {\n        var gl = this.contextGL;\n\n        var textureRef = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, textureRef);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        return textureRef;\n    }\n\n    /**\n     * Draw picture data to the canvas.\n     * If this object is using WebGL, the data must be an I420 formatted ArrayBuffer,\n     * Otherwise, data must be an RGBA formatted ArrayBuffer.\n     */\n    drawNextOutputPicture(width, height, croppingParams, data) {\n        var gl = this.contextGL;\n\n        if (gl) {\n            this.drawNextOuptutPictureGL(width, height, croppingParams, data);\n        } else {\n            this.drawNextOuptutPictureRGBA(width, height, croppingParams, data);\n        }\n    }\n\n    /**\n     * Draw next output picture using ARGB data on a 2d canvas.\n     */\n    drawNextOuptutPictureRGBA(width, height, croppingParams, data) {\n        var canvas = this.canvasElement;\n\n        var argbData = data;\n        var ctx = canvas.getContext('2d');\n        var imageData = ctx.getImageData(0, 0, width, height);\n        imageData.data.set(argbData);\n\n        if (croppingParams === null) {\n            ctx.putImageData(imageData, 0, 0);\n        } else {\n            ctx.putImageData(imageData, -croppingParams.left, -croppingParams.top, 0, 0, croppingParams.width, croppingParams.height);\n        }\n    }\n}\n","/***************************** BEGIN LICENSE BLOCK ***************************\n The contents of this file are subject to the Mozilla Public License, v. 2.0.\n If a copy of the MPL was not distributed with this file, You can obtain one\n at http://mozilla.org/MPL/2.0/.\n Software distributed under the License is distributed on an \"AS IS\" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n for the specific language governing rights and limitations under the License.\n Copyright (C) 2015-2017 Mathieu Dhainaut. All Rights Reserved.\n Author: Mathieu Dhainaut <mathieu.dhainaut@gmail.com>\n ******************************* END LICENSE BLOCK ***************************/\n\nimport {View} from \"../osh-UI-View.js\";\nimport {isDefined, isWebWorker} from \"../../../osh-Utils.js\";\nimport YUVCanvas from \"../../../../../vendor-local/yuvcanvas/YUVCanvas.js\";\nimport EventManager from \"../../../osh-EventManager.js\";\nimport {BASE_WORKER_URL} from \"../../../osh-Constants.js\";\n\n/**\n * @classdesc\n * @class\n * @type {OSH.UI.View}\n * @augments OSH.UI.View\n * @example\n let videoView = new OSH.UI.FFMPEGView(\"videoContainer-id\", {\n    dataSourceId: videoDataSource.id,\n    css: \"video\",\n    cssSelected: \"video-selected\",\n    name: \"Video\",\n    useWorker:true,\n    useWebWorkerTransferableData: false // this is because you can speed up the data transfert between main script and web worker\n                                            by using transferable data. Note that can cause problems if you data is attempted to use anywhere else.\n                                            See the not below for more details(*).\n});\n (*)The transferableData actually transfers the ownership of the object to or from the web worker.\n It's like passing by reference where a copy isn't made. The difference between it and the normal pass-by-reference\n is that the side that transferred the data can no longer access it. In that case, the use of the data must be UNIQUE, that means\n you cannot use the data for anything else (like another viewer).\n The non transferable data is a copy of the data to be made before being sent to the worker. That could be slow for a large amount of data.\n */\n\nexport default class FFMPEGView extends View {\n    constructor(divId, options) {\n        super(divId, [], options);\n\n        this.fps = 0;\n        let width = \"640\";\n        let height = \"480\";\n        this.bufferring = 0;\n\n        this.statistics = {\n            videoStartTime: 0,\n            videoPictureCounter: 0,\n            windowStartTime: 0,\n            windowPictureCounter: 0,\n            fps: 0,\n            fpsMin: 1000,\n            fpsMax: -1000,\n            fpsSinceStart: 0\n        };\n\n        this.useWorker = false;\n        this.resetCalled = true;\n\n        if (isDefined(options)) {\n            if (options.width) {\n                width = options.width;\n            }\n\n            if (options.height) {\n                height = options.height;\n            }\n\n            if (options.buffering) {\n                this.bufferring = options.buffering;\n            }\n\n            this.useWorker = (isDefined(options.useWorker)) && (options.useWorker) && (isWebWorker());\n        }\n\n// create webGL canvas\n        this.yuvCanvas = new YUVCanvas({width: width, height: height, contextOptions: {preserveDrawingBuffer: true}});\n        let domNode = document.getElementById(this.divId);\n        domNode.appendChild(this.yuvCanvas.canvasElement);\n\n// add selection listener\n        let self = this;\n        EventManager.observeDiv(this.divId, \"click\", (event) => {\n            EventManager.fire(EventManager.EVENT.SELECT_VIEW, {\n                dataSourcesIds: [self.dataSourceId],\n                entityId: self.entityId\n            });\n        });\n\n        if (this.useWorker) {\n            this.initFFMPEG_DECODER_WORKER();\n        } else {\n            this.initFFMEG_DECODER();\n        }\n\n        let hidden, visibilityChange;\n\n        if (isDefined(document.hidden)) { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n            visibilityChange = \"visibilitychange\";\n        } else if (isDefined(document.msHidden)) {\n            hidden = \"msHidden\";\n            visibilityChange = \"msvisibilitychange\";\n        } else if (isDefined(document.webkitHidden)) {\n            hidden = \"webkitHidden\";\n            visibilityChange = \"webkitvisibilitychange\";\n        }\n\n        let that = this;\n\n        function handleVisibilityChange() {\n            if (document.hidden) {\n                that.skipFrame = true;\n            } else {\n                that.skipFrame = false;\n            }\n        }\n\n        document.addEventListener(visibilityChange, handleVisibilityChange, false);\n    }\n\n    /**\n     *\n     * @param dataSourceId\n     * @param data\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    setData(dataSourceId, data) {\n        if (!this.skipFrame) {\n            let pktData = data.data;\n            let pktSize = pktData.length;\n\n            if (this.useWorker) {\n                this.resetCalled = false;\n                this.decodeWorker(pktSize, pktData);\n            } else {\n                let decodedFrame = this.decode(pktSize, pktData);\n                if (isDefined(decodedFrame)) {\n                    this.yuvCanvas.drawNextOuptutPictureGL({\n                        yData: decodedFrame.frameYData,\n                        yDataPerRow: decodedFrame.frame_width,\n                        yRowCnt: decodedFrame.frame_height,\n                        uData: decodedFrame.frameUData,\n                        uDataPerRow: decodedFrame.frame_width / 2,\n                        uRowCnt: decodedFrame.frame_height / 2,\n                        vData: decodedFrame.frameVData,\n                        vDataPerRow: decodedFrame.frame_width / 2,\n                        vRowCnt: decodedFrame.frame_height / 2\n                    });\n\n                    this.updateStatistics();\n                    this.onAfterDecoded();\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * @param dataSourceIds\n     * @param entityId\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    selectDataView(dataSourceIds, entityId) {\n        if (dataSourceIds.indexOf(this.dataSourceId) > -1 || (isDefined(this.entityId) &&\n            this.entityId === entityId)) {\n            document.getElementById(this.divId).setAttribute(\"class\", this.css + \" \" + this.cssSelected);\n        } else {\n            document.getElementById(this.divId).setAttribute(\"class\", this.css);\n        }\n    }\n\n\n    /**\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    reset() {\n        _avcodec_flush_buffers(this.av_ctx);\n// clear canvas\n        this.resetCalled = true;\n        let nodata = new Uint8Array(1);\n        this.yuvCanvas.drawNextOuptutPictureGL({\n            yData: nodata,\n            yDataPerRow: 1,\n            yRowCnt: 1,\n            uData: nodata,\n            uDataPerRow: 1,\n            uRowCnt: 1,\n            vData: nodata,\n            vDataPerRow: 1,\n            vRowCnt: 1\n        });\n    }\n\n    /**\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    updateStatistics() {\n        let s = this.statistics;\n        s.videoPictureCounter += 1;\n        s.windowPictureCounter += 1;\n        let now = Date.now();\n        if (!s.videoStartTime) {\n            s.videoStartTime = now;\n        }\n        let videoElapsedTime = now - s.videoStartTime;\n        s.elapsed = videoElapsedTime / 1000;\n        if (videoElapsedTime < 1000) {\n            return;\n        }\n\n        if (!s.windowStartTime) {\n            s.windowStartTime = now;\n            return;\n        } else if ((now - s.windowStartTime) > 1000) {\n            let windowElapsedTime = now - s.windowStartTime;\n            let fps = (s.windowPictureCounter / windowElapsedTime) * 1000;\n            s.windowStartTime = now;\n            s.windowPictureCounter = 0;\n\n            if (fps < s.fpsMin) s.fpsMin = fps;\n            if (fps > s.fpsMax) s.fpsMax = fps;\n            s.fps = fps;\n        }\n\n        let fps = (s.videoPictureCounter / videoElapsedTime) * 1000;\n        s.fpsSinceStart = fps;\n    }\n\n    /**\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    onAfterDecoded() {\n    }\n\n//-- FFMPEG DECODING PART\n\n//-------------------------------------------------------//\n//---------- Web worker --------------------------------//\n//-----------------------------------------------------//\n\n    /**\n     * The worker code is located at the location js/workers/FFMPEGViewWorker.js.\n     * This location cannot be changed. Be sure to have the right file at the right place.\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     * @param callback\n     */\n    initFFMPEG_DECODER_WORKER(callback) {\n        this.worker = new Worker(BASE_WORKER_URL.path+'/osh-UI-FFMPEGViewWorker.js');\n        let yuvCanvas = this.yuvCanvas;\n\n        let buffer = [];\n        this.worker.onmessage = function (e) {\n            if (this.bufferring > 0) {\n                buffer.push(e);\n            } else {\n                display(e);\n            }\n        }\n\n        setInterval(function () {\n            if (buffer.length > 30) {\n                buffer = [];\n            }\n\n            if (buffer.length > this.bufferring) {\n                display(buffer.shift());\n            }\n        }, 1000 / 30.);\n\n        function display(e) {\n\n            let decodedFrame = e.data;\n\n            yuvCanvas.canvasElement.drawing = true;\n            yuvCanvas.drawNextOuptutPictureGL({\n                yData: decodedFrame.frameYData,\n                yDataPerRow: decodedFrame.frame_width,\n                yRowCnt: decodedFrame.frame_height,\n                uData: decodedFrame.frameUData,\n                uDataPerRow: decodedFrame.frame_width / 2,\n                uRowCnt: decodedFrame.frame_height / 2,\n                vData: decodedFrame.frameVData,\n                vDataPerRow: decodedFrame.frame_width / 2,\n                vRowCnt: decodedFrame.frame_height / 2\n            });\n\n            yuvCanvas.canvasElement.drawing = false;\n        }\n    }\n\n    /**\n     *\n     * @param pktSize\n     * @param pktData\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    decodeWorker(pktSize, pktData) {\n        let transferableData = {\n            pktSize: pktSize,\n            pktData: pktData.buffer,\n            byteOffset: pktData.byteOffset\n        };\n        this.worker.postMessage(transferableData, [transferableData.pktData]);\n    }\n\n//-------------------------------------------------------//\n//---------- No Web worker -----------------------------//\n//-----------------------------------------------------//\n\n    /**\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    initFFMEG_DECODER() {\n// register all compiled codecs\n        Module.ccall('avcodec_register_all');\n\n// find h264 decoder\n        let codec = Module.ccall('avcodec_find_decoder_by_name', 'number', ['string'], [\"h264\"]);\n        if (codec === 0) {\n            console.error(\"Could not find H264 codec\");\n            return;\n        }\n\n// init codec and conversion context\n        this.av_ctx = _avcodec_alloc_context3(codec);\n\n// open codec\n        let ret = _avcodec_open2(this.av_ctx, codec, 0);\n        if (ret < 0) {\n            console.error(\"Could not initialize codec\");\n            return;\n        }\n\n// allocate packet\n        this.av_pkt = Module._malloc(96);\n        this.av_pktData = Module._malloc(1024 * 150);\n        _av_init_packet(this.av_pkt);\n        Module.setValue(this.av_pkt + 24, this.av_pktData, '*');\n\n// allocate video frame\n        this.av_frame = _avcodec_alloc_frame();\n        if (!this.av_frame)\n            alert(\"Could not allocate video frame\");\n\n// init decode frame function\n        this.got_frame = Module._malloc(4);\n        this.maxPktSize = 1024 * 50;\n\n\n    }\n\n    /**\n     *\n     * @param pktSize\n     * @param pktData\n     * @returns {{frame_width: *, frame_height: *, frameYDataPtr: *, frameUDataPtr: *, frameVDataPtr: *, frameYData: Uint8Array, frameUData: Uint8Array, frameVData: Uint8Array}}\n     * @instance\n     * @memberof OSH.UI.FFMPEGView\n     */\n    decode(pktSize, pktData) {\n        if (pktSize > this.maxPktSize) {\n            this.av_pkt = Module._malloc(96);\n            this.av_pktData = Module._malloc(pktSize);\n            _av_init_packet(this.av_pkt);\n            Module.setValue(this.av_pkt + 24, this.av_pktData, '*');\n            this.maxPktSize = pktSize;\n        }\n        // prepare packet\n        Module.setValue(this.av_pkt + 28, pktSize, 'i32');\n        Module.writeArrayToMemory(pktData, this.av_pktData);\n\n// decode next frame\n        let len = _avcodec_decode_video2(this.av_ctx, this.av_frame, this.got_frame, this.av_pkt);\n        if (len < 0) {\n            console.log(\"Error while decoding frame\");\n            return;\n        }\n\n        if (Module.getValue(this.got_frame, 'i8') === 0) {\n//console.log(\"No frame\");\n            return;\n        }\n\n        let decoded_frame = this.av_frame;\n        let frame_width = Module.getValue(decoded_frame + 68, 'i32');\n        let frame_height = Module.getValue(decoded_frame + 72, 'i32');\n//console.log(\"Decoded Frame, W=\" + frame_width + \", H=\" + frame_height);\n\n// copy Y channel to canvas\n        let frameYDataPtr = Module.getValue(decoded_frame, '*');\n        let frameUDataPtr = Module.getValue(decoded_frame + 4, '*');\n        let frameVDataPtr = Module.getValue(decoded_frame + 8, '*');\n\n        return {\n            frame_width: frame_width,\n            frame_height: frame_height,\n            frameYDataPtr: frameYDataPtr,\n            frameUDataPtr: frameUDataPtr,\n            frameVDataPtr: frameVDataPtr,\n            frameYData: new Uint8Array(Module.HEAPU8.buffer, frameYDataPtr, frame_width * frame_height),\n            frameUData: new Uint8Array(Module.HEAPU8.buffer, frameUDataPtr, frame_width / 2 * frame_height / 2),\n            frameVData: new Uint8Array(Module.HEAPU8.buffer, frameVDataPtr, frame_width / 2 * frame_height / 2)\n        };\n    }\n}\n","import {BASE_WORKER_URL} from '../Toolkit/src/osh/osh-Constants.js';\n\nBASE_WORKER_URL.path = '../Toolkit/src/osh/workers/';\nimport VideoH264 from '../Toolkit/src/osh/datareceiver/osh-DataReceiver-DataSourceVideoH264.js';\nimport FFMPEGView from '../Toolkit/src/osh/ui/view/video/osh-UI-FFMPEGView.js';\n\n// create data source for UAV camera\nvar videoDataSource = new VideoH264(\"drone-Video\", {\n  protocol: \"ws\",\n  service: \"SOS\",\n  endpointUrl: \"sensiasoft.net:8181/sensorhub/sos\",\n  offeringID: \"urn:mysos:solo:video2\",\n  observedProperty: \"http://sensorml.com/ont/swe/property/VideoFrame\",\n  startTime: \"2015-12-19T21:04:30Z\",\n  endTime: \"2015-12-19T21:09:19Z\",\n  replaySpeed: 1\n});\n\n// show it in video view using FFMPEG JS decoder\nvar videoView = new FFMPEGView(\"video-container\", {\n  dataSourceId: videoDataSource.id,\n  css: \"video-h264\",\n  name: \"UAV Video\",\n  useWorker: true,\n  width: 1280,\n  height: 720,\n  showTime: true\n});\n\n// start streaming\nvideoDataSource.connect();\n"],"sourceRoot":""}