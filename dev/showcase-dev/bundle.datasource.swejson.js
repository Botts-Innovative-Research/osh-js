!function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=3)}([function(e,t,i){e.exports=function(){return new Worker(i.p+"WorkerName.33e3153f3095473d86ef.js")}},function(e,t,i){e.exports=function(){return new Worker(i.p+"WorkerName.78f197fe4f480c3e263a.js")}},function(e,t,i){e.exports=function(){return new Worker(i.p+"WorkerName.700516bd551ae0d05417.js")}},function(e,t,i){"use strict";i.r(t);const s="replay",r="realTime";Math.pow(2,53);function a(e){return null!=e}function n(e,t="letiable"){if(!a(e))throw t+" must be defined";return e}function o(){return"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){let t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}var h=i(0),c=i.n(h);var m=class{constructor(e){this.worker=e,this.onmessage=null}postMessage(e,t){this.worker.postMessage(e,t)}postMessageWithAck(e,t){const i=crypto.randomUUID();return new Promise((s,r)=>{const a=new AbortController;this.worker.addEventListener("message",e=>{e.data.ackId===i&&(delete e.data.ackId,a.abort(),e.error?r(e.error):s(e.data))},{signal:a.signal}),e.ackId=i,this.worker.postMessage(e,t)})}set onmessage(e){this.worker.onmessage=e}terminate(){this.worker&&this.worker.terminate()}};const d=[];let p=0,u={};var S=class{constructor(e,t){this.id=t.id||"DataSource-"+o(),this.name=e,this.properties=t,this.eventSubscriptionMap={},this.init=void 0,this.mode=r,a(t.mode)&&(this.mode=t.mode)}getId(){return this.id}getName(){return this.name}terminate(){null!==this.dataSourceWorker&&this.dataSourceWorker.terminate()}getTopicId(){return"datasource-data-"+this.id}subscribe(e,t){for(let i=0;i<t.length;i++)t[i]in this.eventSubscriptionMap||(this.eventSubscriptionMap[t[i]]=[]),this.eventSubscriptionMap[t[i]].push(e)}async createWorker(e){return new m(new c.a)}async updateProperties(e){return this.properties={...this.properties,...e},this.dataSourceWorker.postMessageWithAck({message:"update-properties",data:e,dsId:this.id})}async connect(){return await this.checkInit(),this.doConnect()}async getWorker(){return this.id in u||(p=(p+1)%5,a(d[p])||(d[p]=await this.createWorker()),u[this.id]=p),d[u[this.id]]}async initDataSource(e=this.properties){return this.dataSourceWorker=await this.getWorker(),this.dataSourceWorker.postMessageWithAck({message:"init",id:this.id,properties:e,topics:{data:this.getTopicId()},dsId:this.id}).then(()=>{new BroadcastChannel(this.getTopicId()).onmessage=async e=>{await this.handleMessage(e)},this.isInitialized=!0})}async handleMessage(e){const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}async checkInit(){return a(this.init)||(this.init=this.initDataSource()),this.init}async doConnect(){return this.dataSourceWorker.postMessageWithAck({message:"connect",dsId:this.id})}async isConnected(){return!!this.init&&(await this.checkInit(),this.dataSourceWorker.postMessageWithAck({message:"is-connected",dsId:this.id}))}async disconnect(){return await this.checkInit(),this.dataSourceWorker.postMessageWithAck({message:"disconnect",dsId:this.id})}async onDisconnect(){}reset(){this.init=void 0}onRemovedDataSource(e){}onAddedDataSource(e){}};var T=class extends S{constructor(e,t){super(e,t),this.dataSynchronizer=void 0,this.properties.version=0}getTimeTopicId(){return"datasource-time-"+this.id}getMode(){return r}getStartTimeAsIsoDate(){return"now"}getStartTimeAsTimestamp(){return Date.now()}getEndTimeAsIsoDate(){return this.getMaxTimeAsTimestamp()}getEndTimeAsTimestamp(){return this.getMaxTimeAsTimestamp()}getMinTimeAsIsoDate(){return"now"}getMaxTimeAsIsoDate(){return"2055-01-01Z"}getMinTimeAsTimestamp(){return Date.now()}getMaxTimeAsTimestamp(){return new Date("2055-01-01Z").toISOString()}setMinTime(e){}setMaxTime(e){}setStartTimestamp(e){}setEndTimestamp(e){}getReplaySpeed(){return 1}setReplaySpeed(e){}setVersion(e){this.properties.version=e}async setDataSynchronizer(e){await this.checkInit();const t="data-synchronizer-"+e.id;return this.dataSynchronizer=e,this.properties.version=this.dataSynchronizer.version(),this.dataSourceWorker.postMessageWithAck({message:"topics",topics:{data:t,time:this.getTimeTopicId(),sync:e.getTimeTopicId()},dsId:this.id})}async removeDataSynchronizer(){return this.dataSourceWorker&&(this.dataSourceWorker.terminate(),this.dataSynchronizer=void 0),this.checkInit()}async disconnect(){return await this.checkInit(),this.dataSourceWorker.postMessageWithAck({message:"disconnect",dsId:this.id})}async doConnect(){return this.dataSourceWorker.postMessageWithAck({message:"connect",startTime:"now",version:this.version(),dsId:this.id})}async initDataSource(e){await super.initDataSource(e);const t={data:this.getTopicId(),time:this.getTimeTopicId()};return this.dataSynchronizer&&(t.sync=dataSynchronizer.getTimeTopicId()),this.dataSourceWorker.postMessageWithAck({message:"topics",topics:t,dsId:this.id}).then(()=>{new BroadcastChannel(this.getTimeTopicId()).onmessage=async e=>{await this.handleTimeMessage(e)}})}async handleTimeMessage(e){const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}version(){return this.properties.version}};var g=class extends S{constructor(e,t){super(e,t),this.setMinTime(t.startTime),this.setMaxTime(t.endTime),this.properties.startTimestamp=new Date(t.startTime).getTime(),this.properties.endTimestamp=new Date(t.endTime).getTime(),n(t,"Some properties must be defined"),this.dataSynchronizer=void 0,this.properties.version=0}getTimeTopicId(){return"datasource-time-"+this.id}getMode(){return this.properties.mode}getStartTimeAsIsoDate(){return new Date(this.getStartTimeAsTimestamp()).toISOString()}getStartTimeAsTimestamp(){return this.properties.startTimestamp}getEndTimeAsIsoDate(){return new Date(this.getEndTimeAsTimestamp()).toISOString()}getEndTimeAsTimestamp(){return this.properties.endTimestamp}getMinTimeAsIsoDate(){return new Date(this.getMinTimeAsTimestamp()).toISOString()}getMaxTimeAsIsoDate(){return new Date(this.getMaxTimeAsTimestamp()).toISOString()}getMinTimeAsTimestamp(){return this.properties.minTimestamp}getMaxTimeAsTimestamp(){return this.properties.maxTimestamp}async setMinTime(e){this.properties.minTimestamp=new Date(e).getTime(),await this.computeMinMax()}async setMaxTime(e){this.properties.maxTimestamp=new Date(e).getTime(),await this.computeMinMax()}async setStartTimestamp(e){this.properties.startTimestamp=e,await this.computeMinMax()}async setEndTimestamp(e){this.properties.endTimestamp=e,this.computeMinMax()}async setStartTime(e){await this.setStartTimestamp(new Date(e).getTime())}async setEndTime(e){await this.setEndTimestamp(new Date(e).getTime())}getReplaySpeed(){return this.properties.replaySpeed}setReplaySpeed(e){this.properties.replaySpeed=e}setVersion(e){this.properties.version=e}async setDataSynchronizer(e){await this.checkInit();const t="data-synchronizer-"+e.getId();return this.dataSynchronizer=e,this.properties.version=this.dataSynchronizer.version(),this.dataSourceWorker.postMessageWithAck({message:"topics",topics:{data:t,time:this.getTimeTopicId(),sync:e.getTimeTopicId()},dsId:this.id})}async removeDataSynchronizer(){this.dataSourceWorker&&(this.dataSourceWorker.terminate(),this.dataSynchronizer=void 0),this.init=void 0,this.dataSynchronizer=void 0,await this.checkInit()}async disconnect(){if(a(this.init))try{return this.dataSourceWorker.postMessageWithAck({message:"disconnect",dsId:this.id})}catch(e){console.error(e)}}async doConnect(){return this.dataSourceWorker.postMessageWithAck({message:"connect",startTime:this.getStartTimeAsIsoDate(),version:this.version(),dsId:this.id})}async initDataSource(e){await super.initDataSource(e);const t={data:this.getTopicId(),time:this.getTimeTopicId()};return this.dataSynchronizer&&(t.sync=dataSynchronizer.getTimeTopicId()),this.dataSourceWorker.postMessageWithAck({message:"topics",topics:t,dsId:this.id}).then(()=>{new BroadcastChannel(this.getTimeTopicId()).onmessage=async e=>{await this.handleTimeMessage(e)}})}async handleTimeMessage(e){const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}version(){return this.properties.version}computeMinMax(){this.properties.startTimestamp<this.properties.minTimestamp&&(this.properties.startTimestamp=this.properties.minTimestamp),this.properties.endTimestamp>this.properties.maxTimestamp&&(this.properties.endTimestamp=this.properties.maxTimestamp)}async setTimeRange(e=this.getStartTimeAsIsoDate(),t=this.getEndTimeAsIsoDate(),i=this.getReplaySpeed(),s=!1,r=this.getMode(),a=this.version()){return await this.checkInit(),a!==this.version()&&(this.properties.version=a),this.properties.startTimestamp=new Date(e).getTime(),this.properties.endTimestamp=new Date(t).getTime(),this.computeMinMax(),this.updateProperties({startTime:this.getStartTimeAsIsoDate(),endTime:this.getEndTimeAsIsoDate(),replaySpeed:i,reconnect:s,mode:r,version:a})}};var y=class{constructor(e,t){const i=o();this.timeSeriesRealtimeDataSource=new T(e,{id:i,...t}),this.timeSeriesReplayDataSource=new g(e,{id:i,...t}),this.setMode(t.mode)}async setMode(e){this.timeSeriesDataSource&&await this.timeSeriesDataSource.disconnect(),this.timeSeriesDataSource&&e===this.timeSeriesDataSource.getMode()||(this.timeSeriesDataSource=e===r?this.timeSeriesRealtimeDataSource:this.timeSeriesReplayDataSource,this.properties=this.timeSeriesDataSource.properties,this.id=this.timeSeriesDataSource.id,this.name=this.timeSeriesDataSource.name,this.properties.mode=e)}getTimeTopicId(){return this.timeSeriesDataSource.getTimeTopicId()}getMode(){return this.timeSeriesDataSource.getMode()}setVersion(e){this.timeSeriesDataSource.setVersion(e)}getStartTimeAsIsoDate(){return this.timeSeriesDataSource.getStartTimeAsIsoDate()}getStartTimeAsTimestamp(){return this.timeSeriesDataSource.getStartTimeAsTimestamp()}getEndTimeAsIsoDate(){return this.timeSeriesDataSource.getEndTimeAsIsoDate()}getEndTimeAsTimestamp(){return this.timeSeriesDataSource.getEndTimeAsTimestamp()}getMinTimeAsIsoDate(){return this.timeSeriesDataSource.getMinTimeAsIsoDate()}getMaxTimeAsIsoDate(){return this.timeSeriesDataSource.getMaxTimeAsIsoDate()}getMinTimeAsTimestamp(){return this.timeSeriesDataSource.getMinTimeAsTimestamp()}getMaxTimeAsTimestamp(){return this.timeSeriesDataSource.getMaxTimeAsTimestamp()}setMinTime(e){this.timeSeriesDataSource.setMinTime(e)}setMaxTime(e){this.timeSeriesDataSource.setMaxTime(e)}setStartTimestamp(e){this.timeSeriesDataSource.setStartTimestamp(e)}setEndTimestamp(e){this.timeSeriesDataSource.setEndTimestamp(e)}setStartTime(e){this.timeSeriesDataSource.setStartTime(e)}setEndTime(e){this.timeSeriesDataSource.setEndTime(e)}getReplaySpeed(){return this.timeSeriesDataSource.getReplaySpeed()}setReplaySpeed(e){this.timeSeriesDataSource.setReplaySpeed(e)}async setDataSynchronizer(e){return this.timeSeriesDataSource.setDataSynchronizer(e)}async removeDataSynchronizer(){return this.timeSeriesDataSource.removeDataSynchronizer()}async disconnect(){return this.timeSeriesDataSource.disconnect()}async doConnect(){return this.timeSeriesDataSource.doConnect()}async initDataSource(e){return this.timeSeriesDataSource.initDataSource(e)}version(){return this.timeSeriesDataSource.version()}async setTimeRange(e=this.getStartTimeAsIsoDate(),t=this.getEndTimeAsIsoDate(),i=this.getReplaySpeed(),s=!1,r=this.getMode(),a=this.version()){return this.timeSeriesDataSource.setTimeRange(e,t,i,s,r,a)}getId(){return this.timeSeriesDataSource.getId()}getName(){return this.timeSeriesDataSource.getName()}terminate(){this.timeSeriesDataSource.terminate()}getTopicId(){return this.timeSeriesDataSource.getTopicId()}subscribe(e,t){this.timeSeriesDataSource.subscribe(e,t)}async updateProperties(e){return this.timeSeriesDataSource.updateProperties(e)}async connect(){return this.timeSeriesDataSource.connect()}async checkInit(){return this.timeSeriesDataSource.checkInit()}async isConnected(){return this.timeSeriesDataSource.isConnected()}reset(){this.timeSeriesDataSource.reset()}onTimeChanged(e,t,i,s){}};var l=class extends y{constructor(e,t){super(e,{protocol:"ws",service:"SOS",timeShift:0,reconnectTimeout:5e3,reconnectRetry:10,tls:!1,type:"SosGetResult",mode:r,prefetchBatchSize:250,prefetchBatchDuration:5e3,...t})}};const D="data",M="master-time",I="status",A="time-changed";var f=i(1),v=i.n(f);var z=class{constructor(e,t){this.bufferingTime=1e3,this.id=e.id||o(),this.dataSources=e.dataSources||[],this.replaySpeed=e.replaySpeed||1,this.timerResolution=e.timerResolution||5,this.masterTimeRefreshRate=e.masterTimeRefreshRate||250,this.initialized=!1,this.timeSync=t,this.properties={},this.properties.replaySpeed=this.replaySpeed,this.properties.startTimestamp=void 0,this.properties.endTimestamp=void 0,this.properties.minTimestamp=void 0,this.properties.maxTimestamp=void 0,this.properties.version=0,a(e)&&(a(e.minTime)&&(this.minTimestamp=new Date(e.minTime).getTime()),a(e.maxTime)&&(this.maxTimestamp=new Date(e.maxTime).getTime())),this.computeMinMax()}getId(){return this.id}getTopicId(){return"data-synchronizer-"+this.id}getTimeTopicId(){return"data-synchronizer-time-"+this.id}getDataSources(){return this.dataSources}computeMinMax(){if(this.dataSources.length>0){let e=Number.MAX_VALUE,t=Number.MIN_VALUE;for(let i of this.dataSources){let s=i.getMinTimeAsTimestamp(),r=i.getMaxTimeAsTimestamp();s<e&&(e=s),r>t&&(t=r)}a(this.minTimestamp)&&this.minTimestamp>e&&(e=this.minTimestamp),a(this.maxTimestamp)&&this.maxTimestamp>t&&(t=this.maxTimestamp),this.properties.minTimestamp=e,this.properties.maxTimestamp=t}else{const e=new Date("1970-01-01T00:00:00Z").getTime(),t=new Date("2055-01-01T00:00:00Z").getTime();this.properties.minTimestamp=this.properties.startTimestamp=e,this.properties.maxTimestamp=this.properties.endTimestamp=t}}getStartTimeAsIsoDate(){return this.properties.startTimestamp?new Date(this.properties.startTimestamp).toISOString():this.getMinTimeAsIsoDate()}getStartTimeAsTimestamp(){return this.properties.startTimestamp}getEndTimeAsIsoDate(){return this.properties.endTimestamp?new Date(this.properties.endTimestamp).toISOString():this.getMaxTimeAsIsoDate()}getEndTimeAsTimestamp(){return this.properties.endTimestamp}getMinTimeAsIsoDate(){return new Date(this.properties.minTimestamp).toISOString()}getMinTimeAsTimestamp(){return this.properties.minTimestamp}getMaxTimeAsIsoDate(){return new Date(this.properties.maxTimestamp).toISOString()}getMaxTimeAsTimestamp(){return this.properties.maxTimestamp}async setStartTime(e,t=!1){this.properties.startTimestamp=new Date(e).getTime(),t||await this.updateAlgo()}async setEndTime(e,t=!1){this.properties.endTimestamp=new Date(e).getTime(),t||await this.updateAlgo()}async setMinTime(e,t=!1){this.minTimestamp=new Date(e).getTime(),this.computeMinMax(),this.timeChanged()}async setMaxTime(e,t=!1){this.maxTimestamp=new Date(e).getTime(),this.computeMinMax(),this.timeChanged()}getReplaySpeed(){return this.replaySpeed}terminate(){null!==this.synchronizerWorker&&(this.synchronizerWorker.terminate(),this.synchronizerWorker=null);for(let e of this.dataSources)e.terminate()}getMode(){return s}async initDataSources(){try{const e=[];for(let t of this.dataSources){const i=await this.createDataSourceForWorker(t);e.push(i)}return this.synchronizerWorker=new m(new v.a),this.synchronizerWorker.postMessageWithAck({message:"init",dataSources:e,replaySpeed:this.replaySpeed,timerResolution:this.timerResolution,masterTimeRefreshRate:this.masterTimeRefreshRate,startTimestamp:this.getStartTimeAsTimestamp(),endTimestamp:this.getEndTimeAsTimestamp(),mode:this.getMode(),version:this.version(),topics:{data:this.getTopicId(),time:this.getTimeTopicId()}}).then(()=>{this.initialized=!0})}catch(e){console.error(e)}}async createDataSourceForWorker(e){const t={bufferingTime:e.properties.bufferingTime||0,timeOut:e.properties.timeOut||0,id:e.getId(),name:e.getName(),minTimestamp:e.getMinTimeAsTimestamp(),maxTimestamp:e.getMaxTimeAsTimestamp()};try{await e.setDataSynchronizer(this.timeSync),e.properties.replaySpeed=this.replaySpeed}catch(e){throw console.error("Cannot set the synchronizer to this DataSource",e),e}return t}timeChanged(){this.onTimeChanged(this.getMinTimeAsTimestamp(),this.getMaxTimeAsTimestamp(),this.getStartTimeAsTimestamp(),this.getEndTimeAsTimestamp())}async addDataSource(e){if(this.dataSources.push(e),this.computeMinMax(),this.initialized){e.setStartTime(this.getStartTimeAsIsoDate()),e.setEndTime(this.getEndTimeAsIsoDate());const t=await this.createDataSourceForWorker(e);return this.synchronizerWorker.postMessageWithAck({message:"add",dataSources:[t]}).then(async()=>{await this.isConnected()&&await e.connect(),this.onAddedDataSource(e.id),this.timeChanged()})}console.log(`DataSynchronizer not initialized yet, add DataSource ${e.id} as it`),this.timeChanged(),this.onAddedDataSource(e.id)}async removeDataSource(e){if(this.dataSources=this.dataSources.filter(t=>t.id!==e.getId()),0===this.dataSources.length&&await this.reset(),this.computeMinMax(),this.initialized)return await e.disconnect(),await e.removeDataSynchronizer(),this.synchronizerWorker.postMessageWithAck({message:"remove",dataSourceIds:[e.getId()],startTimestamp:this.getStartTimeAsTimestamp(),endTimestamp:this.getEndTimeAsTimestamp()}).then(()=>{this.timeChanged(),this.onRemovedDataSource(e.id)});console.log(`DataSynchronizer not initialized yet, remove DataSource ${e.id} as it`),await e.removeDataSynchronizer(),this.timeChanged(),this.onRemovedDataSource(e.id)}async push(e,t){if(this.synchronizerWorker)return this.synchronizerWorker.postMessageWithAck({type:"data",dataSourceId:e,data:t})}version(){return this.properties.version}async connect(){if(0!==this.dataSources.length){await this.checkInit();const e=await this.isConnected();return e||this.doConnect()}}async checkInit(){return a(this.init)||(this.init=this.initDataSources()),this.init}checkStartEndTime(){this.properties.startTimestamp||(this.properties.startTimestamp=this.properties.minTimestamp),this.properties.endTimestamp||(this.properties.endTimestamp=this.properties.maxTimestamp)}async doConnect(){this.checkStartEndTime(),await this.updateAlgo();for(let e of this.dataSources)await e.setTimeRange(this.getStartTimeAsIsoDate(),this.getEndTimeAsIsoDate(),this.getReplaySpeed(),!0);return this.synchronizerWorker.postMessageWithAck({message:"connect",version:this.version()})}async disconnect(){await this.reset();const e=[];for(let t of this.dataSources)e.push(t.disconnect());return Promise.all(e)}async setReplaySpeed(e){return this.replaySpeed=e,this.properties.replaySpeed=e,this.synchronizerWorker.postMessageWithAck({message:"replay-speed",replaySpeed:e})}async setTimeRange(e=this.getStartTimeAsIsoDate(),t=this.getEndTimeAsIsoDate(),i=this.getReplaySpeed(),s=!1){await this.disconnect(),this.incVersion(),this.replaySpeed=i,await this.setStartTime(e,!1),await this.setEndTime(t,!1);const r=[];for(let e of this.dataSources)r.push(e.setTimeRange(this.getStartTimeAsIsoDate(),this.getEndTimeAsIsoDate(),this.getReplaySpeed(),!1,this.getMode(),this.version()));return Promise.all(r)}setStartTimestamp(e){this.properties.startTimestamp=e}async updateAlgo(){for(let e of this.dataSources)e.setStartTimestamp(this.getStartTimeAsTimestamp()),e.setEndTimestamp(this.getEndTimeAsTimestamp());this.computeMinMax();const e=[];for(let t of this.dataSources){const i={bufferingTime:t.properties.bufferingTime||0,timeOut:t.properties.timeOut||0,id:t.getId(),name:t.getName(),minTimestamp:t.getMinTimeAsTimestamp(),maxTimestamp:t.getMaxTimeAsTimestamp()};e.push(i)}return this.synchronizerWorker.postMessageWithAck({message:"time-range",mode:this.getMode(),replaySpeed:this.getReplaySpeed(),startTimestamp:this.getStartTimeAsTimestamp(),endTimestamp:this.getEndTimeAsTimestamp(),version:this.version(),dataSources:e})}async updateProperties(e){for(let t of this.dataSources)t.updateProperties(e)}resetTimes(){this.computeMinMax()}async reset(){return await this.checkInit(),this.synchronizerWorker.postMessageWithAck({message:"reset"}).then(()=>this.resetTimes())}async getCurrentTime(){return this.synchronizerWorker.postMessageWithAck({message:"current-time"})}async isConnected(){return 0!==this.dataSources.length&&(await this.checkInit(),this.synchronizerWorker.postMessageWithAck({message:"is-connected"}).then(e=>e.data))}incVersion(){this.properties.version++}onTimeChanged(e,t,i,s){}onRemovedDataSource(e){}onAddedDataSource(e){}},k=i(2),w=i.n(k);var x=class{constructor(e,t){this.bufferingTime=1e3,this.id=e.id||o(),this.dataSources=e.dataSources||[],this.timerResolution=e.timerResolution||5,this.masterTimeRefreshRate=e.masterTimeRefreshRate||250,this.initialized=!1,this.timeSync=t,this.properties={},this.properties.version=0}getId(){return this.id}getDataSources(){return this.dataSources}getTopicId(){return"data-synchronizer-"+this.id}getTimeTopicId(){return"data-synchronizer-time-"+this.id}setStartTimestamp(e){this.properties.startTimestamp=e}terminate(){null!==this.synchronizerWorker&&(this.synchronizerWorker.terminate(),this.synchronizerWorker=null);for(let e of this.dataSources)e.terminate()}getMode(){return r}async initDataSources(){try{const e=[];for(let t of this.dataSources){const i=await this.createDataSourceForWorker(t);e.push(i)}this.synchronizerWorker=new m(new w.a),this.synchronizerWorker.postMessageWithAck({message:"init",dataSources:e,timerResolution:this.timerResolution,masterTimeRefreshRate:this.masterTimeRefreshRate,mode:r,version:this.version(),topics:{data:this.getTopicId(),time:this.getTimeTopicId()}}).then(()=>{this.initialized=!0})}catch(e){console.log(e)}}async createDataSourceForWorker(e){const t={bufferingTime:e.properties.bufferingTime||0,timeOut:e.properties.timeOut||0,id:e.id,name:e.name};try{await e.setDataSynchronizer(this.timeSync)}catch(e){throw console.error("Cannot set the synchronizer to this DataSource",e),e}return t}async addDataSource(e){if(this.dataSources.push(e),this.initialized){const t=await this.createDataSourceForWorker(e);this.synchronizerWorker.postMessageWithAck({message:"add",dataSources:[t]}).then(()=>{this.onAddedDataSource(e.id)})}else console.log(`DataSynchronizer not initialized yet, add DataSource ${e.id} as it`)}async removeDataSource(e){await e.removeDataSynchronizer(),this.dataSources=this.dataSources.filter(t=>t.id!==e.getId()),0===this.dataSources.length&&await this.reset(),this.initialized?this.synchronizerWorker.postMessageWithAck({message:"remove",dataSourceIds:[e.getId()]}).then(()=>{this.onRemovedDataSource(e.id)}):console.log(`DataSynchronizer not initialized yet, remove DataSource ${e.id} as it`)}async push(e,t){if(null!==this.synchronizerWorker)return this.synchronizerWorker.postMessageWithAck({type:"data",dataSourceId:e,data:t})}version(){return this.properties.version}async connect(){return await this.checkInit(),this.doConnect()}async checkInit(){return a(this.init)||(this.init=this.initDataSources()),this.init}async doConnect(){for(let e of this.dataSources)await e.connect();return this.synchronizerWorker.postMessageWithAck({message:"connect",version:this.version()})}async disconnect(){await this.reset();const e=[];for(let t of this.dataSources)e.push(t.disconnect());return Promise.all(e)}async updateProperties(e){for(let t of this.dataSources)t.updateProperties(e)}async reset(){return await this.checkInit(),this.synchronizerWorker.postMessageWithAck({message:"reset"})}async getCurrentTime(){return this.synchronizerWorker.postMessageWithAck({message:"current-time"})}async isConnected(){return 0!==this.dataSources.length&&(await this.checkInit(),this.synchronizerWorker.postMessageWithAck({message:"is-connected"}).then(e=>e.data))}setMinTime(e){}setMaxTime(e){}incVersion(){this.properties.version++}onTimeChanged(e,t){}onRemovedDataSource(e){}onAddedDataSource(e){}};var W=class{constructor(e){const t=e.id||o();this.dataSynchronizerReplay=new z({...e,id:t+"-replay"},this),this.dataSynchronizerRt=new x({...e,id:t+"-realtime"},this),this.broadcastChannels=[],this.setMode(e.mode||s).then(()=>{this.dataSynchronizer.onTimeChanged=(e,t,i,s)=>this.onTimeChanged(e,t,i,s),this.dataSynchronizer.onAddedDataSource=e=>this.onAddedDataSource(e),this.dataSynchronizer.onRemovedDataSource=e=>this.onRemovedDataSource(e)})}getId(){return this.id}async setMode(e){this.dataSynchronizer&&await this.dataSynchronizer.disconnect(),e===s?this.dataSynchronizer=this.dataSynchronizerReplay:e===r&&(this.dataSynchronizer=this.dataSynchronizerRt),this.id=this.dataSynchronizer.id;for(let e of this.broadcastChannels)e.close();this.initEventSubscription(),this.broadcastChannels=[];for(let t of this.dataSynchronizer.getDataSources())await t.setMode(e);this.onChangedMode(e)}initEventSubscription(){this.eventSubscriptionMap={},this.broadcastChannels.push(new BroadcastChannel(this.getTopicId()).onmessage=e=>{const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}),this.broadcastChannels.push(new BroadcastChannel(this.getTimeTopicId()).onmessage=e=>{e.data.type===M&&this.dataSynchronizer.setStartTimestamp(e.data.timestamp);const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)})}subscribe(e,t){for(let i=0;i<t.length;i++)t[i]in this.eventSubscriptionMap||(this.eventSubscriptionMap[t[i]]=[]),this.eventSubscriptionMap[t[i]].push(e)}getDataSources(){return this.dataSynchronizer.getDataSources()}getTopicId(){return this.dataSynchronizer.getTopicId()}getTimeTopicId(){return this.dataSynchronizer.getTimeTopicId()}getStartTimeAsIsoDate(){return this.dataSynchronizer.getStartTimeAsIsoDate()}getStartTimeAsTimestamp(){return this.dataSynchronizer.getStartTimeAsTimestamp()}getEndTimeAsIsoDate(){return this.dataSynchronizer.getEndTimeAsIsoDate()}getEndTimeAsTimestamp(){return this.dataSynchronizer.getEndTimeAsTimestamp()}getMinTimeAsIsoDate(){return this.dataSynchronizer.getMinTimeAsIsoDate()}getMinTimeAsTimestamp(){return this.dataSynchronizer.getMinTimeAsTimestamp()}getMaxTimeAsIsoDate(){return this.dataSynchronizer.getMinTimeAsTimestamp()}getMaxTimeAsTimestamp(){return this.dataSynchronizer.getMaxTimeAsTimestamp()}getReplaySpeed(){return this.dataSynchronizer.getReplaySpeed()}terminate(){return this.dataSynchronizer.terminate()}getMode(){return this.dataSynchronizer.getMode()}async initDataSources(){return this.dataSynchronizer.initDataSources()}async addDataSource(e){return await this.dataSynchronizerRt.addDataSource(e),this.dataSynchronizerReplay.addDataSource(e)}async removeDataSource(e){return await this.dataSynchronizerRt.removeDataSource(e),this.dataSynchronizerReplay.removeDataSource(e)}async push(e,t){return this.dataSynchronizer.push(e,t)}version(){return this.dataSynchronizer.version()}async connect(){await this.dataSynchronizer.connect()}async checkInit(){return this.dataSynchronizer.checkInit()}async doConnect(){return this.dataSynchronizer.doConnect()}async disconnect(){return this.dataSynchronizer.disconnect()}async setReplaySpeed(e){return this.dataSynchronizer.setReplaySpeed(e)}async setTimeRange(e=this.getStartTimeAsIsoDate(),t=this.getEndTimeAsIsoDate(),i=this.getReplaySpeed(),s=!1){return this.dataSynchronizer.setTimeRange(e,t,i,s)}async updateProperties(e){return this.dataSynchronizer.updateProperties(e)}async reset(){return this.dataSynchronizer.reset()}async getCurrentTime(){return this.dataSynchronizer.getCurrentTime()}setMinTime(e){this.dataSynchronizer.setMinTime(e)}setMaxTime(e){this.dataSynchronizer.setMaxTime(e)}async isConnected(){return this.dataSynchronizer.isConnected()}minMaxChanged(e=!1){e&&(this.dataSynchronizerReplay.properties.startTimestamp=void 0,this.dataSynchronizerReplay.properties.endTimestamp=void 0),this.dataSynchronizerReplay.computeMinMax(),this.dataSynchronizerReplay.timeChanged()}onTimeChanged(e,t){}onRemovedDataSource(e){}onAddedDataSource(e){}onChangedMode(e){}};const R=new l("android-GPS",{endpointUrl:"sensiasoft.net/sensorhub/sos",offeringID:"urn:mysos:solo:nav2",observedProperty:"http://www.opengis.net/def/property/OGC/0/PlatformLocation",startTime:"2015-12-19T21:04:29.231Z",endTime:"2015-12-19T21:09:19.675Z",mode:s,tls:!0}),b=new W({replaySpeed:3,startTime:"2015-12-19T21:04:29.231Z",endTime:"2015-12-19T21:09:19.675Z",dataSources:[R]}),C=document.getElementById("datasource-gps");R.subscribe(e=>C.innerText=JSON.stringify(e,null,2),[D,A,I]),b.connect()}]);