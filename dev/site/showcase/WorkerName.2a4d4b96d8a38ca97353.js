!function(t){var e={};function a(s){if(e[s])return e[s].exports;var o=e[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=t,a.c=e,a.d=function(t,e,s){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)a.d(s,o,function(e){return t[e]}.bind(null,o));return s},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=0)}([function(t,e,a){"use strict";a.r(e);const s="data",o="last-time",r="master-time",n="status",i="time-changed",d="closed";Math.pow(2,53);function c(t){return null!=t}const u="disconnected";var l=class{constructor(t,e=5){this.dataSourceMap={},this.tsRun=void 0,this.timerResolution=e,this.interval=null,this.datasources=[];for(let e of t)this.addDataSource(e)}removeDataSource(t){this.datasources=this.datasources.filter(e=>e.id!==t),delete this.dataSourceMap[t]}push(t,e){}getCurrentTimestamp(){return this.tsRun}processData(){let t,e=-1,a=performance.now();for(let a in this.dataSourceMap)t=this.dataSourceMap[a],t.dataBuffer.length>0&&(e=-1===e||t.dataBuffer[0].data.timestamp<e?t.dataBuffer[0].data.timestamp:e);this.interval=setInterval(()=>{for(;this.computeNextData(e,a););},this.timerResolution),console.warn(`Started Algorithm ${this.constructor.name} with  tsRef=${new Date(e).toISOString()}`)}computeNextData(t,e){throw Error("Should be overridden")}addDataSource(t){throw Error("Should be overridden")}checkVersion(t,e){throw Error("Should be overridden")}onData(t,e){}checkStart(){}setStatus(t,e){throw Error("Should be overridden")}close(){c(this.interval)&&(clearInterval(this.interval),this.interval=void 0),console.log("Data synchronizer terminated successfully"),this.onClose()}onStart(){}onClose(){}};var f=class extends l{push(t,e){if(0===e.length)return;const a=this.dataSourceMap[t],s=e[e.length-1];if(!this.checkVersion(a,s))return;let o=0;this.tsRun>0&&(o=this.tsRun-s.data.timestamp),a.latency=o>a.latency?o:(a.latency+o)/2,a.dataBuffer.push(...e),c(this.interval)||this.processData()}computeNextData(t,e){let a,s=null,o=0,r=0;for(let t in this.dataSourceMap)if(a=this.dataSourceMap[t],a.latency>0){let t=Math.min(a.latency,a.timeOut);o=t>o?t:o,r=a.latency<r?a.latency:r}const n=performance.now()-e;for(let e in this.dataSourceMap)if(a=this.dataSourceMap[e],this.tsRun=t+n,a.dataBuffer.length>0){a.dataBuffer[0].data.timestamp-t<=n-o&&(s=null===s?a:s.dataBuffer[0].data.timestamp<a.dataBuffer[0].data.timestamp?s:a)}if(null!==s){let t=s.dataBuffer.shift();return t["@latency"]=a.latency-r,this.onData(s.id,t),!0}return!1}addDataSource(t){this.dataSourceMap[t.id]={timeOut:t.timeOut||0,dataBuffer:[],id:t.id,timedOut:!1,name:t.name||t.id,latency:0,status:u,version:void 0},this.datasources.push(t)}checkVersion(t,e){return t.status!==u||(t.status!==u||t.version===e.version)&&void 0}setStatus(t,e){t in this.dataSourceMap&&(this.dataSourceMap[t].status=e,console.warn(e+" DataSource "+t+" from the synchronizer "))}reset(){this.tsRun=void 0,console.log("reset synchronizer algo"),this.close();for(let t in this.dataSourceMap)this.resetDataSource(t)}resetDataSource(t){const e=this.dataSourceMap[t];e.dataBuffer=[],e.startBufferingTime=-1,e.latency=0,e.status=u,e.version=void 0}};const h={};let m,p=!1,S=null,g=void 0;const v={};let y,M,w,D,b,B,I,R=null,O=void 0,x=-1,C=-1;function j(){clearInterval(O),O=void 0,null!==m&&m.reset(),R.postMessage({type:i}),R.postMessage({type:d}),S.postMessage({type:n,status:"not_running"})}function k(t){for(let e of t)T(e)}function T(t){m.addDataSource(t),h[t.id]=new BroadcastChannel("datasource-data-"+t.id),t.id in v||(v[t.id]=t)}async function _(t){await m.removeDataSource(t),console.log("deleting BC for datasource "+t),delete h[t],delete v[t]}function z(){c(O)||E(B)}async function P(t,e){e.version===C?(g={dataSourceId:t,dataBlock:e},h[t].postMessage({values:[e],dataSourceId:t,type:s})):console.error("version are different:",e.version,C)}function E(t){c(O)||(O=setInterval(()=>{I=m.getCurrentTimestamp(),c(I)&&R.postMessage({timestamp:I,type:r}),c(g)&&(w=g.dataBlock.data.timestamp,D=g.dataSourceId,(-1!==w&&-1===x||-1!==x&&w!==x)&&R.postMessage({timestamp:w,dataSourceId:D,type:o}),x=w)},t),S.postMessage({type:n,status:"running"}))}self.onmessage=async t=>{c(b)&&await b,b=async function(t){return new Promise(async(e,a)=>{try{let a=!0,i=void 0;"init"===t.data.message?(C=t.data.version,m=new f(t.data.dataSources,t.data.replaySpeed,t.data.timerResolution),m.onData=P,p=!0,k(t.data.dataSources),M=t.data.topics.data,y=t.data.topics.time,o=M,r=y,console.log("listen on topic ",o),S=new BroadcastChannel(o),S.onmessage=async t=>{if(z(),t.data.type===s)m.push(t.data.dataSourceId,t.data.values);else if(t.data.type===n){const e=t.data.dataSourceId;m.setStatus(e,t.data.status),e in h&&(console.log(v[e].name+": status="+t.data.status),h[e].postMessage(t.data))}},R=new BroadcastChannel(r),B=t.data.masterTimeRefreshRate):"add"===t.data.message&&t.data.dataSources?(console.log("Add datasource to synchronizer.."),k(t.data.dataSources)):"connect"===t.data.message?(E(B),m.checkStart(),C=t.data.version):"is-connected"===t.data.message?i={message:"is-connected",data:c(O)}:"remove"===t.data.message&&t.data.dataSourceIds?(console.log("Remove datasource from synchronizer.."),await async function(t){for(let e of t)await _(e)}(t.data.dataSourceIds)):"current-time"===t.data.message?i={message:"current-time",data:m.getCurrentTimestamp()}:"reset"===t.data.message?j():"replay-speed"===t.data.message?null!==m&&j():"data"===t.data.message?(z(),null!==m&&m.push(t.data.dataSourceId,t.data.data)):a=!1,a&&self.postMessage({message:t.data.message,data:i,messageId:t.data.messageId}),e()}catch(t){a(t)}var o,r})}(t)},self.onclose=function(){m.close(),console.log("Data Synchronizer has been terminated successfully")}}]);