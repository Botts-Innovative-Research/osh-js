!function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(e,t,i){e.exports=function(){return new Worker(i.p+"WorkerName.41d18668226e2052b8ce.js")}},function(e,t,i){"use strict";i.r(t);const s="realTime";Math.pow(2,53);function r(e){return null!=e}function a(e,t="letiable"){if(!r(e))throw t+" must be defined";return e}function n(){return"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){let t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}var o=i(0),m=i.n(o);var c=class{constructor(e,t){this.id=t.id||"DataSource-"+n(),this.name=e,this.properties=t,this.eventSubscriptionMap={},this.init=void 0,this.messagesMap={},this.mode=s,r(t.mode)&&(this.mode=t.mode)}getId(){return this.id}getName(){return this.name}terminate(){null!==this.dataSourceWorker&&this.dataSourceWorker.terminate()}getTopicId(){return"datasource-data-"+this.id}subscribe(e,t){for(let i=0;i<t.length;i++)t[i]in this.eventSubscriptionMap||(this.eventSubscriptionMap[t[i]]=[]),this.eventSubscriptionMap[t[i]].push(e)}async createWorker(e){return new m.a}async updateProperties(e){return this.properties={...this.properties,...e},new Promise(t=>{this.postMessage({message:"update-properties",data:e},t)})}async connect(){await this.checkInit(),await this.doConnect()}async initDataSource(e=this.properties){return new Promise(async(t,i)=>{this.dataSourceWorker=await this.createWorker(this.properties),this.handleWorkerMessage(),this.postMessage({message:"init",id:this.id,properties:e,topics:{data:this.getTopicId()}},async e=>{new BroadcastChannel(this.getTopicId()).onmessage=async e=>{await this.handleMessage(e)},t(e)})})}async handleMessage(e){const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}async checkInit(){return new Promise(async(e,t)=>{r(this.init)||(this.init=this.initDataSource()),await this.init,e()})}async doConnect(){return new Promise(async e=>{this.postMessage({message:"connect"},e)})}async isConnected(){return new Promise(async e=>{this.init?(await this.checkInit(),this.postMessage({message:"is-connected"},e)):e(!1)})}async disconnect(){return new Promise(async e=>{await this.checkInit(),this.postMessage({message:"disconnect"},e)})}postMessage(e,t){const i=n();this.dataSourceWorker.postMessage({...e,messageId:i}),r(t)&&(this.messagesMap[i]=t)}handleWorkerMessage(){this.dataSourceWorker.onmessage=e=>{const t=e.data.messageId;t in this.messagesMap&&(this.messagesMap[t](e.data.data),delete this.messagesMap[t])}}async onDisconnect(){}reset(){this.init=void 0}onRemovedDataSource(e){}onAddedDataSource(e){}};var p=class extends c{constructor(e,t){super(e,t),this.dataSynchronizer=void 0,this.properties.version=0}getTimeTopicId(){return"datasource-time-"+this.id}getMode(){return s}getStartTimeAsIsoDate(){return"now"}getStartTimeAsTimestamp(){return Date.now()}getEndTimeAsIsoDate(){return this.getMaxTimeAsTimestamp()}getEndTimeAsTimestamp(){return this.getMaxTimeAsTimestamp()}getMinTimeAsIsoDate(){return"now"}getMaxTimeAsIsoDate(){return"2055-01-01Z"}getMinTimeAsTimestamp(){return Date.now()}getMaxTimeAsTimestamp(){return new Date("2055-01-01Z").toISOString()}setMinTime(e){}setMaxTime(e){}setStartTimestamp(e){}setEndTimestamp(e){}getReplaySpeed(){return 1}setReplaySpeed(e){}setVersion(e){this.properties.version=e}async setDataSynchronizer(e){return new Promise(async(t,i)=>{await this.checkInit();const s="data-synchronizer-"+e.id;this.dataSynchronizer=e,this.properties.version=this.dataSynchronizer.version(),this.postMessage({message:"topics",topics:{data:s,time:this.getTimeTopicId(),sync:e.getTimeTopicId()}},()=>t())})}async removeDataSynchronizer(){this.dataSourceWorker&&(this.dataSourceWorker.terminate(),this.dataSynchronizer=void 0),await this.checkInit()}async disconnect(){return new Promise(async e=>{await this.checkInit(),this.postMessage({message:"disconnect"},e)})}async doConnect(){return new Promise(async e=>{this.postMessage({message:"connect",startTime:"now",version:this.version()},e)})}async initDataSource(e){return await super.initDataSource(e),new Promise(async(e,t)=>{const i={data:this.getTopicId(),time:this.getTimeTopicId()};this.dataSynchronizer&&(i.sync=dataSynchronizer.getTimeTopicId()),this.postMessage({message:"topics",topics:i},async()=>{new BroadcastChannel(this.getTimeTopicId()).onmessage=async e=>{await this.handleTimeMessage(e)},e()})})}async handleTimeMessage(e){const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}version(){return this.properties.version}};var h=class extends c{constructor(e,t){super(e,t),"minTime"in t?this.properties.minTimestamp=new Date(t.minTime).getTime():this.setMinTime(t.startTime),"maxTime"in t?this.properties.maxTimestamp=new Date(t.maxTime).getTime():this.setMaxTime(t.endTime),this.properties.startTimestamp=new Date(t.startTime).getTime(),this.properties.endTimestamp=new Date(t.endTime).getTime(),a(t,"Some properties must be defined"),this.dataSynchronizer=void 0,this.properties.version=0}getTimeTopicId(){return"datasource-time-"+this.id}getMode(){return this.properties.mode}getStartTimeAsIsoDate(){return new Date(this.getStartTimeAsTimestamp()).toISOString()}getStartTimeAsTimestamp(){return this.properties.startTimestamp}getEndTimeAsIsoDate(){return new Date(this.getEndTimeAsTimestamp()).toISOString()}getEndTimeAsTimestamp(){return this.properties.endTimestamp}getMinTimeAsIsoDate(){return new Date(this.getMinTimeAsTimestamp()).toISOString()}getMaxTimeAsIsoDate(){return new Date(this.getMaxTimeAsTimestamp()).toISOString()}getMinTimeAsTimestamp(){return this.properties.minTimestamp}getMaxTimeAsTimestamp(){return this.properties.maxTimestamp}async setMinTime(e){this.properties.minTimestamp=new Date(e).getTime(),await this.computeMinMax()}async setMaxTime(e){this.properties.maxTimestamp=new Date(e).getTime(),await this.computeMinMax()}async setStartTimestamp(e){this.properties.startTimestamp=e,await this.computeMinMax()}async setEndTimestamp(e){this.properties.endTimestamp=e,this.computeMinMax()}async setStartTime(e){await this.setStartTimestamp(new Date(e).getTime())}async setEndTime(e){await this.setEndTimestamp(new Date(e).getTime())}getReplaySpeed(){return this.properties.replaySpeed}setReplaySpeed(e){this.properties.replaySpeed=e}setVersion(e){this.properties.version=e}async setDataSynchronizer(e){return new Promise(async(t,i)=>{await this.checkInit();const s="data-synchronizer-"+e.getId();this.dataSynchronizer=e,this.properties.version=this.dataSynchronizer.version(),this.postMessage({message:"topics",topics:{data:s,time:this.getTimeTopicId(),sync:e.getTimeTopicId()}},()=>t())})}async removeDataSynchronizer(){this.dataSourceWorker&&(this.dataSourceWorker.terminate(),this.dataSynchronizer=void 0),this.init=void 0,this.dataSynchronizer=void 0,await this.checkInit()}async disconnect(){if(r(this.init))return new Promise(async e=>{try{this.postMessage({message:"disconnect"},e)}catch(e){console.error(e)}})}async doConnect(){return new Promise(async e=>{this.postMessage({message:"connect",startTime:this.getStartTimeAsIsoDate(),version:this.version()},e)})}async initDataSource(e){return await super.initDataSource(e),new Promise(async(e,t)=>{const i={data:this.getTopicId(),time:this.getTimeTopicId()};this.dataSynchronizer&&(i.sync=dataSynchronizer.getTimeTopicId()),this.postMessage({message:"topics",topics:i},async()=>{new BroadcastChannel(this.getTimeTopicId()).onmessage=async e=>{await this.handleTimeMessage(e)},e()})})}async handleTimeMessage(e){const t=e.data.type;if(t in this.eventSubscriptionMap)for(let i=0;i<this.eventSubscriptionMap[t].length;i++)this.eventSubscriptionMap[t][i](e.data)}version(){return this.properties.version}computeMinMax(){this.properties.startTimestamp<this.properties.minTimestamp&&(this.properties.startTimestamp=this.properties.minTimestamp),this.properties.endTimestamp>this.properties.maxTimestamp&&(this.properties.endTimestamp=this.properties.maxTimestamp)}async setTimeRange(e=this.getStartTimeAsIsoDate(),t=this.getEndTimeAsIsoDate(),i=this.getReplaySpeed(),s=!1,r=this.getMode(),a=this.version()){return await this.checkInit(),a!==this.version()&&(this.properties.version=a),this.properties.startTimestamp=new Date(e).getTime(),this.properties.endTimestamp=new Date(t).getTime(),this.computeMinMax(),this.updateProperties({startTime:this.getStartTimeAsIsoDate(),endTime:this.getEndTimeAsIsoDate(),replaySpeed:i,reconnect:s,mode:r,version:a})}};var u=class{constructor(e,t){const i=n();this.timeSeriesRealtimeDataSource=new p(e,{id:i,...t}),this.timeSeriesReplayDataSource=new h(e,{id:i,...t}),this.setMode(t.mode)}async setMode(e){this.timeSeriesDataSource&&await this.timeSeriesDataSource.disconnect(),this.timeSeriesDataSource&&e===this.timeSeriesDataSource.getMode()||(this.timeSeriesDataSource=e===s?this.timeSeriesRealtimeDataSource:this.timeSeriesReplayDataSource,this.properties=this.timeSeriesDataSource.properties,this.id=this.timeSeriesDataSource.id,this.name=this.timeSeriesDataSource.name,this.properties.mode=e)}getTimeTopicId(){return this.timeSeriesDataSource.getTimeTopicId()}getMode(){return this.timeSeriesDataSource.getMode()}setVersion(e){this.timeSeriesDataSource.setVersion(e)}getStartTimeAsIsoDate(){return this.timeSeriesDataSource.getStartTimeAsIsoDate()}getStartTimeAsTimestamp(){return this.timeSeriesDataSource.getStartTimeAsTimestamp()}getEndTimeAsIsoDate(){return this.timeSeriesDataSource.getEndTimeAsIsoDate()}getEndTimeAsTimestamp(){return this.timeSeriesDataSource.getEndTimeAsTimestamp()}getMinTimeAsIsoDate(){return this.timeSeriesDataSource.getMinTimeAsIsoDate()}getMaxTimeAsIsoDate(){return this.timeSeriesDataSource.getMaxTimeAsIsoDate()}getMinTimeAsTimestamp(){return this.timeSeriesDataSource.getMinTimeAsTimestamp()}getMaxTimeAsTimestamp(){return this.timeSeriesDataSource.getMaxTimeAsTimestamp()}setMinTime(e){this.timeSeriesDataSource.setMinTime(e)}setMaxTime(e){this.timeSeriesDataSource.setMaxTime(e)}setStartTimestamp(e){this.timeSeriesDataSource.setStartTimestamp(e)}setEndTimestamp(e){this.timeSeriesDataSource.setEndTimestamp(e)}setStartTime(e){this.timeSeriesDataSource.setStartTime(e)}setEndTime(e){this.timeSeriesDataSource.setEndTime(e)}getReplaySpeed(){return this.timeSeriesDataSource.getReplaySpeed()}setReplaySpeed(e){this.timeSeriesDataSource.setReplaySpeed(e)}async setDataSynchronizer(e){return this.timeSeriesDataSource.setDataSynchronizer(e)}async removeDataSynchronizer(){return this.timeSeriesDataSource.removeDataSynchronizer()}async disconnect(){return this.timeSeriesDataSource.disconnect()}async doConnect(){return this.timeSeriesDataSource.doConnect()}async initDataSource(e){return this.timeSeriesDataSource.initDataSource(e)}version(){return this.timeSeriesDataSource.version()}async setTimeRange(e=this.getStartTimeAsIsoDate(),t=this.getEndTimeAsIsoDate(),i=this.getReplaySpeed(),s=!1,r=this.getMode(),a=this.version()){return this.timeSeriesDataSource.setTimeRange(e,t,i,s,r,a)}getId(){return this.timeSeriesDataSource.getId()}getName(){return this.timeSeriesDataSource.getName()}terminate(){this.timeSeriesDataSource.terminate()}getTopicId(){return this.timeSeriesDataSource.getTopicId()}subscribe(e,t){this.timeSeriesDataSource.subscribe(e,t)}async updateProperties(e){return this.timeSeriesDataSource.updateProperties(e)}async connect(){return this.timeSeriesDataSource.connect()}async checkInit(){return this.timeSeriesDataSource.checkInit()}async isConnected(){return this.timeSeriesDataSource.isConnected()}reset(){this.timeSeriesDataSource.reset()}onTimeChanged(e,t,i,s){}};let d=new class extends u{constructor(e,t){super(e,{reconnectTimeout:5e3,reconnectRetry:10,startTime:"now",endTime:"2055-01-01T00:00:00Z",tls:!1,responseFormat:"application/om+json",protocol:"http",type:"SweApiStream",mode:s,prefetchBatchSize:250,prefetchBatchDuration:5e3,connectorOpts:{},...t})}}("android-GPS",{endpointUrl:"api.georobotix.io/ogc/t18/api",resource:"/datastreams/fled6eics1cl4/observations",tls:!0,protocol:"mqtt",mqttOpts:{prefix:"/api",endpointUrl:"api.georobotix.io:443/ogc/t18"},mode:s});d.subscribe(async e=>{let t;for(let i=0;i<e.values.length;i++){t=e.values[i];const s=JSON.stringify(t.data,null,2);document.getElementById("json-container").innerHTML=s}},["data"]),d.connect()}]);