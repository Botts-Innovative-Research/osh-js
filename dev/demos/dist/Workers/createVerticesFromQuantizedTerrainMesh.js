define(["./AxisAlignedBoundingBox-b0cd1e39","./Matrix2-92b7fb9d","./when-8166c7dd","./TerrainEncoding-315b224c","./IndexDatatype-797210ca","./ComponentDatatype-9ed50558","./RuntimeError-4fdc4459","./Transforms-62a339c3","./WebMercatorProjection-6ac42c0a","./createTaskProcessorWorker","./AttributeCompression-212262a3","./WebGLConstants-0664004c","./combine-a5c4cc47"],(function(e,t,r,i,n,o,a,s,h,c,d,u,I){"use strict";function l(){a.DeveloperError.throwInstantiationError()}Object.defineProperties(l.prototype,{errorEvent:{get:a.DeveloperError.throwInstantiationError},credit:{get:a.DeveloperError.throwInstantiationError},tilingScheme:{get:a.DeveloperError.throwInstantiationError},ready:{get:a.DeveloperError.throwInstantiationError},readyPromise:{get:a.DeveloperError.throwInstantiationError},hasWaterMask:{get:a.DeveloperError.throwInstantiationError},hasVertexNormals:{get:a.DeveloperError.throwInstantiationError},availability:{get:a.DeveloperError.throwInstantiationError}});var m=[];l.getRegularGridIndices=function(e,t){if(e*t>=o.CesiumMath.FOUR_GIGABYTES)throw new a.DeveloperError("The total number of vertices (width * height) must be less than 4,294,967,296.");var i=m[e];r.defined(i)||(m[e]=i=[]);var n=i[t];return r.defined(n)||v(e,t,n=e*t<o.CesiumMath.SIXTY_FOUR_KILOBYTES?i[t]=new Uint16Array((e-1)*(t-1)*6):i[t]=new Uint32Array((e-1)*(t-1)*6),0),n};var g=[];l.getRegularGridIndicesAndEdgeIndices=function(e,t){if(e*t>=o.CesiumMath.FOUR_GIGABYTES)throw new a.DeveloperError("The total number of vertices (width * height) must be less than 4,294,967,296.");var i=g[e];r.defined(i)||(g[e]=i=[]);var n=i[t];if(!r.defined(n)){var s=l.getRegularGridIndices(e,t),h=E(e,t),c=h.westIndicesSouthToNorth,d=h.southIndicesEastToWest,u=h.eastIndicesNorthToSouth,I=h.northIndicesWestToEast;n=i[t]={indices:s,westIndicesSouthToNorth:c,southIndicesEastToWest:d,eastIndicesNorthToSouth:u,northIndicesWestToEast:I}}return n};var T=[];function E(e,t){var r,i=new Array(t),n=new Array(e),o=new Array(t),a=new Array(e);for(r=0;r<e;++r)a[r]=r,n[r]=e*t-1-r;for(r=0;r<t;++r)o[r]=(r+1)*e-1,i[r]=(t-r-1)*e;return{westIndicesSouthToNorth:i,southIndicesEastToWest:n,eastIndicesNorthToSouth:o,northIndicesWestToEast:a}}function v(e,t,r,i){for(var n=0,o=0;o<t-1;++o){for(var a=0;a<e-1;++a){var s=n,h=s+e,c=h+1,d=s+1;r[i++]=s,r[i++]=h,r[i++]=d,r[i++]=d,r[i++]=h,r[i++]=c,++n}++n}}function f(e,t,r,i){for(var n=e[0],o=e.length,a=1;a<o;++a){var s=e[a];r[i++]=n,r[i++]=s,r[i++]=t,r[i++]=t,r[i++]=s,r[i++]=t+1,n=s,++t}return i}l.getRegularGridAndSkirtIndicesAndEdgeIndices=function(e,t){if(e*t>=o.CesiumMath.FOUR_GIGABYTES)throw new a.DeveloperError("The total number of vertices (width * height) must be less than 4,294,967,296.");var i=T[e];r.defined(i)||(T[e]=i=[]);var s=i[t];if(!r.defined(s)){var h=e*t,c=(e-1)*(t-1)*6,d=2*e+2*t,u=h+d,I=c+6*Math.max(0,d-4),m=E(e,t),g=m.westIndicesSouthToNorth,f=m.southIndicesEastToWest,p=m.eastIndicesNorthToSouth,w=m.northIndicesWestToEast,y=n.IndexDatatype.createTypedArray(u,I);v(e,t,y,0),l.addSkirtIndices(g,f,p,w,h,y,c),s=i[t]={indices:y,westIndicesSouthToNorth:g,southIndicesEastToWest:f,eastIndicesNorthToSouth:p,northIndicesWestToEast:w,indexCountWithoutSkirts:c}}return s},l.addSkirtIndices=function(e,t,r,i,n,o,a){var s=n;a=f(e,s,o,a),a=f(t,s+=e.length,o,a),a=f(r,s+=t.length,o,a),f(i,s+=r.length,o,a)},l.heightmapTerrainQuality=.25,l.getEstimatedLevelZeroGeometricErrorForAHeightmap=function(e,t,r){return 2*e.maximumRadius*Math.PI*l.heightmapTerrainQuality/(t*r)},l.prototype.requestTileGeometry=a.DeveloperError.throwInstantiationError,l.prototype.getLevelMaximumGeometricError=a.DeveloperError.throwInstantiationError,l.prototype.getTileDataAvailable=a.DeveloperError.throwInstantiationError,l.prototype.loadTileDataAvailability=a.DeveloperError.throwInstantiationError;var p=32767,w=new t.Cartesian3,y=new t.Cartesian3,N=new t.Cartesian3,S=new t.Cartographic,b=new t.Cartesian2;function M(e,r,i,n,a,s,h,c,d){var u=Number.POSITIVE_INFINITY,I=a.north,l=a.south,m=a.east,g=a.west;m<g&&(m+=o.CesiumMath.TWO_PI);for(var T=e.length,E=0;E<T;++E){var v=e[E],f=i[v],p=n[v];S.longitude=o.CesiumMath.lerp(g,m,p.x),S.latitude=o.CesiumMath.lerp(l,I,p.y),S.height=f-r;var y=s.cartographicToCartesian(S,w);t.Matrix4.multiplyByPoint(h,y,y),t.Cartesian3.minimumByComponent(y,c,c),t.Cartesian3.maximumByComponent(y,d,d),u=Math.min(u,S.height)}return u}function x(e,t,i,n,a,s,c,d,u,I,l,m,g,T){var E=r.defined(c),v=u.north,f=u.south,p=u.east,y=u.west;p<y&&(p+=o.CesiumMath.TWO_PI);for(var N=i.length,M=0;M<N;++M){var x=i[M],A=a[x],C=s[x];S.longitude=o.CesiumMath.lerp(y,p,C.x)+g,S.latitude=o.CesiumMath.lerp(f,v,C.y)+T,S.height=A-I;var W,D,P=d.cartographicToCartesian(S,w);if(E){var G=2*x;b.x=c[G],b.y=c[G+1]}n.hasWebMercatorT&&(W=(h.WebMercatorProjection.geodeticLatitudeToMercatorAngle(S.latitude)-l)*m),n.hasGeodeticSurfaceNormals&&(D=d.geodeticSurfaceNormal(P)),t=n.encode(e,t,P,C,S.height,b,W,D)}}function A(e,t){var i;return"function"==typeof e.slice&&"function"!=typeof(i=e.slice()).sort&&(i=void 0),r.defined(i)||(i=Array.prototype.slice.call(e)),i.sort(t),i}return c((function(a,c){var d,u,I=a.quantizedVertices,m=I.length/3,g=a.octEncodedNormals,T=a.westIndices.length+a.eastIndices.length+a.southIndices.length+a.northIndices.length,E=a.includeWebMercatorT,v=a.exaggeration,f=a.exaggerationRelativeHeight,C=1!==v,W=t.Rectangle.clone(a.rectangle),D=W.west,P=W.south,G=W.east,F=W.north,_=t.Ellipsoid.clone(a.ellipsoid),k=a.minimumHeight,Y=a.maximumHeight,H=a.relativeToCenter,O=s.Transforms.eastNorthUpToFixedFrame(H,_),B=t.Matrix4.inverseTransformation(O,new t.Matrix4);E&&(d=h.WebMercatorProjection.geodeticLatitudeToMercatorAngle(P),u=1/(h.WebMercatorProjection.geodeticLatitudeToMercatorAngle(F)-d));var V=I.subarray(0,m),R=I.subarray(m,2*m),L=I.subarray(2*m,3*m),U=r.defined(g),j=new Array(m),z=new Array(m),q=new Array(m),Q=E?new Array(m):[],K=C?new Array(m):[],X=y;X.x=Number.POSITIVE_INFINITY,X.y=Number.POSITIVE_INFINITY,X.z=Number.POSITIVE_INFINITY;var Z=N;Z.x=Number.NEGATIVE_INFINITY,Z.y=Number.NEGATIVE_INFINITY,Z.z=Number.NEGATIVE_INFINITY;for(var J=Number.POSITIVE_INFINITY,$=Number.NEGATIVE_INFINITY,ee=Number.POSITIVE_INFINITY,te=Number.NEGATIVE_INFINITY,re=0;re<m;++re){var ie=V[re],ne=R[re],oe=ie/p,ae=ne/p,se=o.CesiumMath.lerp(k,Y,L[re]/p);S.longitude=o.CesiumMath.lerp(D,G,oe),S.latitude=o.CesiumMath.lerp(P,F,ae),S.height=se,J=Math.min(S.longitude,J),$=Math.max(S.longitude,$),ee=Math.min(S.latitude,ee),te=Math.max(S.latitude,te);var he=_.cartographicToCartesian(S);j[re]=new t.Cartesian2(oe,ae),z[re]=se,q[re]=he,E&&(Q[re]=(h.WebMercatorProjection.geodeticLatitudeToMercatorAngle(S.latitude)-d)*u),C&&(K[re]=_.geodeticSurfaceNormal(he)),t.Matrix4.multiplyByPoint(B,he,w),t.Cartesian3.minimumByComponent(w,X,X),t.Cartesian3.maximumByComponent(w,Z,Z)}var ce,de=A(a.westIndices,(function(e,t){return j[e].y-j[t].y})),ue=A(a.eastIndices,(function(e,t){return j[t].y-j[e].y})),Ie=A(a.southIndices,(function(e,t){return j[t].x-j[e].x})),le=A(a.northIndices,(function(e,t){return j[e].x-j[t].x}));k<0&&(ce=new i.EllipsoidalOccluder(_).computeHorizonCullingPointPossiblyUnderEllipsoid(H,q,k));var me=k;me=Math.min(me,M(a.westIndices,a.westSkirtHeight,z,j,W,_,B,X,Z)),me=Math.min(me,M(a.southIndices,a.southSkirtHeight,z,j,W,_,B,X,Z)),me=Math.min(me,M(a.eastIndices,a.eastSkirtHeight,z,j,W,_,B,X,Z)),me=Math.min(me,M(a.northIndices,a.northSkirtHeight,z,j,W,_,B,X,Z));for(var ge=new e.AxisAlignedBoundingBox(X,Z,H),Te=new i.TerrainEncoding(H,ge,me,Y,O,U,E,C,v,f),Ee=Te.stride,ve=new Float32Array(m*Ee+T*Ee),fe=0,pe=0;pe<m;++pe){if(U){var we=2*pe;b.x=g[we],b.y=g[we+1]}fe=Te.encode(ve,fe,q[pe],j[pe],z[pe],b,Q[pe],K[pe])}var ye=Math.max(0,2*(T-4)),Ne=a.indices.length+3*ye,Se=n.IndexDatatype.createTypedArray(m+T,Ne);Se.set(a.indices,0);var be=1e-4,Me=($-J)*be,xe=(te-ee)*be,Ae=-Me,Ce=Me,We=xe,De=-xe,Pe=m*Ee;return x(ve,Pe,de,Te,z,j,g,_,W,a.westSkirtHeight,d,u,Ae,0),x(ve,Pe+=a.westIndices.length*Ee,Ie,Te,z,j,g,_,W,a.southSkirtHeight,d,u,0,De),x(ve,Pe+=a.southIndices.length*Ee,ue,Te,z,j,g,_,W,a.eastSkirtHeight,d,u,Ce,0),x(ve,Pe+=a.eastIndices.length*Ee,le,Te,z,j,g,_,W,a.northSkirtHeight,d,u,0,We),l.addSkirtIndices(de,Ie,ue,le,m,Se,a.indices.length),c.push(ve.buffer,Se.buffer),{vertices:ve.buffer,indices:Se.buffer,westIndicesSouthToNorth:de,southIndicesEastToWest:Ie,eastIndicesNorthToSouth:ue,northIndicesWestToEast:le,vertexStride:Ee,center:H,minimumHeight:k,maximumHeight:Y,occludeePointInScaledSpace:ce,encoding:Te,indexCountWithoutSkirts:a.indices.length}}))}));