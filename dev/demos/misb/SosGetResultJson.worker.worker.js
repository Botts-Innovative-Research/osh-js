!function(){"use strict";function t(t){return null!=t}function e(){return"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){let e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))}Math.pow(2,53);const s="disconnected",i="closed-error";var n=class{constructor(t,i){this.url=t,this.properties=i,this.id="DataConnector-"+e(),this.reconnectTimeout=12e4,this.status=s,this.reconnectionInterval=-1}checkAndClearReconnection(){-1!==this.reconnectionInterval&&(clearInterval(this.reconnectionInterval),this.reconnectionInterval=-1)}disconnect(){this.checkStatus(s),this.checkAndClearReconnection()}setUrl(t){this.url=t}getId(){return this.id}getUrl(){return this.url}setReconnectTimeout(t){this.reconnectTimeout=t}onReconnect(){return!0}connect(){}forceReconnect(){this.disconnect(),this.connect()}onChangeStatus(t){}checkStatus(t){t!==this.status&&(this.onChangeStatus(t),this.status=t)}onDisconnect(){}onConnect(){}},a=class extends n{constructor(t,e){super(t,e),this.interval=-1,this.lastReceiveTime=0}doRequest(e="",n){if(!this.init){let a=this.getUrl()+e;t(n)&&(a+="?"+n),this.closed=!1,this.init=!0,this.ws=new WebSocket(a),this.ws.binaryType="arraybuffer",this.checkStatus("connecting"),console.warn("WebSocket stream connecting"),this.ws.onopen=function(t){this.checkAndClearReconnection(),this.checkStatus("connected"),console.warn("WebSocket stream connected")}.bind(this),this.ws.onmessage=function(t){this.lastReceiveTime=Date.now(),t.data.byteLength>0&&this.onMessage(t.data)}.bind(this),this.ws.onerror=function(t){console.error("WebSocket stream error"),this.checkStatus(i),this.init=!1,this.lastReceiveTime=-1,this.createReconnection()}.bind(this),this.ws.onclose=t=>{console.warn("WebSocket stream closed: ",t.reason,t.code),1e3===t.code||this.closed?this.checkStatus(s):(this.checkStatus(i),this.createReconnection())},-1!==this.reconnectionInterval&&(clearInterval(this.reconnectionInterval),this.reconnectionInterval=-1)}}connect(){this.doRequest()}createReconnection(){!this.closed&&-1===this.reconnectionInterval&&this.onReconnect()&&(this.reconnectionInterval=setInterval(function(){let t=Date.now()-this.lastReceiveTime;(-1===this.lastReceiveTime||t>=this.reconnectTimeout)&&(console.warn("trying to reconnect",this.url),this.init=!1,this.connect())}.bind(this),this.reconnectTimeout))}disconnect(){super.disconnect(),this.init=!1,this.closed=!0,null!=this.ws&&this.ws.readyState!==WebSocket.CLOSED&&this.ws.close()}onMessage(t){}isConnected(){return null!=this.ws&&this.ws.readyState===WebSocket.OPEN}},o=class extends n{constructor(t){super(t),this.lastReceiveTime=-1,this.interval=-1,this.broadcastChannel=null}connect(){null===this.broadcastChannel&&(this.broadcastChannel=new BroadcastChannel(this.getUrl()),this.broadcastChannel.onmessage=t=>{this.lastReceiveTime=Date.now(),this.onMessage(t.data.data)},this.broadcastChannel.onerror=t=>{console.error("BroadcastChannel stream error: "+t),this.broadcastChannel.close(),this.init=!1,this.lastReceiveTime=-1,this.opened=!1},this.opened=!0,-1===this.interval&&(this.interval=setInterval(function(){let t=Date.now()-this.lastReceiveTime;(-1===this.lastReceiveTime||t>=this.reconnectTimeout)&&(console.warn(`trying to reconnect after ${this.reconnectTimeout} ..`),this.reconnect())}.bind(this),this.reconnectTimeout)))}disconnect(){this.fullDisconnect(!0)}fullDisconnect(t){null!=this.broadcastChannel&&(this.broadcastChannel.close(),this.broadcastChannel=null),t&&clearInterval(this.interval),this.opened=!1}reconnect(){this.onReconnect(),this.init&&this.fullDisconnect(!1),this.connect()}onMessage(t){}close(){this.disconnect()}isConnected(){return null!==this.broadcastChannel&&this.opened}};var r=class extends n{constructor(e,s){super(e,s),this.method="POST",t(s)&&(s.method&&(this.method=s.method),s.headers&&(this.headers=s.headers))}async doRequest(e="",s,i){let n=this.getUrl()+e;t(s)&&(n+="?"+s);const a=fetch(n,{method:this.method,headers:this.headers}).then((function(t){return t.arrayBuffer()})),o=await a;return this.onMessage(o),o}onError(t){}onMessage(t){}disconnect(){}connect(){return this.doRequest()}isConnected(){return!1}};const c=new class extends class{constructor(t,s){this.parser=t,this.connector=null,this.reconnectTimeout=1e4,this.values=[],this.version=-Number.MAX_SAFE_INTEGER,this.id=e(),this.initialized=!1}init(t,e,s){this.dataSourceId=s,null!==this.connector&&(this.connector.disconnect(),this.connector=null),this.setTopic(e);const i=t;this.handleProperties(i),this.createDataConnector(this.properties),this.initialized=!0}handleProperties(e){t(e.bufferingTime)&&(this.bufferingTime=e.bufferingTime),t(e.timeOut)&&(this.timeOut=e.timeOut),t(e.reconnectTimeout)&&(this.reconnectTimeout=e.reconnectTimeout),this.properties=e}async createDataConnector(e,s){this.updatedProperties=e;const i=e.tls?"s":"",n=e.protocol+i+"://"+e.endpointUrl;t(s)?this.connector=s:e.protocol.startsWith("ws")?this.connector=new a(n):e.protocol.startsWith("http")?this.connector=new r(n,{responseType:e.responseType||"arraybuffer",method:"GET"}):"topic"===e.protocol&&(this.connector=new o(n)),await this.setUpConnector(e)}async setUpConnector(t){null!==this.connector&&(this.connector.setReconnectTimeout(this.reconnectTimeout),this.connector.onMessage=this.onMessage.bind(this),this.connector.onChangeStatus=this.onChangeStatus.bind(this),await this.updateAferCreatingConnector(t))}async updateAferCreatingConnector(t){}setTopic(e){this.topic!==e&&(t(this.broadcastChannel)&&(console.warn(`Replace old topic ${this.topic} by ${e}`),this.broadcastChannel.close()),this.broadcastChannel=new BroadcastChannel(e),this.topic=e)}connect(){null!==this.connector&&this.connector.doRequest("",this.parser.buildUrl(this.updatedProperties))}disconnect(){null!==this.connector&&this.connector.disconnect()}async onMessage(e){const s=await Promise.resolve(this.parser.parseData(e));if(Array.isArray(s))for(let e=0;e<s.length;e++)this.values.push({data:s[e],version:this.version}),t(this.batchSize)&&this.values.length>=this.batchSize&&this.flush();else this.values.push({data:s,version:this.version});this.isConnected()?t(this.batchSize)&&0!==this.values.length&&this.values.length>=this.batchSize&&this.flush():this.flushAll()}onChangeStatus(t){t===s&&this.flushAll(),this.broadcastChannel.postMessage({type:"status",status:t,dataSourceId:this.dataSourceId})}updateProperties(t){this.disconnect(),this.createDataConnector({...this.properties,...t}),this.version++,this.connect()}flushAll(){for(;this.values.length>0;)this.flush()}flush(){let e=this.values.length;t(this.batchSize)&&this.values.length>this.batchSize&&(e=this.batchSize),this.broadcastChannel.postMessage({dataSourceId:this.dataSourceId,type:"data",values:this.values.splice(0,e)})}isConnected(){return null!==this.connector&&this.connector.isConnected()}handleMessage(t,e){let s;if("init"===t.message)this.initialized||this.init(t.properties,t.topic,t.id),s=this.initialized;else if("connect"===t.message)this.connect();else if("disconnect"===t.message)this.disconnect();else if("topic"===t.message)this.setTopic(t.topic);else if("update-url"===t.message)this.updateProperties(t.data);else if("is-connected"===t.message)s=this.isConnected();else{if("is-init"!==t.message)return;s=this.initialized}e.postMessage({message:t.message,data:s,messageId:t.messageId})}}{constructor(t){super(t),this.lastTimeStamp=null,this.lastStartTime="now",this.timeShift=0,this.timeBroadcastChannel=null}async createDataConnector(e,s){super.createDataConnector({...e,timeShift:this.timeShift},s);const i=this.parser&&this.parser.lastStartTime||e.startTime;this.connector.onReconnect=()=>("now"!==i&&this.connector.setUrl(this.parser.buildUrl({...e,lastTimeStamp:t(this.lastTimeStamp)?new Date(this.lastTimeStamp).toISOString():e.startTime})),!0)}handleProperties(e){super.handleProperties(e),t(e.timeShift)&&(this.timeShift=e.timeShift),"now"===e.startTime?this.batchSize=1:(t(e.replaySpeed)&&(t(e.batchSize)||(this.batchSize=1)),t(e.batchSize)&&(this.batchSize=e.batchSize))}async onMessage(e){const s=await Promise.resolve(this.parser.parseTimeStamp(e)+this.timeShift),i=await Promise.resolve(this.parser.parseData(e));if(Array.isArray(i))for(let t=0;t<i.length;t++)this.values.push({data:i[t],timeStamp:s,version:this.version});else this.values.push({data:i,timeStamp:s,version:this.version});this.lastTimeStamp=s,("now"===this.parser.lastStartTime||t(this.batchSize)&&this.values.length>=this.batchSize)&&(this.flush(),null!==this.timeBroadcastChannel&&this.timeBroadcastChannel.postMessage({timestamp:this.lastTimeStamp,type:"time"}))}getLastTimeStamp(){return this.lastTimeStamp}async updateProperties(e){try{this.disconnect(),this.timeBroadcastChannel.postMessage({dataSourceId:this.dataSourceId,type:"time-changed"});let s=new Date(this.lastTimeStamp).toISOString();e.hasOwnProperty("startTime")?s=e.startTime:"now"===this.properties.startTime&&(s="now"),this.version++,await this.createDataConnector({...this.properties,...e,lastTimeStamp:s}),t(e)&&t(e.reconnect)&&e.reconnect&&this.connect()}catch(t){console.error(t)}}handleMessage(t,e){let s;if(super.handleMessage(t,e),"last-timestamp"===t.message)s=this.getLastTimeStamp();else{if("topic"!==t.message)return;this.setTimeTopic(t.timeTopic)}e.postMessage({message:t.message,data:s,messageId:t.messageId})}setTimeTopic(t){this.timeTopic!==t&&(null!==this.timeBroadcastChannel&&(console.warn(`Replace old topic ${this.timeTopic} by ${t}`),this.timeBroadcastChannel.close()),this.timeBroadcastChannel=new BroadcastChannel(t),this.timeTopic=t)}}(new class extends class extends class{buildUrl(e){let s="";if(s="service="+e.service,s+="&version=2.0&",e.responseFormat&&(s+="&responseFormat="+e.responseFormat),t(e.customUrlParams)&&Object.keys(e.customUrlParams).length>0){s+="&";for(let t in e.customUrlParams)s+=t+"="+e.customUrlParams[t]+"&";s.endsWith("&")&&(s=s.slice(0,-1))}return s}}{buildUrl(e){let s=super.buildUrl(e);s+="&request=GetResult",s+="&offering="+e.offeringID,s+="&observedProperty="+e.observedProperty;const i=t(e.lastTimeStamp)?e.lastTimeStamp:e.startTime;return this.lastStartTime=e.startTime,s+="&temporalFilter=phenomenonTime,"+i+"/"+e.endTime,e.replaySpeed&&(s+="&replaySpeed="+e.replaySpeed),s}}{parseTimeStamp(t){let e=String.fromCharCode.apply(null,new Uint8Array(t));return new Date(JSON.parse(e).time).getTime()}parseData(t){let e=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(t))),s={};for(let t in e)"time"!==t&&(s[t]=e[t]);return s}buildUrl(t){let e=super.buildUrl({...t,responseFormat:"application/json"});return t.foiId&&""!==t.of&&(e+="&featureOfInterest="+t.foiId),e}},self);self.onmessage=t=>{c.handleMessage(t.data,self)}}();